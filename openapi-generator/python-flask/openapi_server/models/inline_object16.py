# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class InlineObject16(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, external_ids=None, harsh_accel_setting=None, name=None):  # noqa: E501
        """InlineObject16 - a model defined in OpenAPI

        :param external_ids: The external_ids of this InlineObject16.  # noqa: E501
        :type external_ids: Dict[str, str]
        :param harsh_accel_setting: The harsh_accel_setting of this InlineObject16.  # noqa: E501
        :type harsh_accel_setting: int
        :param name: The name of this InlineObject16.  # noqa: E501
        :type name: str
        """
        self.openapi_types = {
            'external_ids': Dict[str, str],
            'harsh_accel_setting': int,
            'name': str
        }

        self.attribute_map = {
            'external_ids': 'externalIds',
            'harsh_accel_setting': 'harsh_accel_setting',
            'name': 'name'
        }

        self._external_ids = external_ids
        self._harsh_accel_setting = harsh_accel_setting
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'InlineObject16':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_object_16 of this InlineObject16.  # noqa: E501
        :rtype: InlineObject16
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_ids(self):
        """Gets the external_ids of this InlineObject16.


        :return: The external_ids of this InlineObject16.
        :rtype: Dict[str, str]
        """
        return self._external_ids

    @external_ids.setter
    def external_ids(self, external_ids):
        """Sets the external_ids of this InlineObject16.


        :param external_ids: The external_ids of this InlineObject16.
        :type external_ids: Dict[str, str]
        """

        self._external_ids = external_ids

    @property
    def harsh_accel_setting(self):
        """Gets the harsh_accel_setting of this InlineObject16.

        Harsh Event Detection Setting * 0: Passenger * 1: Light Truck * 2: Heavy * 3: Off * 4: Automatic  # noqa: E501

        :return: The harsh_accel_setting of this InlineObject16.
        :rtype: int
        """
        return self._harsh_accel_setting

    @harsh_accel_setting.setter
    def harsh_accel_setting(self, harsh_accel_setting):
        """Sets the harsh_accel_setting of this InlineObject16.

        Harsh Event Detection Setting * 0: Passenger * 1: Light Truck * 2: Heavy * 3: Off * 4: Automatic  # noqa: E501

        :param harsh_accel_setting: The harsh_accel_setting of this InlineObject16.
        :type harsh_accel_setting: int
        """

        self._harsh_accel_setting = harsh_accel_setting

    @property
    def name(self):
        """Gets the name of this InlineObject16.

        Name  # noqa: E501

        :return: The name of this InlineObject16.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineObject16.

        Name  # noqa: E501

        :param name: The name of this InlineObject16.
        :type name: str
        """

        self._name = name

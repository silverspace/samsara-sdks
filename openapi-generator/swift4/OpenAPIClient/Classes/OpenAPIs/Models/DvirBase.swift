//
// DvirBase.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct DvirBase: Codable {

    public var authorSignature: DvirBaseAuthorSignature?
    /** Signifies if the defects on the vehicle corrected after the DVIR is done. */
    public var defectsCorrected: Bool?
    /** Signifies if the defects on this vehicle can be ignored. */
    public var defectsNeedNotBeCorrected: Bool?
    /** The id of this DVIR record. */
    public var _id: Int64?
    /** Inspection type of the DVIR. */
    public var inspectionType: String?
    /** The mechanics notes on the DVIR. */
    public var mechanicNotes: String?
    public var mechanicOrAgentSignature: DvirBaseMechanicOrAgentSignature?
    public var nextDriverSignature: DvirBaseNextDriverSignature?
    /** The odometer reading in miles for the vehicle when the DVIR was done. */
    public var odometerMiles: Int64?
    /** Timestamp of this DVIR in UNIX milliseconds. */
    public var timeMs: Int64?
    /** Defects registered for the trailer which was part of the DVIR. */
    public var trailerDefects: [DvirBaseTrailerDefects]?
    /** The id of the trailer which was part of the DVIR. */
    public var trailerId: Int?
    /** The name of the trailer which was part of the DVIR. */
    public var trailerName: String?
    public var vehicle: DvirBaseVehicle?
    /** The condition of vechile on which DVIR was done. */
    public var vehicleCondition: String?
    /** Defects registered for the vehicle which was part of the DVIR. */
    public var vehicleDefects: [DvirBaseTrailerDefects]?

    public init(authorSignature: DvirBaseAuthorSignature?, defectsCorrected: Bool?, defectsNeedNotBeCorrected: Bool?, _id: Int64?, inspectionType: String?, mechanicNotes: String?, mechanicOrAgentSignature: DvirBaseMechanicOrAgentSignature?, nextDriverSignature: DvirBaseNextDriverSignature?, odometerMiles: Int64?, timeMs: Int64?, trailerDefects: [DvirBaseTrailerDefects]?, trailerId: Int?, trailerName: String?, vehicle: DvirBaseVehicle?, vehicleCondition: String?, vehicleDefects: [DvirBaseTrailerDefects]?) {
        self.authorSignature = authorSignature
        self.defectsCorrected = defectsCorrected
        self.defectsNeedNotBeCorrected = defectsNeedNotBeCorrected
        self._id = _id
        self.inspectionType = inspectionType
        self.mechanicNotes = mechanicNotes
        self.mechanicOrAgentSignature = mechanicOrAgentSignature
        self.nextDriverSignature = nextDriverSignature
        self.odometerMiles = odometerMiles
        self.timeMs = timeMs
        self.trailerDefects = trailerDefects
        self.trailerId = trailerId
        self.trailerName = trailerName
        self.vehicle = vehicle
        self.vehicleCondition = vehicleCondition
        self.vehicleDefects = vehicleDefects
    }

    public enum CodingKeys: String, CodingKey { 
        case authorSignature
        case defectsCorrected
        case defectsNeedNotBeCorrected
        case _id = "id"
        case inspectionType
        case mechanicNotes
        case mechanicOrAgentSignature
        case nextDriverSignature
        case odometerMiles
        case timeMs
        case trailerDefects
        case trailerId
        case trailerName
        case vehicle
        case vehicleCondition
        case vehicleDefects
    }


}


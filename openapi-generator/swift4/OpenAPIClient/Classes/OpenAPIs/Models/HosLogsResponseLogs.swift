//
// HosLogsResponseLogs.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct HosLogsResponseLogs: Codable {

    /** Longitude at which the log was recorded. */
    public var locLng: Double?
    /** The time at which the log/HOS status started in UNIX milliseconds. */
    public var logStartMs: Int64?
    /** ID of the driver. */
    public var driverId: Int64?
    /** The Hours of Service status type. One of &#x60;OFF_DUTY&#x60;, &#x60;SLEEPER_BED&#x60;, &#x60;DRIVING&#x60;, &#x60;ON_DUTY&#x60;, &#x60;YARD_MOVE&#x60;, &#x60;PERSONAL_CONVEYANCE&#x60;. */
    public var statusType: String?
    /** City in which the log was recorded. */
    public var locCity: String?
    /** ID of the group. */
    public var groupId: Int64?
    /** Name of location at which the log was recorded. */
    public var locName: String?
    /** Latitude at which the log was recorded. */
    public var locLat: Double?
    /** Remark associated with the log entry. */
    public var remark: String?
    /** State in which the log was recorded. */
    public var locState: String?
    /** ID of the vehicle. */
    public var vehicleId: Int64?
    public var codriverIds: [Int64]?

    public init(locLng: Double?, logStartMs: Int64?, driverId: Int64?, statusType: String?, locCity: String?, groupId: Int64?, locName: String?, locLat: Double?, remark: String?, locState: String?, vehicleId: Int64?, codriverIds: [Int64]?) {
        self.locLng = locLng
        self.logStartMs = logStartMs
        self.driverId = driverId
        self.statusType = statusType
        self.locCity = locCity
        self.groupId = groupId
        self.locName = locName
        self.locLat = locLat
        self.remark = remark
        self.locState = locState
        self.vehicleId = vehicleId
        self.codriverIds = codriverIds
    }


}


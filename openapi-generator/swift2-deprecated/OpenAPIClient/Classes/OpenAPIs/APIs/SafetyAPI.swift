//
// SafetyAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Alamofire



public class SafetyAPI: APIBase {
    /**
     /fleet/drivers/{driverId:[0-9]+}/safety/score
     
     - parameter driverId: (path) ID of the driver 
     - parameter accessToken: (query) Samsara API access token. 
     - parameter startMs: (query) Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. 
     - parameter endMs: (query) Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getDriverSafetyScore(driverId driverId: Int64, accessToken: String, startMs: Int64, endMs: Int64, completion: ((data: DriverSafetyScoreResponse?, error: ErrorType?) -> Void)) {
        getDriverSafetyScoreWithRequestBuilder(driverId: driverId, accessToken: accessToken, startMs: startMs, endMs: endMs).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     /fleet/drivers/{driverId:[0-9]+}/safety/score
     - GET /fleet/drivers/{driverId}/safety/score
     - Fetch the safety score for the driver.     - examples: [{contentType=application/json, example={
  "crashCount" : 0,
  "driverId" : 1234,
  "harshAccelCount" : 1,
  "harshEvents" : [ {
    "harshEventType" : "Harsh Braking",
    "vehicleId" : 212014918086169,
    "timestampMs" : 1535590776000
  }, {
    "harshEventType" : "Harsh Braking",
    "vehicleId" : 212014918086169,
    "timestampMs" : 1535590776000
  } ],
  "totalDistanceDrivenMeters" : 291836,
  "safetyScore" : 97,
  "totalHarshEventCount" : 3,
  "totalTimeDrivenMs" : 19708293,
  "harshTurningCount" : 0,
  "timeOverSpeedLimitMs" : 3769,
  "harshBrakingCount" : 2,
  "safetyScoreRank" : "26"
}, statusCode=200}]
     - parameter driverId: (path) ID of the driver 
     - parameter accessToken: (query) Samsara API access token. 
     - parameter startMs: (query) Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. 
     - parameter endMs: (query) Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. 

     - returns: RequestBuilder<DriverSafetyScoreResponse> 
     */
    public class func getDriverSafetyScoreWithRequestBuilder(driverId driverId: Int64, accessToken: String, startMs: Int64, endMs: Int64) -> RequestBuilder<DriverSafetyScoreResponse> {
        var path = "/fleet/drivers/{driverId}/safety/score"
        path = path.stringByReplacingOccurrencesOfString("{driverId}", withString: "\(driverId)", options: .LiteralSearch, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "access_token": accessToken,
            "startMs": startMs.encodeToJSON(),
            "endMs": endMs.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<DriverSafetyScoreResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     /fleet/vehicles/{vehicleId:[0-9]+}/safety/harsh_event
     
     - parameter vehicleId: (path) ID of the vehicle 
     - parameter accessToken: (query) Samsara API access token. 
     - parameter timestamp: (query) Timestamp in milliseconds representing the timestamp of a harsh event. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getVehicleHarshEvent(vehicleId vehicleId: Int64, accessToken: String, timestamp: Int64, completion: ((data: VehicleHarshEventResponse?, error: ErrorType?) -> Void)) {
        getVehicleHarshEventWithRequestBuilder(vehicleId: vehicleId, accessToken: accessToken, timestamp: timestamp).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     /fleet/vehicles/{vehicleId:[0-9]+}/safety/harsh_event
     - GET /fleet/vehicles/{vehicleId}/safety/harsh_event
     - Fetch harsh event details for a vehicle.     - examples: [{contentType=application/json, example={
  "downloadForwardVideoUrl" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com/123/212123456789012/1539201872984/abC123De4-camera-video-segment-123456789.mp4?...",
  "downloadInwardVideoUrl" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com/123/212123456789012/1539201872984/abC123De4-camera-video-segment-driver-123456789.mp4?...",
  "incidentReportUrl" : "https://cloud.samsara.com/groups/1234/fleet/reports/safety/vehicle/212123456789012/incident/1539201882984",
  "harshEventType" : "Harsh Braking",
  "location" : {
    "address" : "350 Rhode Island St, San Francisco, CA",
    "latitude" : "33.07614328",
    "longitude" : "-96.14907287"
  },
  "downloadTrackedInwardVideoUrl" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com/123/212123456789012/1539201872984/abC123De4-camera-video-segment-driver-123456789.tracked.mp4?...",
  "isDistracted" : true
}, statusCode=200}]
     - parameter vehicleId: (path) ID of the vehicle 
     - parameter accessToken: (query) Samsara API access token. 
     - parameter timestamp: (query) Timestamp in milliseconds representing the timestamp of a harsh event. 

     - returns: RequestBuilder<VehicleHarshEventResponse> 
     */
    public class func getVehicleHarshEventWithRequestBuilder(vehicleId vehicleId: Int64, accessToken: String, timestamp: Int64) -> RequestBuilder<VehicleHarshEventResponse> {
        var path = "/fleet/vehicles/{vehicleId}/safety/harsh_event"
        path = path.stringByReplacingOccurrencesOfString("{vehicleId}", withString: "\(vehicleId)", options: .LiteralSearch, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "access_token": accessToken,
            "timestamp": timestamp.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<VehicleHarshEventResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     /fleet/vehicles/{vehicleId:[0-9]+}/safety/score
     
     - parameter vehicleId: (path) ID of the vehicle 
     - parameter accessToken: (query) Samsara API access token. 
     - parameter startMs: (query) Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. 
     - parameter endMs: (query) Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getVehicleSafetyScore(vehicleId vehicleId: Int64, accessToken: String, startMs: Int64, endMs: Int64, completion: ((data: VehicleSafetyScoreResponse?, error: ErrorType?) -> Void)) {
        getVehicleSafetyScoreWithRequestBuilder(vehicleId: vehicleId, accessToken: accessToken, startMs: startMs, endMs: endMs).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     /fleet/vehicles/{vehicleId:[0-9]+}/safety/score
     - GET /fleet/vehicles/{vehicleId}/safety/score
     - Fetch the safety score for the vehicle.     - examples: [{contentType=application/json, example={
  "crashCount" : 0,
  "harshAccelCount" : 1,
  "harshEvents" : [ {
    "harshEventType" : "Harsh Braking",
    "vehicleId" : 212014918086169,
    "timestampMs" : 1535590776000
  }, {
    "harshEventType" : "Harsh Braking",
    "vehicleId" : 212014918086169,
    "timestampMs" : 1535590776000
  } ],
  "totalDistanceDrivenMeters" : 291836,
  "safetyScore" : 97,
  "totalHarshEventCount" : 3,
  "totalTimeDrivenMs" : 19708293,
  "vehicleId" : 4321,
  "harshTurningCount" : 0,
  "timeOverSpeedLimitMs" : 3769,
  "harshBrakingCount" : 2,
  "safetyScoreRank" : "26"
}, statusCode=200}]
     - parameter vehicleId: (path) ID of the vehicle 
     - parameter accessToken: (query) Samsara API access token. 
     - parameter startMs: (query) Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. 
     - parameter endMs: (query) Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. 

     - returns: RequestBuilder<VehicleSafetyScoreResponse> 
     */
    public class func getVehicleSafetyScoreWithRequestBuilder(vehicleId vehicleId: Int64, accessToken: String, startMs: Int64, endMs: Int64) -> RequestBuilder<VehicleSafetyScoreResponse> {
        var path = "/fleet/vehicles/{vehicleId}/safety/score"
        path = path.stringByReplacingOccurrencesOfString("{vehicleId}", withString: "\(vehicleId)", options: .LiteralSearch, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "access_token": accessToken,
            "startMs": startMs.encodeToJSON(),
            "endMs": endMs.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<VehicleSafetyScoreResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}

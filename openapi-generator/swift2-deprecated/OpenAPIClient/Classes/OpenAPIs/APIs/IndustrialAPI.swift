//
// IndustrialAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Alamofire



public class IndustrialAPI: APIBase {
    /**
     /industrial/data
     
     - parameter accessToken: (query) Samsara API access token. 
     - parameter groupId: (query) Optional group ID if the organization has multiple groups (uncommon). (optional)
     - parameter startMs: (query) Timestamp in unix milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. defaults to nowMs. (optional)
     - parameter endMs: (query) Timestamp in unix milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Defaults to nowMs. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAllDataInputs(accessToken accessToken: String, groupId: Int64? = nil, startMs: Int64? = nil, endMs: Int64? = nil, completion: ((data: InlineResponse2006?, error: ErrorType?) -> Void)) {
        getAllDataInputsWithRequestBuilder(accessToken: accessToken, groupId: groupId, startMs: startMs, endMs: endMs).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     /industrial/data
     - GET /industrial/data
     - Fetch all of the data inputs for a group.     - examples: [{contentType=application/json, example={
  "dataInputs" : [ {
    "name" : "Pump Flow",
    "id" : 12345,
    "points" : [ {
      "value" : 12.332,
      "timeMs" : 1453449599999
    }, {
      "value" : 12.332,
      "timeMs" : 1453449599999
    } ]
  }, {
    "name" : "Pump Flow",
    "id" : 12345,
    "points" : [ {
      "value" : 12.332,
      "timeMs" : 1453449599999
    }, {
      "value" : 12.332,
      "timeMs" : 1453449599999
    } ]
  } ]
}, statusCode=200}]
     - parameter accessToken: (query) Samsara API access token. 
     - parameter groupId: (query) Optional group ID if the organization has multiple groups (uncommon). (optional)
     - parameter startMs: (query) Timestamp in unix milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. defaults to nowMs. (optional)
     - parameter endMs: (query) Timestamp in unix milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Defaults to nowMs. (optional)

     - returns: RequestBuilder<InlineResponse2006> 
     */
    public class func getAllDataInputsWithRequestBuilder(accessToken accessToken: String, groupId: Int64? = nil, startMs: Int64? = nil, endMs: Int64? = nil) -> RequestBuilder<InlineResponse2006> {
        let path = "/industrial/data"
        let URLString = OpenAPIClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "access_token": accessToken,
            "group_id": groupId?.encodeToJSON(),
            "startMs": startMs?.encodeToJSON(),
            "endMs": endMs?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2006>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     /industrial/data/{data_input_id:[0-9]+}
     
     - parameter accessToken: (query) Samsara API access token. 
     - parameter dataInputId: (path) ID of the data input 
     - parameter startMs: (query) Timestamp in unix milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. defaults to nowMs. (optional)
     - parameter endMs: (query) Timestamp in unix milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Defaults to nowMs. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getDataInput(accessToken accessToken: String, dataInputId: Int64, startMs: Int64? = nil, endMs: Int64? = nil, completion: ((data: DataInputHistoryResponse?, error: ErrorType?) -> Void)) {
        getDataInputWithRequestBuilder(accessToken: accessToken, dataInputId: dataInputId, startMs: startMs, endMs: endMs).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     /industrial/data/{data_input_id:[0-9]+}
     - GET /industrial/data/{dataInputId}
     - Fetch datapoints from a given data input.     - examples: [{contentType=application/json, example={
  "name" : "Pump Flow",
  "id" : 12345,
  "points" : [ {
    "value" : 12.332,
    "timeMs" : 1453449599999
  }, {
    "value" : 12.332,
    "timeMs" : 1453449599999
  } ]
}, statusCode=200}]
     - parameter accessToken: (query) Samsara API access token. 
     - parameter dataInputId: (path) ID of the data input 
     - parameter startMs: (query) Timestamp in unix milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. defaults to nowMs. (optional)
     - parameter endMs: (query) Timestamp in unix milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Defaults to nowMs. (optional)

     - returns: RequestBuilder<DataInputHistoryResponse> 
     */
    public class func getDataInputWithRequestBuilder(accessToken accessToken: String, dataInputId: Int64, startMs: Int64? = nil, endMs: Int64? = nil) -> RequestBuilder<DataInputHistoryResponse> {
        var path = "/industrial/data/{dataInputId}"
        path = path.stringByReplacingOccurrencesOfString("{data_input_id}", withString: "\(dataInputId)", options: .LiteralSearch, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "access_token": accessToken,
            "startMs": startMs?.encodeToJSON(),
            "endMs": endMs?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<DataInputHistoryResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     /machines/list
     
     - parameter accessToken: (query) Samsara API access token. 
     - parameter groupParam: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMachines(accessToken accessToken: String, groupParam: InlineObject18, completion: ((data: InlineResponse2007?, error: ErrorType?) -> Void)) {
        getMachinesWithRequestBuilder(accessToken: accessToken, groupParam: groupParam).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     /machines/list
     - POST /machines/list
     - Get machine objects. This method returns a list of the machine objects in the Samsara Cloud and information about them.     - examples: [{contentType=application/json, example={
  "machines" : [ {
    "notes" : "This is in the left hallway behind the conveyor belt",
    "name" : "Freezer ABC",
    "id" : 123
  }, {
    "notes" : "This is in the left hallway behind the conveyor belt",
    "name" : "Freezer ABC",
    "id" : 123
  } ]
}, statusCode=200}]
     - parameter accessToken: (query) Samsara API access token. 
     - parameter groupParam: (body)  

     - returns: RequestBuilder<InlineResponse2007> 
     */
    public class func getMachinesWithRequestBuilder(accessToken accessToken: String, groupParam: InlineObject18) -> RequestBuilder<InlineResponse2007> {
        let path = "/machines/list"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = groupParam.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2007>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     /machines/history
     
     - parameter accessToken: (query) Samsara API access token. 
     - parameter historyParam: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMachinesHistory(accessToken accessToken: String, historyParam: InlineObject17, completion: ((data: MachineHistoryResponse?, error: ErrorType?) -> Void)) {
        getMachinesHistoryWithRequestBuilder(accessToken: accessToken, historyParam: historyParam).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     /machines/history
     - POST /machines/history
     - Get historical data for machine objects. This method returns a set of historical data for all machines in a group     - examples: [{contentType=application/json, example={
  "machines" : [ {
    "name" : "1/3 HP Motor",
    "id" : 1,
    "vibrations" : [ {
      "X" : 0.01,
      "Y" : 1.23,
      "Z" : 2.55,
      "time" : 1453449599999
    }, {
      "X" : 0.01,
      "Y" : 1.23,
      "Z" : 2.55,
      "time" : 1453449599999
    } ]
  }, {
    "name" : "1/3 HP Motor",
    "id" : 1,
    "vibrations" : [ {
      "X" : 0.01,
      "Y" : 1.23,
      "Z" : 2.55,
      "time" : 1453449599999
    }, {
      "X" : 0.01,
      "Y" : 1.23,
      "Z" : 2.55,
      "time" : 1453449599999
    } ]
  } ]
}, statusCode=200}]
     - parameter accessToken: (query) Samsara API access token. 
     - parameter historyParam: (body)  

     - returns: RequestBuilder<MachineHistoryResponse> 
     */
    public class func getMachinesHistoryWithRequestBuilder(accessToken accessToken: String, historyParam: InlineObject17) -> RequestBuilder<MachineHistoryResponse> {
        let path = "/machines/history"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = historyParam.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MachineHistoryResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}

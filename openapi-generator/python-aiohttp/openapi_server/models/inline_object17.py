# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server import util


class InlineObject17(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_ms: int=None, group_id: int=None, start_ms: int=None):
        """InlineObject17 - a model defined in OpenAPI

        :param end_ms: The end_ms of this InlineObject17.
        :param group_id: The group_id of this InlineObject17.
        :param start_ms: The start_ms of this InlineObject17.
        """
        self.openapi_types = {
            'end_ms': int,
            'group_id': int,
            'start_ms': int
        }

        self.attribute_map = {
            'end_ms': 'endMs',
            'group_id': 'groupId',
            'start_ms': 'startMs'
        }

        self._end_ms = end_ms
        self._group_id = group_id
        self._start_ms = start_ms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InlineObject17':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The inline_object_17 of this InlineObject17.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_ms(self):
        """Gets the end_ms of this InlineObject17.

        End of the time range, specified in milliseconds UNIX time.

        :return: The end_ms of this InlineObject17.
        :rtype: int
        """
        return self._end_ms

    @end_ms.setter
    def end_ms(self, end_ms):
        """Sets the end_ms of this InlineObject17.

        End of the time range, specified in milliseconds UNIX time.

        :param end_ms: The end_ms of this InlineObject17.
        :type end_ms: int
        """
        if end_ms is None:
            raise ValueError("Invalid value for `end_ms`, must not be `None`")

        self._end_ms = end_ms

    @property
    def group_id(self):
        """Gets the group_id of this InlineObject17.

        Group ID to query.

        :return: The group_id of this InlineObject17.
        :rtype: int
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this InlineObject17.

        Group ID to query.

        :param group_id: The group_id of this InlineObject17.
        :type group_id: int
        """
        if group_id is None:
            raise ValueError("Invalid value for `group_id`, must not be `None`")

        self._group_id = group_id

    @property
    def start_ms(self):
        """Gets the start_ms of this InlineObject17.

        Beginning of the time range, specified in milliseconds UNIX time.

        :return: The start_ms of this InlineObject17.
        :rtype: int
        """
        return self._start_ms

    @start_ms.setter
    def start_ms(self, start_ms):
        """Sets the start_ms of this InlineObject17.

        Beginning of the time range, specified in milliseconds UNIX time.

        :param start_ms: The start_ms of this InlineObject17.
        :type start_ms: int
        """
        if start_ms is None:
            raise ValueError("Invalid value for `start_ms`, must not be `None`")

        self._start_ms = start_ms

# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server import util


class SensorHistoryResponseResults(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, series: List[int]=None, time_ms: int=None):
        """SensorHistoryResponseResults - a model defined in OpenAPI

        :param series: The series of this SensorHistoryResponseResults.
        :param time_ms: The time_ms of this SensorHistoryResponseResults.
        """
        self.openapi_types = {
            'series': List[int],
            'time_ms': int
        }

        self.attribute_map = {
            'series': 'series',
            'time_ms': 'timeMs'
        }

        self._series = series
        self._time_ms = time_ms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SensorHistoryResponseResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SensorHistoryResponse_results of this SensorHistoryResponseResults.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def series(self):
        """Gets the series of this SensorHistoryResponseResults.

        List of datapoints, one for each requested (sensor, field) pair.

        :return: The series of this SensorHistoryResponseResults.
        :rtype: List[int]
        """
        return self._series

    @series.setter
    def series(self, series):
        """Sets the series of this SensorHistoryResponseResults.

        List of datapoints, one for each requested (sensor, field) pair.

        :param series: The series of this SensorHistoryResponseResults.
        :type series: List[int]
        """

        self._series = series

    @property
    def time_ms(self):
        """Gets the time_ms of this SensorHistoryResponseResults.

        Timestamp in UNIX milliseconds.

        :return: The time_ms of this SensorHistoryResponseResults.
        :rtype: int
        """
        return self._time_ms

    @time_ms.setter
    def time_ms(self, time_ms):
        """Sets the time_ms of this SensorHistoryResponseResults.

        Timestamp in UNIX milliseconds.

        :param time_ms: The time_ms of this SensorHistoryResponseResults.
        :type time_ms: int
        """

        self._time_ms = time_ms

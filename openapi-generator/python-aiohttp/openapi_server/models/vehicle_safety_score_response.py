# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server.models.safety_report_harsh_event import SafetyReportHarshEvent
from openapi_server import util


class VehicleSafetyScoreResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, crash_count: int=None, harsh_accel_count: int=None, harsh_braking_count: int=None, harsh_events: List[SafetyReportHarshEvent]=None, harsh_turning_count: int=None, safety_score: int=None, safety_score_rank: str=None, time_over_speed_limit_ms: int=None, total_distance_driven_meters: int=None, total_harsh_event_count: int=None, total_time_driven_ms: int=None, vehicle_id: int=None):
        """VehicleSafetyScoreResponse - a model defined in OpenAPI

        :param crash_count: The crash_count of this VehicleSafetyScoreResponse.
        :param harsh_accel_count: The harsh_accel_count of this VehicleSafetyScoreResponse.
        :param harsh_braking_count: The harsh_braking_count of this VehicleSafetyScoreResponse.
        :param harsh_events: The harsh_events of this VehicleSafetyScoreResponse.
        :param harsh_turning_count: The harsh_turning_count of this VehicleSafetyScoreResponse.
        :param safety_score: The safety_score of this VehicleSafetyScoreResponse.
        :param safety_score_rank: The safety_score_rank of this VehicleSafetyScoreResponse.
        :param time_over_speed_limit_ms: The time_over_speed_limit_ms of this VehicleSafetyScoreResponse.
        :param total_distance_driven_meters: The total_distance_driven_meters of this VehicleSafetyScoreResponse.
        :param total_harsh_event_count: The total_harsh_event_count of this VehicleSafetyScoreResponse.
        :param total_time_driven_ms: The total_time_driven_ms of this VehicleSafetyScoreResponse.
        :param vehicle_id: The vehicle_id of this VehicleSafetyScoreResponse.
        """
        self.openapi_types = {
            'crash_count': int,
            'harsh_accel_count': int,
            'harsh_braking_count': int,
            'harsh_events': List[SafetyReportHarshEvent],
            'harsh_turning_count': int,
            'safety_score': int,
            'safety_score_rank': str,
            'time_over_speed_limit_ms': int,
            'total_distance_driven_meters': int,
            'total_harsh_event_count': int,
            'total_time_driven_ms': int,
            'vehicle_id': int
        }

        self.attribute_map = {
            'crash_count': 'crashCount',
            'harsh_accel_count': 'harshAccelCount',
            'harsh_braking_count': 'harshBrakingCount',
            'harsh_events': 'harshEvents',
            'harsh_turning_count': 'harshTurningCount',
            'safety_score': 'safetyScore',
            'safety_score_rank': 'safetyScoreRank',
            'time_over_speed_limit_ms': 'timeOverSpeedLimitMs',
            'total_distance_driven_meters': 'totalDistanceDrivenMeters',
            'total_harsh_event_count': 'totalHarshEventCount',
            'total_time_driven_ms': 'totalTimeDrivenMs',
            'vehicle_id': 'vehicleId'
        }

        self._crash_count = crash_count
        self._harsh_accel_count = harsh_accel_count
        self._harsh_braking_count = harsh_braking_count
        self._harsh_events = harsh_events
        self._harsh_turning_count = harsh_turning_count
        self._safety_score = safety_score
        self._safety_score_rank = safety_score_rank
        self._time_over_speed_limit_ms = time_over_speed_limit_ms
        self._total_distance_driven_meters = total_distance_driven_meters
        self._total_harsh_event_count = total_harsh_event_count
        self._total_time_driven_ms = total_time_driven_ms
        self._vehicle_id = vehicle_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VehicleSafetyScoreResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VehicleSafetyScoreResponse of this VehicleSafetyScoreResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def crash_count(self):
        """Gets the crash_count of this VehicleSafetyScoreResponse.

        Crash event count

        :return: The crash_count of this VehicleSafetyScoreResponse.
        :rtype: int
        """
        return self._crash_count

    @crash_count.setter
    def crash_count(self, crash_count):
        """Sets the crash_count of this VehicleSafetyScoreResponse.

        Crash event count

        :param crash_count: The crash_count of this VehicleSafetyScoreResponse.
        :type crash_count: int
        """

        self._crash_count = crash_count

    @property
    def harsh_accel_count(self):
        """Gets the harsh_accel_count of this VehicleSafetyScoreResponse.

        Harsh acceleration event count

        :return: The harsh_accel_count of this VehicleSafetyScoreResponse.
        :rtype: int
        """
        return self._harsh_accel_count

    @harsh_accel_count.setter
    def harsh_accel_count(self, harsh_accel_count):
        """Sets the harsh_accel_count of this VehicleSafetyScoreResponse.

        Harsh acceleration event count

        :param harsh_accel_count: The harsh_accel_count of this VehicleSafetyScoreResponse.
        :type harsh_accel_count: int
        """

        self._harsh_accel_count = harsh_accel_count

    @property
    def harsh_braking_count(self):
        """Gets the harsh_braking_count of this VehicleSafetyScoreResponse.

        Harsh braking event count

        :return: The harsh_braking_count of this VehicleSafetyScoreResponse.
        :rtype: int
        """
        return self._harsh_braking_count

    @harsh_braking_count.setter
    def harsh_braking_count(self, harsh_braking_count):
        """Sets the harsh_braking_count of this VehicleSafetyScoreResponse.

        Harsh braking event count

        :param harsh_braking_count: The harsh_braking_count of this VehicleSafetyScoreResponse.
        :type harsh_braking_count: int
        """

        self._harsh_braking_count = harsh_braking_count

    @property
    def harsh_events(self):
        """Gets the harsh_events of this VehicleSafetyScoreResponse.


        :return: The harsh_events of this VehicleSafetyScoreResponse.
        :rtype: List[SafetyReportHarshEvent]
        """
        return self._harsh_events

    @harsh_events.setter
    def harsh_events(self, harsh_events):
        """Sets the harsh_events of this VehicleSafetyScoreResponse.


        :param harsh_events: The harsh_events of this VehicleSafetyScoreResponse.
        :type harsh_events: List[SafetyReportHarshEvent]
        """

        self._harsh_events = harsh_events

    @property
    def harsh_turning_count(self):
        """Gets the harsh_turning_count of this VehicleSafetyScoreResponse.

        Harsh turning event count

        :return: The harsh_turning_count of this VehicleSafetyScoreResponse.
        :rtype: int
        """
        return self._harsh_turning_count

    @harsh_turning_count.setter
    def harsh_turning_count(self, harsh_turning_count):
        """Sets the harsh_turning_count of this VehicleSafetyScoreResponse.

        Harsh turning event count

        :param harsh_turning_count: The harsh_turning_count of this VehicleSafetyScoreResponse.
        :type harsh_turning_count: int
        """

        self._harsh_turning_count = harsh_turning_count

    @property
    def safety_score(self):
        """Gets the safety_score of this VehicleSafetyScoreResponse.

        Safety Score

        :return: The safety_score of this VehicleSafetyScoreResponse.
        :rtype: int
        """
        return self._safety_score

    @safety_score.setter
    def safety_score(self, safety_score):
        """Sets the safety_score of this VehicleSafetyScoreResponse.

        Safety Score

        :param safety_score: The safety_score of this VehicleSafetyScoreResponse.
        :type safety_score: int
        """

        self._safety_score = safety_score

    @property
    def safety_score_rank(self):
        """Gets the safety_score_rank of this VehicleSafetyScoreResponse.

        Safety Score Rank

        :return: The safety_score_rank of this VehicleSafetyScoreResponse.
        :rtype: str
        """
        return self._safety_score_rank

    @safety_score_rank.setter
    def safety_score_rank(self, safety_score_rank):
        """Sets the safety_score_rank of this VehicleSafetyScoreResponse.

        Safety Score Rank

        :param safety_score_rank: The safety_score_rank of this VehicleSafetyScoreResponse.
        :type safety_score_rank: str
        """

        self._safety_score_rank = safety_score_rank

    @property
    def time_over_speed_limit_ms(self):
        """Gets the time_over_speed_limit_ms of this VehicleSafetyScoreResponse.

        Amount of time driven over the speed limit in milliseconds

        :return: The time_over_speed_limit_ms of this VehicleSafetyScoreResponse.
        :rtype: int
        """
        return self._time_over_speed_limit_ms

    @time_over_speed_limit_ms.setter
    def time_over_speed_limit_ms(self, time_over_speed_limit_ms):
        """Sets the time_over_speed_limit_ms of this VehicleSafetyScoreResponse.

        Amount of time driven over the speed limit in milliseconds

        :param time_over_speed_limit_ms: The time_over_speed_limit_ms of this VehicleSafetyScoreResponse.
        :type time_over_speed_limit_ms: int
        """

        self._time_over_speed_limit_ms = time_over_speed_limit_ms

    @property
    def total_distance_driven_meters(self):
        """Gets the total_distance_driven_meters of this VehicleSafetyScoreResponse.

        Total distance driven in meters

        :return: The total_distance_driven_meters of this VehicleSafetyScoreResponse.
        :rtype: int
        """
        return self._total_distance_driven_meters

    @total_distance_driven_meters.setter
    def total_distance_driven_meters(self, total_distance_driven_meters):
        """Sets the total_distance_driven_meters of this VehicleSafetyScoreResponse.

        Total distance driven in meters

        :param total_distance_driven_meters: The total_distance_driven_meters of this VehicleSafetyScoreResponse.
        :type total_distance_driven_meters: int
        """

        self._total_distance_driven_meters = total_distance_driven_meters

    @property
    def total_harsh_event_count(self):
        """Gets the total_harsh_event_count of this VehicleSafetyScoreResponse.

        Total harsh event count

        :return: The total_harsh_event_count of this VehicleSafetyScoreResponse.
        :rtype: int
        """
        return self._total_harsh_event_count

    @total_harsh_event_count.setter
    def total_harsh_event_count(self, total_harsh_event_count):
        """Sets the total_harsh_event_count of this VehicleSafetyScoreResponse.

        Total harsh event count

        :param total_harsh_event_count: The total_harsh_event_count of this VehicleSafetyScoreResponse.
        :type total_harsh_event_count: int
        """

        self._total_harsh_event_count = total_harsh_event_count

    @property
    def total_time_driven_ms(self):
        """Gets the total_time_driven_ms of this VehicleSafetyScoreResponse.

        Amount of time driven in milliseconds

        :return: The total_time_driven_ms of this VehicleSafetyScoreResponse.
        :rtype: int
        """
        return self._total_time_driven_ms

    @total_time_driven_ms.setter
    def total_time_driven_ms(self, total_time_driven_ms):
        """Sets the total_time_driven_ms of this VehicleSafetyScoreResponse.

        Amount of time driven in milliseconds

        :param total_time_driven_ms: The total_time_driven_ms of this VehicleSafetyScoreResponse.
        :type total_time_driven_ms: int
        """

        self._total_time_driven_ms = total_time_driven_ms

    @property
    def vehicle_id(self):
        """Gets the vehicle_id of this VehicleSafetyScoreResponse.

        Vehicle ID

        :return: The vehicle_id of this VehicleSafetyScoreResponse.
        :rtype: int
        """
        return self._vehicle_id

    @vehicle_id.setter
    def vehicle_id(self, vehicle_id):
        """Sets the vehicle_id of this VehicleSafetyScoreResponse.

        Vehicle ID

        :param vehicle_id: The vehicle_id of this VehicleSafetyScoreResponse.
        :type vehicle_id: int
        """

        self._vehicle_id = vehicle_id

//
// HosLogsResponseLogs.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


open class HosLogsResponseLogs: JSONEncodable {

    /** Longitude at which the log was recorded. */
    public var locLng: Double?
    /** The time at which the log/HOS status started in UNIX milliseconds. */
    public var logStartMs: Int64?
    /** ID of the driver. */
    public var driverId: Int64?
    /** The Hours of Service status type. One of &#x60;OFF_DUTY&#x60;, &#x60;SLEEPER_BED&#x60;, &#x60;DRIVING&#x60;, &#x60;ON_DUTY&#x60;, &#x60;YARD_MOVE&#x60;, &#x60;PERSONAL_CONVEYANCE&#x60;. */
    public var statusType: String?
    /** City in which the log was recorded. */
    public var locCity: String?
    /** ID of the group. */
    public var groupId: Int64?
    /** Name of location at which the log was recorded. */
    public var locName: String?
    /** Latitude at which the log was recorded. */
    public var locLat: Double?
    /** Remark associated with the log entry. */
    public var remark: String?
    /** State in which the log was recorded. */
    public var locState: String?
    /** ID of the vehicle. */
    public var vehicleId: Int64?
    public var codriverIds: [Int64]?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["locLng"] = self.locLng
        nillableDictionary["logStartMs"] = self.logStartMs?.encodeToJSON()
        nillableDictionary["driverId"] = self.driverId?.encodeToJSON()
        nillableDictionary["statusType"] = self.statusType
        nillableDictionary["locCity"] = self.locCity
        nillableDictionary["groupId"] = self.groupId?.encodeToJSON()
        nillableDictionary["locName"] = self.locName
        nillableDictionary["locLat"] = self.locLat
        nillableDictionary["remark"] = self.remark
        nillableDictionary["locState"] = self.locState
        nillableDictionary["vehicleId"] = self.vehicleId?.encodeToJSON()
        nillableDictionary["codriverIds"] = self.codriverIds?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}


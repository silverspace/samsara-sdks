//
// DispatchJobCreate.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


open class DispatchJobCreate: JSONEncodable {

    /** The address of the job destination, as it would be recognized if provided to maps.google.com. Optional if a valid destination address ID is provided. */
    public var destinationAddress: String?
    /** ID of the job destination associated with an address book entry. Optional if valid values are provided for destination address or latitude/longitude. If a valid destination address ID is provided, address/latitude/longitude will be used from the address book entry. Name of the address book entry will only be used if the destination name is not provided. */
    public var destinationAddressId: Int64?
    /** Latitude of the destination in decimal degrees. Optional if a valid destination address ID is provided. */
    public var destinationLat: Double?
    /** Longitude of the destination in decimal degrees. Optional if a valid destination address ID is provided. */
    public var destinationLng: Double?
    /** The name of the job destination. If provided, it will take precedence over the name of the address book entry. */
    public var destinationName: String?
    /** Notes regarding the details of this job. */
    public var notes: String?
    /** The time at which the assigned driver is scheduled to arrive at the job destination. */
    public var scheduledArrivalTimeMs: Int64?
    /** The time at which the assigned driver is scheduled to depart from the job destination. */
    public var scheduledDepartureTimeMs: Int64?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["destination_address"] = self.destinationAddress
        nillableDictionary["destination_address_id"] = self.destinationAddressId?.encodeToJSON()
        nillableDictionary["destination_lat"] = self.destinationLat
        nillableDictionary["destination_lng"] = self.destinationLng
        nillableDictionary["destination_name"] = self.destinationName
        nillableDictionary["notes"] = self.notes
        nillableDictionary["scheduled_arrival_time_ms"] = self.scheduledArrivalTimeMs?.encodeToJSON()
        nillableDictionary["scheduled_departure_time_ms"] = self.scheduledDepartureTimeMs?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}


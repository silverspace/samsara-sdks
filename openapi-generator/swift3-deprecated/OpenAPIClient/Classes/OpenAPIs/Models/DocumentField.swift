//
// DocumentField.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


open class DocumentField: JSONEncodable {

    /** Value of this field if this document field has valueType: ValueType_Number. */
    public var numberValue: Double?
    /** Value of this field if this document field has valueType: ValueType_Photo. Array of photo objects where each object contains a URL for a photo. */
    public var photoValue: [DocumentFieldCreatePhotoValue]?
    /** Value of this field if this document field has valueType: ValueType_String. */
    public var stringValue: String?
    /** Determines the type of this field and what type of value this field has. It should be either ValueType_Number, ValueType_String, or ValueType_Photo. */
    public var valueType: String?
    /** Descriptive name of this field. */
    public var label: String?
    /** DEPRECATED: Please use stringValue, numberValue, or photoValue instead. Value of this field. Depending on what kind of field it is, this may be one of the following: an array of image urls, a float, an integer, or a string. */
    public var value: Any?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["numberValue"] = self.numberValue
        nillableDictionary["photoValue"] = self.photoValue?.encodeToJSON()
        nillableDictionary["stringValue"] = self.stringValue
        nillableDictionary["valueType"] = self.valueType
        nillableDictionary["label"] = self.label
        nillableDictionary["value"] = self.value?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}


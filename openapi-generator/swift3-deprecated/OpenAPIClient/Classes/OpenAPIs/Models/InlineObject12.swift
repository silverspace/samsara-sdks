//
// InlineObject12.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


open class InlineObject12: JSONEncodable {

    public enum InspectionType: String { 
        case mechanic = "mechanic"
    }
    public enum Safe: String { 
        case safe = "safe"
        case unsafe = "unsafe"
    }
    /** Only type &#39;mechanic&#39; is currently accepted. */
    public var inspectionType: InspectionType?
    /** Any notes from the mechanic. */
    public var mechanicNotes: String?
    /** The current odometer of the vehicle. */
    public var odometerMiles: Int32?
    /** Whether any previous defects were corrected. If this vehicle or trailer was previously marked unsafe, and this DVIR marks it as safe, either previousDefectsCorrected or previousDefectsIgnored must be true. */
    public var previousDefectsCorrected: Bool?
    /** Whether any previous defects were ignored. If this vehicle or trailer was previously marked unsafe, and this DVIR marks it as safe, either previousDefectsCorrected or previousDefectsIgnored must be true. */
    public var previousDefectsIgnored: Bool?
    /** Whether or not this vehicle or trailer is safe to drive. */
    public var safe: Safe?
    /** Id of trailer being inspected. Either vehicleId or trailerId must be provided. */
    public var trailerId: Int32?
    /** The Samsara login email for the person creating the DVIR. The email must correspond to a Samsara user&#39;s email. */
    public var userEmail: String?
    /** Id of vehicle being inspected. Either vehicleId or trailerId must be provided. */
    public var vehicleId: Int32?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["inspectionType"] = self.inspectionType?.rawValue
        nillableDictionary["mechanicNotes"] = self.mechanicNotes
        nillableDictionary["odometerMiles"] = self.odometerMiles?.encodeToJSON()
        nillableDictionary["previousDefectsCorrected"] = self.previousDefectsCorrected
        nillableDictionary["previousDefectsIgnored"] = self.previousDefectsIgnored
        nillableDictionary["safe"] = self.safe?.rawValue
        nillableDictionary["trailerId"] = self.trailerId?.encodeToJSON()
        nillableDictionary["userEmail"] = self.userEmail
        nillableDictionary["vehicleId"] = self.vehicleId?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}


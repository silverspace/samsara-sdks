/**
 * SamsaraAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of DiagnosticTroubleCode
 */
class DiagnosticTroubleCode extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.fmiId = this.constructor.getValue(obj.fmiId);
        this.fmiText = this.constructor.getValue(obj.fmiText);
        this.occurrenceCount = this.constructor.getValue(obj.occurrenceCount);
        this.spnDescription = this.constructor.getValue(obj.spnDescription);
        this.spnId = this.constructor.getValue(obj.spnId);
        this.txId = this.constructor.getValue(obj.txId);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'fmiId', realName: 'fmiId' },
            { name: 'fmiText', realName: 'fmiText' },
            { name: 'occurrenceCount', realName: 'occurrenceCount' },
            { name: 'spnDescription', realName: 'spnDescription' },
            { name: 'spnId', realName: 'spnId' },
            { name: 'txId', realName: 'txId' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = DiagnosticTroubleCode;

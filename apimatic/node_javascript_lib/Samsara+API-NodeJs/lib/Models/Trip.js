/**
 * SamsaraAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Trip
 */
class Trip extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.distanceMeters = this.constructor.getValue(obj.distanceMeters);
        this.driverId = this.constructor.getValue(obj.driverId);
        this.endAddress = this.constructor.getValue(obj.endAddress);
        this.endCoordinates = this.constructor.getValue(obj.endCoordinates);
        this.endLocation = this.constructor.getValue(obj.endLocation);
        this.endMs = this.constructor.getValue(obj.endMs);
        this.endOdometer = this.constructor.getValue(obj.endOdometer);
        this.fuelConsumedMl = this.constructor.getValue(obj.fuelConsumedMl);
        this.startAddress = this.constructor.getValue(obj.startAddress);
        this.startCoordinates = this.constructor.getValue(obj.startCoordinates);
        this.startLocation = this.constructor.getValue(obj.startLocation);
        this.startMs = this.constructor.getValue(obj.startMs);
        this.startOdometer = this.constructor.getValue(obj.startOdometer);
        this.tollMeters = this.constructor.getValue(obj.tollMeters);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'distanceMeters', realName: 'distanceMeters' },
            { name: 'driverId', realName: 'driverId' },
            { name: 'endAddress', realName: 'endAddress' },
            { name: 'endCoordinates', realName: 'endCoordinates', type: 'EndCoordinates' },
            { name: 'endLocation', realName: 'endLocation' },
            { name: 'endMs', realName: 'endMs' },
            { name: 'endOdometer', realName: 'endOdometer' },
            { name: 'fuelConsumedMl', realName: 'fuelConsumedMl' },
            { name: 'startAddress', realName: 'startAddress' },
            { name: 'startCoordinates', realName: 'startCoordinates', type: 'StartCoordinates' },
            { name: 'startLocation', realName: 'startLocation' },
            { name: 'startMs', realName: 'startMs' },
            { name: 'startOdometer', realName: 'startOdometer' },
            { name: 'tollMeters', realName: 'tollMeters' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Trip;

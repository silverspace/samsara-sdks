/**
 * SamsaraAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Log
 */
class Log extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.codriverIds = this.constructor.getValue(obj.codriverIds);
        this.driverId = this.constructor.getValue(obj.driverId);
        this.groupId = this.constructor.getValue(obj.groupId);
        this.locCity = this.constructor.getValue(obj.locCity);
        this.locLat = this.constructor.getValue(obj.locLat);
        this.locLng = this.constructor.getValue(obj.locLng);
        this.locName = this.constructor.getValue(obj.locName);
        this.locState = this.constructor.getValue(obj.locState);
        this.logStartMs = this.constructor.getValue(obj.logStartMs);
        this.remark = this.constructor.getValue(obj.remark);
        this.statusType = this.constructor.getValue(obj.statusType);
        this.vehicleId = this.constructor.getValue(obj.vehicleId);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'codriverIds', realName: 'codriverIds', array: true },
            { name: 'driverId', realName: 'driverId' },
            { name: 'groupId', realName: 'groupId' },
            { name: 'locCity', realName: 'locCity' },
            { name: 'locLat', realName: 'locLat' },
            { name: 'locLng', realName: 'locLng' },
            { name: 'locName', realName: 'locName' },
            { name: 'locState', realName: 'locState' },
            { name: 'logStartMs', realName: 'logStartMs' },
            { name: 'remark', realName: 'remark' },
            { name: 'statusType', realName: 'statusType' },
            { name: 'vehicleId', realName: 'vehicleId' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Log;

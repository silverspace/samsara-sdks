/**
 * SamsaraAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of VehicleHarshEventResponse
 */
class VehicleHarshEventResponse extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.downloadForwardVideoUrl = this.constructor.getValue(obj.downloadForwardVideoUrl);
        this.downloadInwardVideoUrl = this.constructor.getValue(obj.downloadInwardVideoUrl);
        this.downloadTrackedInwardVideoUrl =
          this.constructor.getValue(obj.downloadTrackedInwardVideoUrl);
        this.harshEventType = this.constructor.getValue(obj.harshEventType);
        this.incidentReportUrl = this.constructor.getValue(obj.incidentReportUrl);
        this.isDistracted = this.constructor.getValue(obj.isDistracted);
        this.location = this.constructor.getValue(obj.location);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'downloadForwardVideoUrl', realName: 'downloadForwardVideoUrl' },
            { name: 'downloadInwardVideoUrl', realName: 'downloadInwardVideoUrl' },
            { name: 'downloadTrackedInwardVideoUrl', realName: 'downloadTrackedInwardVideoUrl' },
            { name: 'harshEventType', realName: 'harshEventType' },
            { name: 'incidentReportUrl', realName: 'incidentReportUrl' },
            { name: 'isDistracted', realName: 'isDistracted' },
            { name: 'location', realName: 'location', type: 'Location' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = VehicleHarshEventResponse;

# samsara_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SamsaraApi
  # Summary Model.
  class Summary < BaseModel
    # Duration in milliseconds that driver was on duty or driving during the
    # requested time range
    # @return [Long]
    attr_accessor :active_ms

    # Distance driven in miles, rounded to two decimal places.
    # @return [Float]
    attr_accessor :distance_miles

    # Duration in milliseconds that driver was driving during the requested time
    # range
    # @return [Long]
    attr_accessor :drive_ms

    # ID of the driver.
    # @return [Long]
    attr_accessor :driver_id

    # Name of the driver.
    # @return [String]
    attr_accessor :driver_name

    # Username of the driver.
    # @return [String]
    attr_accessor :driver_username

    # Group of the driver.
    # @return [Long]
    attr_accessor :group_id

    # Duration in milliseconds that driver was on duty during the requested time
    # range
    # @return [Long]
    attr_accessor :on_duty_ms

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['active_ms'] = 'activeMs'
      @_hash['distance_miles'] = 'distanceMiles'
      @_hash['drive_ms'] = 'driveMs'
      @_hash['driver_id'] = 'driverId'
      @_hash['driver_name'] = 'driverName'
      @_hash['driver_username'] = 'driverUsername'
      @_hash['group_id'] = 'groupId'
      @_hash['on_duty_ms'] = 'onDutyMs'
      @_hash
    end

    def initialize(active_ms = nil,
                   distance_miles = nil,
                   drive_ms = nil,
                   driver_id = nil,
                   driver_name = nil,
                   driver_username = nil,
                   group_id = nil,
                   on_duty_ms = nil)
      @active_ms = active_ms
      @distance_miles = distance_miles
      @drive_ms = drive_ms
      @driver_id = driver_id
      @driver_name = driver_name
      @driver_username = driver_username
      @group_id = group_id
      @on_duty_ms = on_duty_ms
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      active_ms = hash['activeMs']
      distance_miles = hash['distanceMiles']
      drive_ms = hash['driveMs']
      driver_id = hash['driverId']
      driver_name = hash['driverName']
      driver_username = hash['driverUsername']
      group_id = hash['groupId']
      on_duty_ms = hash['onDutyMs']

      # Create object from extracted values.
      Summary.new(active_ms,
                  distance_miles,
                  drive_ms,
                  driver_id,
                  driver_name,
                  driver_username,
                  group_id,
                  on_duty_ms)
    end
  end
end

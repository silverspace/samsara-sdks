# samsara_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SamsaraApi
  # Contains the location and speed of a vehicle at a particular time
  class FleetVehicleLocation < BaseModel
    # The latitude of the location in degrees.
    # @return [Float]
    attr_accessor :latitude

    # The best effort (street,city,state) for the latitude and longitude.
    # @return [String]
    attr_accessor :location

    # The longitude of the location in degrees.
    # @return [Float]
    attr_accessor :longitude

    # The speed calculated from GPS that the asset was traveling at in miles per
    # hour.
    # @return [Float]
    attr_accessor :speed_miles_per_hour

    # Time in Unix milliseconds since epoch when the asset was at the location.
    # @return [Long]
    attr_accessor :time_ms

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['latitude'] = 'latitude'
      @_hash['location'] = 'location'
      @_hash['longitude'] = 'longitude'
      @_hash['speed_miles_per_hour'] = 'speedMilesPerHour'
      @_hash['time_ms'] = 'timeMs'
      @_hash
    end

    def initialize(latitude = nil,
                   location = nil,
                   longitude = nil,
                   speed_miles_per_hour = nil,
                   time_ms = nil)
      @latitude = latitude
      @location = location
      @longitude = longitude
      @speed_miles_per_hour = speed_miles_per_hour
      @time_ms = time_ms
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      latitude = hash['latitude']
      location = hash['location']
      longitude = hash['longitude']
      speed_miles_per_hour = hash['speedMilesPerHour']
      time_ms = hash['timeMs']

      # Create object from extracted values.
      FleetVehicleLocation.new(latitude,
                               location,
                               longitude,
                               speed_miles_per_hour,
                               time_ms)
    end
  end
end

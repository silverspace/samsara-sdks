# samsara_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SamsaraApi
  # Log Model.
  class Log < BaseModel
    # TODO: Write general description for this method
    # @return [List of Float]
    attr_accessor :codriver_ids

    # ID of the driver.
    # @return [Long]
    attr_accessor :driver_id

    # ID of the group.
    # @return [Long]
    attr_accessor :group_id

    # City in which the log was recorded.
    # @return [String]
    attr_accessor :loc_city

    # Latitude at which the log was recorded.
    # @return [Float]
    attr_accessor :loc_lat

    # Longitude at which the log was recorded.
    # @return [Float]
    attr_accessor :loc_lng

    # Name of location at which the log was recorded.
    # @return [String]
    attr_accessor :loc_name

    # State in which the log was recorded.
    # @return [String]
    attr_accessor :loc_state

    # The time at which the log/HOS status started in UNIX milliseconds.
    # @return [Long]
    attr_accessor :log_start_ms

    # Remark associated with the log entry.
    # @return [String]
    attr_accessor :remark

    # The Hours of Service status type. One of `OFF_DUTY`, `SLEEPER_BED`,
    # `DRIVING`, `ON_DUTY`, `YARD_MOVE`, `PERSONAL_CONVEYANCE`.
    # @return [String]
    attr_accessor :status_type

    # ID of the vehicle.
    # @return [Long]
    attr_accessor :vehicle_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['codriver_ids'] = 'codriverIds'
      @_hash['driver_id'] = 'driverId'
      @_hash['group_id'] = 'groupId'
      @_hash['loc_city'] = 'locCity'
      @_hash['loc_lat'] = 'locLat'
      @_hash['loc_lng'] = 'locLng'
      @_hash['loc_name'] = 'locName'
      @_hash['loc_state'] = 'locState'
      @_hash['log_start_ms'] = 'logStartMs'
      @_hash['remark'] = 'remark'
      @_hash['status_type'] = 'statusType'
      @_hash['vehicle_id'] = 'vehicleId'
      @_hash
    end

    def initialize(codriver_ids = nil,
                   driver_id = nil,
                   group_id = nil,
                   loc_city = nil,
                   loc_lat = nil,
                   loc_lng = nil,
                   loc_name = nil,
                   loc_state = nil,
                   log_start_ms = nil,
                   remark = nil,
                   status_type = nil,
                   vehicle_id = nil)
      @codriver_ids = codriver_ids
      @driver_id = driver_id
      @group_id = group_id
      @loc_city = loc_city
      @loc_lat = loc_lat
      @loc_lng = loc_lng
      @loc_name = loc_name
      @loc_state = loc_state
      @log_start_ms = log_start_ms
      @remark = remark
      @status_type = status_type
      @vehicle_id = vehicle_id
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      codriver_ids = hash['codriverIds']
      driver_id = hash['driverId']
      group_id = hash['groupId']
      loc_city = hash['locCity']
      loc_lat = hash['locLat']
      loc_lng = hash['locLng']
      loc_name = hash['locName']
      loc_state = hash['locState']
      log_start_ms = hash['logStartMs']
      remark = hash['remark']
      status_type = hash['statusType']
      vehicle_id = hash['vehicleId']

      # Create object from extracted values.
      Log.new(codriver_ids,
              driver_id,
              group_id,
              loc_city,
              loc_lat,
              loc_lng,
              loc_name,
              loc_state,
              log_start_ms,
              remark,
              status_type,
              vehicle_id)
    end
  end
end

# samsara_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SamsaraApi
  # The authors signature for the DVIR.
  class AuthorSignature < BaseModel
    # ID of the driver who signed the DVIR. Will not be returned if
    # mechanicUserId is returned.
    # @return [Long]
    attr_accessor :driver_id

    # Email of the  driver|mechanic who signed the DVIR.
    # @return [String]
    attr_accessor :email

    # ID of the mechanic who signed the DVIR. Will not be returned if driverId
    # is returned.
    # @return [Long]
    attr_accessor :mechanic_user_id

    # The name of the driver or mechanic who signed the DVIR.
    # @return [String]
    attr_accessor :name

    # The time in millis when the DVIR was signed
    # @return [Long]
    attr_accessor :signed_at

    # Type corresponds to whether the signature corresponds to driver|mechanic.
    # @return [String]
    attr_accessor :type

    # Username of the  driver|mechanic who signed the DVIR.
    # @return [String]
    attr_accessor :username

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['driver_id'] = 'driverId'
      @_hash['email'] = 'email'
      @_hash['mechanic_user_id'] = 'mechanicUserId'
      @_hash['name'] = 'name'
      @_hash['signed_at'] = 'signedAt'
      @_hash['type'] = 'type'
      @_hash['username'] = 'username'
      @_hash
    end

    def initialize(driver_id = nil,
                   email = nil,
                   mechanic_user_id = nil,
                   name = nil,
                   signed_at = nil,
                   type = nil,
                   username = nil)
      @driver_id = driver_id
      @email = email
      @mechanic_user_id = mechanic_user_id
      @name = name
      @signed_at = signed_at
      @type = type
      @username = username
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      driver_id = hash['driverId']
      email = hash['email']
      mechanic_user_id = hash['mechanicUserId']
      name = hash['name']
      signed_at = hash['signedAt']
      type = hash['type']
      username = hash['username']

      # Create object from extracted values.
      AuthorSignature.new(driver_id,
                          email,
                          mechanic_user_id,
                          name,
                          signed_at,
                          type,
                          username)
    end
  end
end

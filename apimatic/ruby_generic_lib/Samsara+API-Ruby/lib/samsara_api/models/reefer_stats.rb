# samsara_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SamsaraApi
  # ReeferStats Model.
  class ReeferStats < BaseModel
    # Reefer alarms
    # @return [List of Alarm]
    attr_accessor :alarms

    # Engine hours of the reefer
    # @return [List of EngineHour]
    attr_accessor :engine_hours

    # Fuel percentage of the reefer
    # @return [List of FuelPercentage]
    attr_accessor :fuel_percentage

    # Power status of the reefer
    # @return [List of PowerStatus]
    attr_accessor :power_status

    # Return air temperature of the reefer
    # @return [List of ReturnAirTemp]
    attr_accessor :return_air_temp

    # Set point temperature of the reefer
    # @return [List of SetPoint]
    attr_accessor :set_point

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['alarms'] = 'alarms'
      @_hash['engine_hours'] = 'engineHours'
      @_hash['fuel_percentage'] = 'fuelPercentage'
      @_hash['power_status'] = 'powerStatus'
      @_hash['return_air_temp'] = 'returnAirTemp'
      @_hash['set_point'] = 'setPoint'
      @_hash
    end

    def initialize(alarms = nil,
                   engine_hours = nil,
                   fuel_percentage = nil,
                   power_status = nil,
                   return_air_temp = nil,
                   set_point = nil)
      @alarms = alarms
      @engine_hours = engine_hours
      @fuel_percentage = fuel_percentage
      @power_status = power_status
      @return_air_temp = return_air_temp
      @set_point = set_point
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      alarms = nil
      unless hash['alarms'].nil?
        alarms = []
        hash['alarms'].each do |structure|
          alarms << (Alarm.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      engine_hours = nil
      unless hash['engineHours'].nil?
        engine_hours = []
        hash['engineHours'].each do |structure|
          engine_hours << (EngineHour.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      fuel_percentage = nil
      unless hash['fuelPercentage'].nil?
        fuel_percentage = []
        hash['fuelPercentage'].each do |structure|
          fuel_percentage << (FuelPercentage.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      power_status = nil
      unless hash['powerStatus'].nil?
        power_status = []
        hash['powerStatus'].each do |structure|
          power_status << (PowerStatus.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      return_air_temp = nil
      unless hash['returnAirTemp'].nil?
        return_air_temp = []
        hash['returnAirTemp'].each do |structure|
          return_air_temp << (ReturnAirTemp.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      set_point = nil
      unless hash['setPoint'].nil?
        set_point = []
        hash['setPoint'].each do |structure|
          set_point << (SetPoint.from_hash(structure) if structure)
        end
      end

      # Create object from extracted values.
      ReeferStats.new(alarms,
                      engine_hours,
                      fuel_percentage,
                      power_status,
                      return_air_temp,
                      set_point)
    end
  end
end

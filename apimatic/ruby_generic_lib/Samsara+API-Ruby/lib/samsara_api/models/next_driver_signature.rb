# samsara_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SamsaraApi
  # The next driver signature for the DVIR.
  class NextDriverSignature < BaseModel
    # ID of the driver who signed the DVIR
    # @return [Long]
    attr_accessor :driver_id

    # Email of the  driver who signed the next DVIR on this vehicle.
    # @return [String]
    attr_accessor :email

    # The name of the driver who signed the next DVIR on this vehicle.
    # @return [String]
    attr_accessor :name

    # The time in millis when the next driver signed the DVIR on this vehicle.
    # @return [Long]
    attr_accessor :signed_at

    # Type corresponds to driver.
    # @return [String]
    attr_accessor :type

    # Username of the  driver who signed the next DVIR on this vehicle.
    # @return [String]
    attr_accessor :username

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['driver_id'] = 'driverId'
      @_hash['email'] = 'email'
      @_hash['name'] = 'name'
      @_hash['signed_at'] = 'signedAt'
      @_hash['type'] = 'type'
      @_hash['username'] = 'username'
      @_hash
    end

    def initialize(driver_id = nil,
                   email = nil,
                   name = nil,
                   signed_at = nil,
                   type = nil,
                   username = nil)
      @driver_id = driver_id
      @email = email
      @name = name
      @signed_at = signed_at
      @type = type
      @username = username
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      driver_id = hash['driverId']
      email = hash['email']
      name = hash['name']
      signed_at = hash['signedAt']
      type = hash['type']
      username = hash['username']

      # Create object from extracted values.
      NextDriverSignature.new(driver_id,
                              email,
                              name,
                              signed_at,
                              type,
                              username)
    end
  end
end

/*
 * samsaraapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for NameEnum enum
 */
type NameEnum int

/**
 * Value collection for NameEnum enum
 */
const (
    Name_ENUM_EMERGENCY_LIGHTS NameEnum = 1 + iota
    Name_ENUM_EMERGENCY_ALARM
    Name_ENUM_STOP_PADDLE
    Name_ENUM_POWER_TAKEOFF
    Name_PLOW
    Name_SWEEPER
    Name_SALTER
    Name_BOOM
)

func (r NameEnum) MarshalJSON() ([]byte, error) { 
    s := NameEnumToValue(r)
    return json.Marshal(s) 
} 

func (r *NameEnum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  NameEnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts NameEnum to its string representation
 */
func NameEnumToValue(nameEnum NameEnum) string {
    switch nameEnum {
        case Name_ENUM_EMERGENCY_LIGHTS:
    		return "Enum_Emergency Lights"		
        case Name_ENUM_EMERGENCY_ALARM:
    		return "Enum_Emergency Alarm"		
        case Name_ENUM_STOP_PADDLE:
    		return "Enum_Stop Paddle"		
        case Name_ENUM_POWER_TAKEOFF:
    		return "Enum_Power TakeOff"		
        case Name_PLOW:
    		return "Plow"		
        case Name_SWEEPER:
    		return "Sweeper"		
        case Name_SALTER:
    		return "Salter"		
        case Name_BOOM:
    		return "Boom"		
        default:
        	return "Enum_Emergency Lights"
    }
}

/**
 * Converts NameEnum Array to its string Array representation
*/
func NameEnumArrayToValue(nameEnum []NameEnum) []string {
    convArray := make([]string,len( nameEnum))
    for i:=0; i<len(nameEnum);i++ {
        convArray[i] = NameEnumToValue(nameEnum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func NameEnumFromValue(value string) NameEnum {
    switch value {
        case "Enum_Emergency_Lights":
            return Name_ENUM_EMERGENCY_LIGHTS
        case "Enum_Emergency_Alarm":
            return Name_ENUM_EMERGENCY_ALARM
        case "Enum_Stop_Paddle":
            return Name_ENUM_STOP_PADDLE
        case "Enum_Power_TakeOff":
            return Name_ENUM_POWER_TAKEOFF
        case "Plow":
            return Name_PLOW
        case "Sweeper":
            return Name_SWEEPER
        case "Salter":
            return Name_SALTER
        case "Boom":
            return Name_BOOM
        default:
            return Name_ENUM_EMERGENCY LIGHTS
    }
}

/*
 * samsaraapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for SeriesEnum enum
 */
type SeriesEnum int

/**
 * Value collection for SeriesEnum enum
 */
const (
    Series_ENGINESTATE SeriesEnum = 1 + iota
    Series_AUXINPUT1
    Series_AUXINPUT2
)

func (r SeriesEnum) MarshalJSON() ([]byte, error) { 
    s := SeriesEnumToValue(r)
    return json.Marshal(s) 
} 

func (r *SeriesEnum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  SeriesEnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts SeriesEnum to its string representation
 */
func SeriesEnumToValue(seriesEnum SeriesEnum) string {
    switch seriesEnum {
        case Series_ENGINESTATE:
    		return "engineState"		
        case Series_AUXINPUT1:
    		return "auxInput1"		
        case Series_AUXINPUT2:
    		return "auxInput2"		
        default:
        	return "engineState"
    }
}

/**
 * Converts SeriesEnum Array to its string Array representation
*/
func SeriesEnumArrayToValue(seriesEnum []SeriesEnum) []string {
    convArray := make([]string,len( seriesEnum))
    for i:=0; i<len(seriesEnum);i++ {
        convArray[i] = SeriesEnumToValue(seriesEnum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func SeriesEnumFromValue(value string) SeriesEnum {
    switch value {
        case "engineState":
            return Series_ENGINESTATE
        case "auxInput1":
            return Series_AUXINPUT1
        case "auxInput2":
            return Series_AUXINPUT2
        default:
            return Series_ENGINESTATE
    }
}

/*
 * samsaraapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package SamsaraAPIClient

import(
	"samsaraapi_lib/configuration_pkg"
	"samsaraapi_lib/tags_pkg"
	"samsaraapi_lib/fleet_pkg"
	"samsaraapi_lib/users_pkg"
	"samsaraapi_lib/industrial_pkg"
	"samsaraapi_lib/sensors_pkg"
)
/*
 * Client structure as interface implementation
 */
type SAMSARAAPI_IMPL struct {
     tags tags_pkg.TAGS
     fleet fleet_pkg.FLEET
     users users_pkg.USERS
     industrial industrial_pkg.INDUSTRIAL
     sensors sensors_pkg.SENSORS
     config  configuration_pkg.CONFIGURATION
}

/**
     * Access to Configuration
     * @return Returns the Configuration instance
*/
func (me *SAMSARAAPI_IMPL) Configuration() configuration_pkg.CONFIGURATION {
    return me.config
}
/**
     * Access to Tags controller
     * @return Returns the Tags() instance
*/
func (me * SAMSARAAPI_IMPL) Tags() tags_pkg.TAGS {
    if(me.tags) == nil {
        me.tags = tags_pkg.NewTAGS(me.config)
    }
    return me.tags
}
/**
     * Access to Fleet controller
     * @return Returns the Fleet() instance
*/
func (me * SAMSARAAPI_IMPL) Fleet() fleet_pkg.FLEET {
    if(me.fleet) == nil {
        me.fleet = fleet_pkg.NewFLEET(me.config)
    }
    return me.fleet
}
/**
     * Access to Users controller
     * @return Returns the Users() instance
*/
func (me * SAMSARAAPI_IMPL) Users() users_pkg.USERS {
    if(me.users) == nil {
        me.users = users_pkg.NewUSERS(me.config)
    }
    return me.users
}
/**
     * Access to Industrial controller
     * @return Returns the Industrial() instance
*/
func (me * SAMSARAAPI_IMPL) Industrial() industrial_pkg.INDUSTRIAL {
    if(me.industrial) == nil {
        me.industrial = industrial_pkg.NewINDUSTRIAL(me.config)
    }
    return me.industrial
}
/**
     * Access to Sensors controller
     * @return Returns the Sensors() instance
*/
func (me * SAMSARAAPI_IMPL) Sensors() sensors_pkg.SENSORS {
    if(me.sensors) == nil {
        me.sensors = sensors_pkg.NewSENSORS(me.config)
    }
    return me.sensors
}


/*
 * SamsaraAPI.PCL
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SamsaraAPI.PCL;
using SamsaraAPI.PCL.Utilities;


namespace SamsaraAPI.PCL.Models
{
    public class Driver : BaseModel 
    {
        // These fields hold the values for the public properties.
        private long id;
        private bool? isDeactivated;
        private List<Models.TagMetadata> tags;
        private long? currentVehicleId;
        private bool? eldAdverseWeatherExemptionEnabled;
        private bool? eldBigDayExemptionEnabled;
        private int? eldDayStartHour;
        private bool? eldExempt;
        private string eldExemptReason;
        private bool? eldPcEnabled = false;
        private bool? eldYmEnabled = false;
        private Dictionary<string, string> externalIds;
        private long? groupId;
        private string licenseNumber;
        private string licenseState;
        private string name;
        private string notes;
        private string phone;
        private string username;
        private long? vehicleId;

        /// <summary>
        /// ID of the driver.
        /// </summary>
        [JsonProperty("id")]
        public long Id 
        { 
            get 
            {
                return this.id; 
            } 
            set 
            {
                this.id = value;
                onPropertyChanged("Id");
            }
        }

        /// <summary>
        /// True if the driver account has been deactivated.
        /// </summary>
        [JsonProperty("isDeactivated")]
        public bool? IsDeactivated 
        { 
            get 
            {
                return this.isDeactivated; 
            } 
            set 
            {
                this.isDeactivated = value;
                onPropertyChanged("IsDeactivated");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("tags")]
        public List<Models.TagMetadata> Tags 
        { 
            get 
            {
                return this.tags; 
            } 
            set 
            {
                this.tags = value;
                onPropertyChanged("Tags");
            }
        }

        /// <summary>
        /// ID of the vehicle that this driver is currently assigned to. Omitted if there is no current vehicle assignment for this driver.
        /// </summary>
        [JsonProperty("currentVehicleId")]
        public long? CurrentVehicleId 
        { 
            get 
            {
                return this.currentVehicleId; 
            } 
            set 
            {
                this.currentVehicleId = value;
                onPropertyChanged("CurrentVehicleId");
            }
        }

        /// <summary>
        /// Flag indicating this driver may use Adverse Weather exemptions in ELD logs.
        /// </summary>
        [JsonProperty("eldAdverseWeatherExemptionEnabled")]
        public bool? EldAdverseWeatherExemptionEnabled 
        { 
            get 
            {
                return this.eldAdverseWeatherExemptionEnabled; 
            } 
            set 
            {
                this.eldAdverseWeatherExemptionEnabled = value;
                onPropertyChanged("EldAdverseWeatherExemptionEnabled");
            }
        }

        /// <summary>
        /// Flag indicating this driver may use Big Day excemptions in ELD logs.
        /// </summary>
        [JsonProperty("eldBigDayExemptionEnabled")]
        public bool? EldBigDayExemptionEnabled 
        { 
            get 
            {
                return this.eldBigDayExemptionEnabled; 
            } 
            set 
            {
                this.eldBigDayExemptionEnabled = value;
                onPropertyChanged("EldBigDayExemptionEnabled");
            }
        }

        /// <summary>
        /// 0 indicating midnight-to-midnight ELD driving hours, 12 to indicate noon-to-noon driving hours.
        /// </summary>
        [JsonProperty("eldDayStartHour")]
        public int? EldDayStartHour 
        { 
            get 
            {
                return this.eldDayStartHour; 
            } 
            set 
            {
                this.eldDayStartHour = value;
                onPropertyChanged("EldDayStartHour");
            }
        }

        /// <summary>
        /// Flag indicating this driver is exempt from the Electronic Logging Mandate.
        /// </summary>
        [JsonProperty("eldExempt")]
        public bool? EldExempt 
        { 
            get 
            {
                return this.eldExempt; 
            } 
            set 
            {
                this.eldExempt = value;
                onPropertyChanged("EldExempt");
            }
        }

        /// <summary>
        /// Reason that this driver is exempt from the Electronic Logging Mandate (see eldExempt).
        /// </summary>
        [JsonProperty("eldExemptReason")]
        public string EldExemptReason 
        { 
            get 
            {
                return this.eldExemptReason; 
            } 
            set 
            {
                this.eldExemptReason = value;
                onPropertyChanged("EldExemptReason");
            }
        }

        /// <summary>
        /// Flag indicating this driver may select the Personal Conveyance duty status in ELD logs.
        /// </summary>
        [JsonProperty("eldPcEnabled")]
        public bool? EldPcEnabled 
        { 
            get 
            {
                return this.eldPcEnabled; 
            } 
            set 
            {
                this.eldPcEnabled = value;
                onPropertyChanged("EldPcEnabled");
            }
        }

        /// <summary>
        /// Flag indicating this driver may select the Yard Move duty status in ELD logs.
        /// </summary>
        [JsonProperty("eldYmEnabled")]
        public bool? EldYmEnabled 
        { 
            get 
            {
                return this.eldYmEnabled; 
            } 
            set 
            {
                this.eldYmEnabled = value;
                onPropertyChanged("EldYmEnabled");
            }
        }

        /// <summary>
        /// Dictionary of external IDs (string key-value pairs)
        /// </summary>
        [JsonProperty("externalIds")]
        public Dictionary<string, string> ExternalIds 
        { 
            get 
            {
                return this.externalIds; 
            } 
            set 
            {
                this.externalIds = value;
                onPropertyChanged("ExternalIds");
            }
        }

        /// <summary>
        /// ID of the group if the organization has multiple groups (uncommon).
        /// </summary>
        [JsonProperty("groupId")]
        public long? GroupId 
        { 
            get 
            {
                return this.groupId; 
            } 
            set 
            {
                this.groupId = value;
                onPropertyChanged("GroupId");
            }
        }

        /// <summary>
        /// Driver's state issued license number.
        /// </summary>
        [JsonProperty("licenseNumber")]
        public string LicenseNumber 
        { 
            get 
            {
                return this.licenseNumber; 
            } 
            set 
            {
                this.licenseNumber = value;
                onPropertyChanged("LicenseNumber");
            }
        }

        /// <summary>
        /// Abbreviation of state that issued driver's license.
        /// </summary>
        [JsonProperty("licenseState")]
        public string LicenseState 
        { 
            get 
            {
                return this.licenseState; 
            } 
            set 
            {
                this.licenseState = value;
                onPropertyChanged("LicenseState");
            }
        }

        /// <summary>
        /// Driver's name.
        /// </summary>
        [JsonProperty("name")]
        public string Name 
        { 
            get 
            {
                return this.name; 
            } 
            set 
            {
                this.name = value;
                onPropertyChanged("Name");
            }
        }

        /// <summary>
        /// Notes about the driver.
        /// </summary>
        [JsonProperty("notes")]
        public string Notes 
        { 
            get 
            {
                return this.notes; 
            } 
            set 
            {
                this.notes = value;
                onPropertyChanged("Notes");
            }
        }

        /// <summary>
        /// Driver's phone number. Please include only digits, ex. 4157771234
        /// </summary>
        [JsonProperty("phone")]
        public string Phone 
        { 
            get 
            {
                return this.phone; 
            } 
            set 
            {
                this.phone = value;
                onPropertyChanged("Phone");
            }
        }

        /// <summary>
        /// Driver's login username into the driver app.
        /// </summary>
        [JsonProperty("username")]
        public string Username 
        { 
            get 
            {
                return this.username; 
            } 
            set 
            {
                this.username = value;
                onPropertyChanged("Username");
            }
        }

        /// <summary>
        /// ID of the vehicle assigned to the driver for static vehicle assignments. (uncommon).
        /// </summary>
        [JsonProperty("vehicleId")]
        public long? VehicleId 
        { 
            get 
            {
                return this.vehicleId; 
            } 
            set 
            {
                this.vehicleId = value;
                onPropertyChanged("VehicleId");
            }
        }
    }
} 
/*
 * SamsaraAPI.PCL
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SamsaraAPI.PCL;
using SamsaraAPI.PCL.Utilities;


namespace SamsaraAPI.PCL.Models
{
    public class Trip : BaseModel 
    {
        // These fields hold the values for the public properties.
        private int? distanceMeters;
        private int? driverId;
        private string endAddress;
        private Models.EndCoordinates endCoordinates;
        private string endLocation;
        private long? endMs;
        private int? endOdometer;
        private int? fuelConsumedMl;
        private string startAddress;
        private Models.StartCoordinates startCoordinates;
        private string startLocation;
        private long? startMs;
        private int? startOdometer;
        private int? tollMeters;

        /// <summary>
        /// Length of the trip in meters.
        /// </summary>
        [JsonProperty("distanceMeters")]
        public int? DistanceMeters 
        { 
            get 
            {
                return this.distanceMeters; 
            } 
            set 
            {
                this.distanceMeters = value;
                onPropertyChanged("DistanceMeters");
            }
        }

        /// <summary>
        /// ID of the driver.
        /// </summary>
        [JsonProperty("driverId")]
        public int? DriverId 
        { 
            get 
            {
                return this.driverId; 
            } 
            set 
            {
                this.driverId = value;
                onPropertyChanged("DriverId");
            }
        }

        /// <summary>
        /// Text representation of nearest identifiable location to the end (latitude, longitude) coordinates.
        /// </summary>
        [JsonProperty("endAddress")]
        public string EndAddress 
        { 
            get 
            {
                return this.endAddress; 
            } 
            set 
            {
                this.endAddress = value;
                onPropertyChanged("EndAddress");
            }
        }

        /// <summary>
        /// End (latitude, longitude) in decimal degrees.
        /// </summary>
        [JsonProperty("endCoordinates")]
        public Models.EndCoordinates EndCoordinates 
        { 
            get 
            {
                return this.endCoordinates; 
            } 
            set 
            {
                this.endCoordinates = value;
                onPropertyChanged("EndCoordinates");
            }
        }

        /// <summary>
        /// Geocoded street address of start (latitude, longitude) coordinates.
        /// </summary>
        [JsonProperty("endLocation")]
        public string EndLocation 
        { 
            get 
            {
                return this.endLocation; 
            } 
            set 
            {
                this.endLocation = value;
                onPropertyChanged("EndLocation");
            }
        }

        /// <summary>
        /// End of the trip in UNIX milliseconds.
        /// </summary>
        [JsonProperty("endMs")]
        public long? EndMs 
        { 
            get 
            {
                return this.endMs; 
            } 
            set 
            {
                this.endMs = value;
                onPropertyChanged("EndMs");
            }
        }

        /// <summary>
        /// Odometer reading at the end of the trip.
        /// </summary>
        [JsonProperty("endOdometer")]
        public int? EndOdometer 
        { 
            get 
            {
                return this.endOdometer; 
            } 
            set 
            {
                this.endOdometer = value;
                onPropertyChanged("EndOdometer");
            }
        }

        /// <summary>
        /// Amount in milliliters of fuel consumed on this trip.
        /// </summary>
        [JsonProperty("fuelConsumedMl")]
        public int? FuelConsumedMl 
        { 
            get 
            {
                return this.fuelConsumedMl; 
            } 
            set 
            {
                this.fuelConsumedMl = value;
                onPropertyChanged("FuelConsumedMl");
            }
        }

        /// <summary>
        /// Text representation of nearest identifiable location to the start (latitude, longitude) coordinates.
        /// </summary>
        [JsonProperty("startAddress")]
        public string StartAddress 
        { 
            get 
            {
                return this.startAddress; 
            } 
            set 
            {
                this.startAddress = value;
                onPropertyChanged("StartAddress");
            }
        }

        /// <summary>
        /// Start (latitude, longitude) in decimal degrees.
        /// </summary>
        [JsonProperty("startCoordinates")]
        public Models.StartCoordinates StartCoordinates 
        { 
            get 
            {
                return this.startCoordinates; 
            } 
            set 
            {
                this.startCoordinates = value;
                onPropertyChanged("StartCoordinates");
            }
        }

        /// <summary>
        /// Geocoded street address of start (latitude, longitude) coordinates.
        /// </summary>
        [JsonProperty("startLocation")]
        public string StartLocation 
        { 
            get 
            {
                return this.startLocation; 
            } 
            set 
            {
                this.startLocation = value;
                onPropertyChanged("StartLocation");
            }
        }

        /// <summary>
        /// Beginning of the trip in UNIX milliseconds.
        /// </summary>
        [JsonProperty("startMs")]
        public long? StartMs 
        { 
            get 
            {
                return this.startMs; 
            } 
            set 
            {
                this.startMs = value;
                onPropertyChanged("StartMs");
            }
        }

        /// <summary>
        /// Odometer reading at the beginning of the trip.
        /// </summary>
        [JsonProperty("startOdometer")]
        public int? StartOdometer 
        { 
            get 
            {
                return this.startOdometer; 
            } 
            set 
            {
                this.startOdometer = value;
                onPropertyChanged("StartOdometer");
            }
        }

        /// <summary>
        /// Length in meters trip spent on toll roads.
        /// </summary>
        [JsonProperty("tollMeters")]
        public int? TollMeters 
        { 
            get 
            {
                return this.tollMeters; 
            } 
            set 
            {
                this.tollMeters = value;
                onPropertyChanged("TollMeters");
            }
        }
    }
} 
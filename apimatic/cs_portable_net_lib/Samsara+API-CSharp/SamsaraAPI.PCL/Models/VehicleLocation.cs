/*
 * SamsaraAPI.PCL
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SamsaraAPI.PCL;
using SamsaraAPI.PCL.Utilities;


namespace SamsaraAPI.PCL.Models
{
    public class VehicleLocation : BaseModel 
    {
        // These fields hold the values for the public properties.
        private double? heading;
        private long id;
        private double? latitude;
        private string location;
        private double? longitude;
        private string name;
        private long? odometerMeters;
        private bool? onTrip;
        private double? speed;
        private long? time;
        private string vin;

        /// <summary>
        /// Heading in degrees.
        /// </summary>
        [JsonProperty("heading")]
        public double? Heading 
        { 
            get 
            {
                return this.heading; 
            } 
            set 
            {
                this.heading = value;
                onPropertyChanged("Heading");
            }
        }

        /// <summary>
        /// ID of the vehicle.
        /// </summary>
        [JsonProperty("id")]
        public long Id 
        { 
            get 
            {
                return this.id; 
            } 
            set 
            {
                this.id = value;
                onPropertyChanged("Id");
            }
        }

        /// <summary>
        /// Latitude in decimal degrees.
        /// </summary>
        [JsonProperty("latitude")]
        public double? Latitude 
        { 
            get 
            {
                return this.latitude; 
            } 
            set 
            {
                this.latitude = value;
                onPropertyChanged("Latitude");
            }
        }

        /// <summary>
        /// Text representation of nearest identifiable location to (latitude, longitude) coordinates.
        /// </summary>
        [JsonProperty("location")]
        public string Location 
        { 
            get 
            {
                return this.location; 
            } 
            set 
            {
                this.location = value;
                onPropertyChanged("Location");
            }
        }

        /// <summary>
        /// Longitude in decimal degrees.
        /// </summary>
        [JsonProperty("longitude")]
        public double? Longitude 
        { 
            get 
            {
                return this.longitude; 
            } 
            set 
            {
                this.longitude = value;
                onPropertyChanged("Longitude");
            }
        }

        /// <summary>
        /// Name of the vehicle.
        /// </summary>
        [JsonProperty("name")]
        public string Name 
        { 
            get 
            {
                return this.name; 
            } 
            set 
            {
                this.name = value;
                onPropertyChanged("Name");
            }
        }

        /// <summary>
        /// The number of meters reported by the odometer.
        /// </summary>
        [JsonProperty("odometerMeters")]
        public long? OdometerMeters 
        { 
            get 
            {
                return this.odometerMeters; 
            } 
            set 
            {
                this.odometerMeters = value;
                onPropertyChanged("OdometerMeters");
            }
        }

        /// <summary>
        /// Whether or not a trip is currently in progress for this vehicle. More information available via /fleet/trips endpoint.
        /// </summary>
        [JsonProperty("onTrip")]
        public bool? OnTrip 
        { 
            get 
            {
                return this.onTrip; 
            } 
            set 
            {
                this.onTrip = value;
                onPropertyChanged("OnTrip");
            }
        }

        /// <summary>
        /// Speed in miles per hour.
        /// </summary>
        [JsonProperty("speed")]
        public double? Speed 
        { 
            get 
            {
                return this.speed; 
            } 
            set 
            {
                this.speed = value;
                onPropertyChanged("Speed");
            }
        }

        /// <summary>
        /// The time the reported location was logged, reported as a UNIX timestamp in milliseconds.
        /// </summary>
        [JsonProperty("time")]
        public long? Time 
        { 
            get 
            {
                return this.time; 
            } 
            set 
            {
                this.time = value;
                onPropertyChanged("Time");
            }
        }

        /// <summary>
        /// Vehicle Identification Number (VIN) of the vehicle.
        /// </summary>
        [JsonProperty("vin")]
        public string Vin 
        { 
            get 
            {
                return this.vin; 
            } 
            set 
            {
                this.vin = value;
                onPropertyChanged("Vin");
            }
        }
    }
} 
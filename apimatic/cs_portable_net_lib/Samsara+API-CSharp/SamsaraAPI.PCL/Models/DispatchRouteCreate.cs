/*
 * SamsaraAPI.PCL
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SamsaraAPI.PCL;
using SamsaraAPI.PCL.Utilities;


namespace SamsaraAPI.PCL.Models
{
    public class DispatchRouteCreate : BaseModel 
    {
        // These fields hold the values for the public properties.
        private List<Models.DispatchJobCreate> dispatchJobs;
        private long? actualEndMs;
        private long? actualStartMs;
        private long? driverId;
        private long? groupId;
        private string name;
        private long scheduledEndMs;
        private long? scheduledMeters;
        private long scheduledStartMs;
        private string startLocationAddress;
        private long? startLocationAddressId;
        private double? startLocationLat;
        private double? startLocationLng;
        private string startLocationName;
        private long? trailerId;
        private long? vehicleId;

        /// <summary>
        /// The dispatch jobs to create for this route.
        /// </summary>
        [JsonProperty("dispatch_jobs")]
        public List<Models.DispatchJobCreate> DispatchJobs 
        { 
            get 
            {
                return this.dispatchJobs; 
            } 
            set 
            {
                this.dispatchJobs = value;
                onPropertyChanged("DispatchJobs");
            }
        }

        /// <summary>
        /// The time in Unix epoch milliseconds that the route actually ended.
        /// </summary>
        [JsonProperty("actual_end_ms")]
        public long? ActualEndMs 
        { 
            get 
            {
                return this.actualEndMs; 
            } 
            set 
            {
                this.actualEndMs = value;
                onPropertyChanged("ActualEndMs");
            }
        }

        /// <summary>
        /// The time in Unix epoch milliseconds that the route actually started.
        /// </summary>
        [JsonProperty("actual_start_ms")]
        public long? ActualStartMs 
        { 
            get 
            {
                return this.actualStartMs; 
            } 
            set 
            {
                this.actualStartMs = value;
                onPropertyChanged("ActualStartMs");
            }
        }

        /// <summary>
        /// ID of the driver assigned to the dispatch route. Note that driver_id and vehicle_id are mutually exclusive. If neither is specified, then the route is unassigned.
        /// </summary>
        [JsonProperty("driver_id")]
        public long? DriverId 
        { 
            get 
            {
                return this.driverId; 
            } 
            set 
            {
                this.driverId = value;
                onPropertyChanged("DriverId");
            }
        }

        /// <summary>
        /// ID of the group if the organization has multiple groups (optional).
        /// </summary>
        [JsonProperty("group_id")]
        public long? GroupId 
        { 
            get 
            {
                return this.groupId; 
            } 
            set 
            {
                this.groupId = value;
                onPropertyChanged("GroupId");
            }
        }

        /// <summary>
        /// Descriptive name of this route.
        /// </summary>
        [JsonProperty("name")]
        public string Name 
        { 
            get 
            {
                return this.name; 
            } 
            set 
            {
                this.name = value;
                onPropertyChanged("Name");
            }
        }

        /// <summary>
        /// The time in Unix epoch milliseconds that the last job in the route is scheduled to end.
        /// </summary>
        [JsonProperty("scheduled_end_ms")]
        public long ScheduledEndMs 
        { 
            get 
            {
                return this.scheduledEndMs; 
            } 
            set 
            {
                this.scheduledEndMs = value;
                onPropertyChanged("ScheduledEndMs");
            }
        }

        /// <summary>
        /// The distance expected to be traveled for this route in meters.
        /// </summary>
        [JsonProperty("scheduled_meters")]
        public long? ScheduledMeters 
        { 
            get 
            {
                return this.scheduledMeters; 
            } 
            set 
            {
                this.scheduledMeters = value;
                onPropertyChanged("ScheduledMeters");
            }
        }

        /// <summary>
        /// The time in Unix epoch milliseconds that the route is scheduled to start.
        /// </summary>
        [JsonProperty("scheduled_start_ms")]
        public long ScheduledStartMs 
        { 
            get 
            {
                return this.scheduledStartMs; 
            } 
            set 
            {
                this.scheduledStartMs = value;
                onPropertyChanged("ScheduledStartMs");
            }
        }

        /// <summary>
        /// The address of the route's starting location, as it would be recognized if provided to maps.google.com. Optional if a valid start location address ID is provided.
        /// </summary>
        [JsonProperty("start_location_address")]
        public string StartLocationAddress 
        { 
            get 
            {
                return this.startLocationAddress; 
            } 
            set 
            {
                this.startLocationAddress = value;
                onPropertyChanged("StartLocationAddress");
            }
        }

        /// <summary>
        /// ID of the start location associated with an address book entry. Optional if valid values are provided for start location address or latitude/longitude. If a valid start location address ID is provided, address/latitude/longitude will be used from the address book entry. Name of the address book entry will only be used if the start location name is not provided.
        /// </summary>
        [JsonProperty("start_location_address_id")]
        public long? StartLocationAddressId 
        { 
            get 
            {
                return this.startLocationAddressId; 
            } 
            set 
            {
                this.startLocationAddressId = value;
                onPropertyChanged("StartLocationAddressId");
            }
        }

        /// <summary>
        /// Latitude of the start location in decimal degrees. Optional if a valid start location address ID is provided.
        /// </summary>
        [JsonProperty("start_location_lat")]
        public double? StartLocationLat 
        { 
            get 
            {
                return this.startLocationLat; 
            } 
            set 
            {
                this.startLocationLat = value;
                onPropertyChanged("StartLocationLat");
            }
        }

        /// <summary>
        /// Longitude of the start location in decimal degrees. Optional if a valid start location address ID is provided.
        /// </summary>
        [JsonProperty("start_location_lng")]
        public double? StartLocationLng 
        { 
            get 
            {
                return this.startLocationLng; 
            } 
            set 
            {
                this.startLocationLng = value;
                onPropertyChanged("StartLocationLng");
            }
        }

        /// <summary>
        /// The name of the route's starting location. If provided, it will take precedence over the name of the address book entry.
        /// </summary>
        [JsonProperty("start_location_name")]
        public string StartLocationName 
        { 
            get 
            {
                return this.startLocationName; 
            } 
            set 
            {
                this.startLocationName = value;
                onPropertyChanged("StartLocationName");
            }
        }

        /// <summary>
        /// ID of the trailer assigned to the dispatch route. Note that trailers can only be assigned to routes that have a Vehicle or Driver assigned to them.
        /// </summary>
        [JsonProperty("trailer_id")]
        public long? TrailerId 
        { 
            get 
            {
                return this.trailerId; 
            } 
            set 
            {
                this.trailerId = value;
                onPropertyChanged("TrailerId");
            }
        }

        /// <summary>
        /// ID of the vehicle assigned to the dispatch route. Note that vehicle_id and driver_id are mutually exclusive. If neither is specified, then the route is unassigned.
        /// </summary>
        [JsonProperty("vehicle_id")]
        public long? VehicleId 
        { 
            get 
            {
                return this.vehicleId; 
            } 
            set 
            {
                this.vehicleId = value;
                onPropertyChanged("VehicleId");
            }
        }
    }
} 
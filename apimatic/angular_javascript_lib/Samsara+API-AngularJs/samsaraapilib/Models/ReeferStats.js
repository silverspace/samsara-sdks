/**
 * SamsaraAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of ReeferStats
 *
 * @constructor
 */
angular.module('SamsaraAPILib')
    .factory('ReeferStats', ['BaseModel', ReeferStatsModel]);

    function ReeferStatsModel(BaseModel) {
        var ReeferStats = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.alarms = this.getValue(obj.alarms);
            this.engineHours = this.getValue(obj.engineHours);
            this.fuelPercentage = this.getValue(obj.fuelPercentage);
            this.powerStatus = this.getValue(obj.powerStatus);
            this.returnAirTemp = this.getValue(obj.returnAirTemp);
            this.setPoint = this.getValue(obj.setPoint);
        };

        ReeferStats.prototype = new BaseModel();
        ReeferStats.prototype.constructor = ReeferStats;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        ReeferStats.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'alarms', realName: 'alarms', array: true, type: 'Alarm' },
                { name: 'engineHours', realName: 'engineHours', array: true, type: 'EngineHour' },
                { name: 'fuelPercentage', realName: 'fuelPercentage', array: true, type: 'FuelPercentage' },
                { name: 'powerStatus', realName: 'powerStatus', array: true, type: 'PowerStatus' },
                { name: 'returnAirTemp', realName: 'returnAirTemp', array: true, type: 'ReturnAirTemp' },
                { name: 'setPoint', realName: 'setPoint', array: true, type: 'SetPoint' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        ReeferStats.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * Reefer alarms
         *
         * @return {array|null}
         */
        ReeferStats.prototype.getAlarms = function () {
            return this.alarms;
        };
    
        /**
         * Setter for Alarms
         * 
         * @param {array|null} value 
         */
        ReeferStats.prototype.setAlarms = function (value) {
            this.alarms = value;
        };
    
        /**
         * Engine hours of the reefer
         *
         * @return {array|null}
         */
        ReeferStats.prototype.getEngineHours = function () {
            return this.engineHours;
        };
    
        /**
         * Setter for EngineHours
         * 
         * @param {array|null} value 
         */
        ReeferStats.prototype.setEngineHours = function (value) {
            this.engineHours = value;
        };
    
        /**
         * Fuel percentage of the reefer
         *
         * @return {array|null}
         */
        ReeferStats.prototype.getFuelPercentage = function () {
            return this.fuelPercentage;
        };
    
        /**
         * Setter for FuelPercentage
         * 
         * @param {array|null} value 
         */
        ReeferStats.prototype.setFuelPercentage = function (value) {
            this.fuelPercentage = value;
        };
    
        /**
         * Power status of the reefer
         *
         * @return {array|null}
         */
        ReeferStats.prototype.getPowerStatus = function () {
            return this.powerStatus;
        };
    
        /**
         * Setter for PowerStatus
         * 
         * @param {array|null} value 
         */
        ReeferStats.prototype.setPowerStatus = function (value) {
            this.powerStatus = value;
        };
    
        /**
         * Return air temperature of the reefer
         *
         * @return {array|null}
         */
        ReeferStats.prototype.getReturnAirTemp = function () {
            return this.returnAirTemp;
        };
    
        /**
         * Setter for ReturnAirTemp
         * 
         * @param {array|null} value 
         */
        ReeferStats.prototype.setReturnAirTemp = function (value) {
            this.returnAirTemp = value;
        };
    
        /**
         * Set point temperature of the reefer
         *
         * @return {array|null}
         */
        ReeferStats.prototype.getSetPoint = function () {
            return this.setPoint;
        };
    
        /**
         * Setter for SetPoint
         * 
         * @param {array|null} value 
         */
        ReeferStats.prototype.setSetPoint = function (value) {
            this.setPoint = value;
        };
    
        return ReeferStats;
    }

}(angular));

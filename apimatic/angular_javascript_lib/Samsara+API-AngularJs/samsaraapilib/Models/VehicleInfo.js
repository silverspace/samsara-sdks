/**
 * SamsaraAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of VehicleInfo
 *
 * @constructor
 */
angular.module('SamsaraAPILib')
    .factory('VehicleInfo', ['BaseModel', VehicleInfoModel]);

    function VehicleInfoModel(BaseModel) {
        var VehicleInfo = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.make = this.getValue(obj.make);
            this.model = this.getValue(obj.model);
            this.vin = this.getValue(obj.vin);
            this.year = this.getValue(obj.year);
        };

        VehicleInfo.prototype = new BaseModel();
        VehicleInfo.prototype.constructor = VehicleInfo;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        VehicleInfo.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'make', realName: 'make' },
                { name: 'model', realName: 'model' },
                { name: 'vin', realName: 'vin' },
                { name: 'year', realName: 'year' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        VehicleInfo.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * Make of the vehicle.
         *
         * @return {string|null}
         */
        VehicleInfo.prototype.getMake = function () {
            return this.make;
        };
    
        /**
         * Setter for Make
         * 
         * @param {string|null} value 
         */
        VehicleInfo.prototype.setMake = function (value) {
            this.make = value;
        };
    
        /**
         * Model of the Vehicle.
         *
         * @return {string|null}
         */
        VehicleInfo.prototype.getModel = function () {
            return this.model;
        };
    
        /**
         * Setter for Model
         * 
         * @param {string|null} value 
         */
        VehicleInfo.prototype.setModel = function (value) {
            this.model = value;
        };
    
        /**
         * Vehicle Identification Number.
         *
         * @return {string|null}
         */
        VehicleInfo.prototype.getVin = function () {
            return this.vin;
        };
    
        /**
         * Setter for Vin
         * 
         * @param {string|null} value 
         */
        VehicleInfo.prototype.setVin = function (value) {
            this.vin = value;
        };
    
        /**
         * Year of the vehicle.
         *
         * @return {long|null}
         */
        VehicleInfo.prototype.getYear = function () {
            return this.year;
        };
    
        /**
         * Setter for Year
         * 
         * @param {long|null} value 
         */
        VehicleInfo.prototype.setYear = function (value) {
            this.year = value;
        };
    
        return VehicleInfo;
    }

}(angular));

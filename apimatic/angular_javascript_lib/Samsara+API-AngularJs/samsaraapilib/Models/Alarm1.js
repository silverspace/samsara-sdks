/**
 * SamsaraAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Alarm1
 *
 * @constructor
 */
angular.module('SamsaraAPILib')
    .factory('Alarm1', ['BaseModel', Alarm1Model]);

    function Alarm1Model(BaseModel) {
        var Alarm1 = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.alarmCode = this.getValue(obj.alarmCode);
            this.description = this.getValue(obj.description);
            this.operatorAction = this.getValue(obj.operatorAction);
            this.severity = this.getValue(obj.severity);
        };

        Alarm1.prototype = new BaseModel();
        Alarm1.prototype.constructor = Alarm1;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        Alarm1.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'alarmCode', realName: 'alarmCode' },
                { name: 'description', realName: 'description' },
                { name: 'operatorAction', realName: 'operatorAction' },
                { name: 'severity', realName: 'severity' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        Alarm1.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * ID of the alarm
         *
         * @return {long|null}
         */
        Alarm1.prototype.getAlarmCode = function () {
            return this.alarmCode;
        };
    
        /**
         * Setter for AlarmCode
         * 
         * @param {long|null} value 
         */
        Alarm1.prototype.setAlarmCode = function (value) {
            this.alarmCode = value;
        };
    
        /**
         * Description of the alarm
         *
         * @return {string|null}
         */
        Alarm1.prototype.getDescription = function () {
            return this.description;
        };
    
        /**
         * Setter for Description
         * 
         * @param {string|null} value 
         */
        Alarm1.prototype.setDescription = function (value) {
            this.description = value;
        };
    
        /**
         * Recommended operator action
         *
         * @return {string|null}
         */
        Alarm1.prototype.getOperatorAction = function () {
            return this.operatorAction;
        };
    
        /**
         * Setter for OperatorAction
         * 
         * @param {string|null} value 
         */
        Alarm1.prototype.setOperatorAction = function (value) {
            this.operatorAction = value;
        };
    
        /**
         * Severity of the alarm: 1: OK to run, 2: Check as specified, 3: Take immediate action
         *
         * @return {long|null}
         */
        Alarm1.prototype.getSeverity = function () {
            return this.severity;
        };
    
        /**
         * Setter for Severity
         * 
         * @param {long|null} value 
         */
        Alarm1.prototype.setSeverity = function (value) {
            this.severity = value;
        };
    
        return Alarm1;
    }

}(angular));

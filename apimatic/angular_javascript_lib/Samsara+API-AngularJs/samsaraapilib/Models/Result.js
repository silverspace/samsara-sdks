/**
 * SamsaraAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Result
 *
 * @constructor
 */
angular.module('SamsaraAPILib')
    .factory('Result', ['BaseModel', ResultModel]);

    function ResultModel(BaseModel) {
        var Result = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.series = this.getValue(obj.series);
            this.timeMs = this.getValue(obj.timeMs);
        };

        Result.prototype = new BaseModel();
        Result.prototype.constructor = Result;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        Result.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'series', realName: 'series', array: true },
                { name: 'timeMs', realName: 'timeMs' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        Result.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * List of datapoints, one for each requested (sensor, field) pair.
         *
         * @return {array|null}
         */
        Result.prototype.getSeries = function () {
            return this.series;
        };
    
        /**
         * Setter for Series
         * 
         * @param {array|null} value 
         */
        Result.prototype.setSeries = function (value) {
            this.series = value;
        };
    
        /**
         * Timestamp in UNIX milliseconds.
         *
         * @return {long|null}
         */
        Result.prototype.getTimeMs = function () {
            return this.timeMs;
        };
    
        /**
         * Setter for TimeMs
         * 
         * @param {long|null} value 
         */
        Result.prototype.setTimeMs = function (value) {
            this.timeMs = value;
        };
    
        return Result;
    }

}(angular));

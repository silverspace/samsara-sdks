/*
 * SamsaraAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.samsara.api.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class Log 
        implements java.io.Serializable {
    private static final long serialVersionUID = 1771957216143057859L;
    private List<Double> codriverIds;
    private Long driverId;
    private Long groupId;
    private String locCity;
    private Double locLat;
    private Double locLng;
    private String locName;
    private String locState;
    private Long logStartMs;
    private String remark;
    private String statusType;
    private Long vehicleId;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("codriverIds")
    public List<Double> getCodriverIds ( ) { 
        return this.codriverIds;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("codriverIds")
    public void setCodriverIds (List<Double> value) { 
        this.codriverIds = value;
    }
 
    /** GETTER
     * ID of the driver.
     */
    @JsonGetter("driverId")
    public Long getDriverId ( ) { 
        return this.driverId;
    }
    
    /** SETTER
     * ID of the driver.
     */
    @JsonSetter("driverId")
    public void setDriverId (Long value) { 
        this.driverId = value;
    }
 
    /** GETTER
     * ID of the group.
     */
    @JsonGetter("groupId")
    public Long getGroupId ( ) { 
        return this.groupId;
    }
    
    /** SETTER
     * ID of the group.
     */
    @JsonSetter("groupId")
    public void setGroupId (Long value) { 
        this.groupId = value;
    }
 
    /** GETTER
     * City in which the log was recorded.
     */
    @JsonGetter("locCity")
    public String getLocCity ( ) { 
        return this.locCity;
    }
    
    /** SETTER
     * City in which the log was recorded.
     */
    @JsonSetter("locCity")
    public void setLocCity (String value) { 
        this.locCity = value;
    }
 
    /** GETTER
     * Latitude at which the log was recorded.
     */
    @JsonGetter("locLat")
    public Double getLocLat ( ) { 
        return this.locLat;
    }
    
    /** SETTER
     * Latitude at which the log was recorded.
     */
    @JsonSetter("locLat")
    public void setLocLat (Double value) { 
        this.locLat = value;
    }
 
    /** GETTER
     * Longitude at which the log was recorded.
     */
    @JsonGetter("locLng")
    public Double getLocLng ( ) { 
        return this.locLng;
    }
    
    /** SETTER
     * Longitude at which the log was recorded.
     */
    @JsonSetter("locLng")
    public void setLocLng (Double value) { 
        this.locLng = value;
    }
 
    /** GETTER
     * Name of location at which the log was recorded.
     */
    @JsonGetter("locName")
    public String getLocName ( ) { 
        return this.locName;
    }
    
    /** SETTER
     * Name of location at which the log was recorded.
     */
    @JsonSetter("locName")
    public void setLocName (String value) { 
        this.locName = value;
    }
 
    /** GETTER
     * State in which the log was recorded.
     */
    @JsonGetter("locState")
    public String getLocState ( ) { 
        return this.locState;
    }
    
    /** SETTER
     * State in which the log was recorded.
     */
    @JsonSetter("locState")
    public void setLocState (String value) { 
        this.locState = value;
    }
 
    /** GETTER
     * The time at which the log/HOS status started in UNIX milliseconds.
     */
    @JsonGetter("logStartMs")
    public Long getLogStartMs ( ) { 
        return this.logStartMs;
    }
    
    /** SETTER
     * The time at which the log/HOS status started in UNIX milliseconds.
     */
    @JsonSetter("logStartMs")
    public void setLogStartMs (Long value) { 
        this.logStartMs = value;
    }
 
    /** GETTER
     * Remark associated with the log entry.
     */
    @JsonGetter("remark")
    public String getRemark ( ) { 
        return this.remark;
    }
    
    /** SETTER
     * Remark associated with the log entry.
     */
    @JsonSetter("remark")
    public void setRemark (String value) { 
        this.remark = value;
    }
 
    /** GETTER
     * The Hours of Service status type. One of `OFF_DUTY`, `SLEEPER_BED`, `DRIVING`, `ON_DUTY`, `YARD_MOVE`, `PERSONAL_CONVEYANCE`.
     */
    @JsonGetter("statusType")
    public String getStatusType ( ) { 
        return this.statusType;
    }
    
    /** SETTER
     * The Hours of Service status type. One of `OFF_DUTY`, `SLEEPER_BED`, `DRIVING`, `ON_DUTY`, `YARD_MOVE`, `PERSONAL_CONVEYANCE`.
     */
    @JsonSetter("statusType")
    public void setStatusType (String value) { 
        this.statusType = value;
    }
 
    /** GETTER
     * ID of the vehicle.
     */
    @JsonGetter("vehicleId")
    public Long getVehicleId ( ) { 
        return this.vehicleId;
    }
    
    /** SETTER
     * ID of the vehicle.
     */
    @JsonSetter("vehicleId")
    public void setVehicleId (Long value) { 
        this.vehicleId = value;
    }
 
}

/*
 * SamsaraAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.samsara.api.models;

import java.util.*;

public class LogBuilder {
    //the instance to build
    private Log log;

    /**
     * Default constructor to initialize the instance
     */
    public LogBuilder() {
        log = new Log();
    }

    public LogBuilder codriverIds(List<Double> codriverIds) {
        log.setCodriverIds(codriverIds);
        return this;
    }

    /**
     * ID of the driver.
     */
    public LogBuilder driverId(Long driverId) {
        log.setDriverId(driverId);
        return this;
    }

    /**
     * ID of the group.
     */
    public LogBuilder groupId(Long groupId) {
        log.setGroupId(groupId);
        return this;
    }

    /**
     * City in which the log was recorded.
     */
    public LogBuilder locCity(String locCity) {
        log.setLocCity(locCity);
        return this;
    }

    /**
     * Latitude at which the log was recorded.
     */
    public LogBuilder locLat(Double locLat) {
        log.setLocLat(locLat);
        return this;
    }

    /**
     * Longitude at which the log was recorded.
     */
    public LogBuilder locLng(Double locLng) {
        log.setLocLng(locLng);
        return this;
    }

    /**
     * Name of location at which the log was recorded.
     */
    public LogBuilder locName(String locName) {
        log.setLocName(locName);
        return this;
    }

    /**
     * State in which the log was recorded.
     */
    public LogBuilder locState(String locState) {
        log.setLocState(locState);
        return this;
    }

    /**
     * The time at which the log/HOS status started in UNIX milliseconds.
     */
    public LogBuilder logStartMs(Long logStartMs) {
        log.setLogStartMs(logStartMs);
        return this;
    }

    /**
     * Remark associated with the log entry.
     */
    public LogBuilder remark(String remark) {
        log.setRemark(remark);
        return this;
    }

    /**
     * The Hours of Service status type. One of `OFF_DUTY`, `SLEEPER_BED`, `DRIVING`, `ON_DUTY`, `YARD_MOVE`, `PERSONAL_CONVEYANCE`.
     */
    public LogBuilder statusType(String statusType) {
        log.setStatusType(statusType);
        return this;
    }

    /**
     * ID of the vehicle.
     */
    public LogBuilder vehicleId(Long vehicleId) {
        log.setVehicleId(vehicleId);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public Log build() {
        return log;
    }
}
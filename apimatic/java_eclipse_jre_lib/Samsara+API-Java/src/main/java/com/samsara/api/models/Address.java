/*
 * SamsaraAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.samsara.api.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class Address 
        implements java.io.Serializable {
    private static final long serialVersionUID = -1737977067792271870L;
    private List<Contact> contacts;
    private String formattedAddress;
    private AddressGeofence geofence;
    private Long id;
    private String name;
    private String notes;
    private List<TagMetadata> tags;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("contacts")
    public List<Contact> getContacts ( ) { 
        return this.contacts;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("contacts")
    public void setContacts (List<Contact> value) { 
        this.contacts = value;
    }
 
    /** GETTER
     * The full address associated with this address/geofence, as it might be recognized by maps.google.com
     */
    @JsonGetter("formattedAddress")
    public String getFormattedAddress ( ) { 
        return this.formattedAddress;
    }
    
    /** SETTER
     * The full address associated with this address/geofence, as it might be recognized by maps.google.com
     */
    @JsonSetter("formattedAddress")
    public void setFormattedAddress (String value) { 
        this.formattedAddress = value;
    }
 
    /** GETTER
     * The geofence that defines this address and its bounds. This can either be a circle, or a polygon - only one key should be provided, depending on the geofence type.
     */
    @JsonGetter("geofence")
    public AddressGeofence getGeofence ( ) { 
        return this.geofence;
    }
    
    /** SETTER
     * The geofence that defines this address and its bounds. This can either be a circle, or a polygon - only one key should be provided, depending on the geofence type.
     */
    @JsonSetter("geofence")
    public void setGeofence (AddressGeofence value) { 
        this.geofence = value;
    }
 
    /** GETTER
     * ID of the address
     */
    @JsonGetter("id")
    public Long getId ( ) { 
        return this.id;
    }
    
    /** SETTER
     * ID of the address
     */
    @JsonSetter("id")
    public void setId (Long value) { 
        this.id = value;
    }
 
    /** GETTER
     * Name of the address or geofence
     */
    @JsonGetter("name")
    public String getName ( ) { 
        return this.name;
    }
    
    /** SETTER
     * Name of the address or geofence
     */
    @JsonSetter("name")
    public void setName (String value) { 
        this.name = value;
    }
 
    /** GETTER
     * Notes associated with an address.
     */
    @JsonGetter("notes")
    public String getNotes ( ) { 
        return this.notes;
    }
    
    /** SETTER
     * Notes associated with an address.
     */
    @JsonSetter("notes")
    public void setNotes (String value) { 
        this.notes = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("tags")
    public List<TagMetadata> getTags ( ) { 
        return this.tags;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("tags")
    public void setTags (List<TagMetadata> value) { 
        this.tags = value;
    }
 
}

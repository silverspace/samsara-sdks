/*
 * SamsaraAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.samsara.api.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class CreateDvirParam 
        implements java.io.Serializable {
    private static final long serialVersionUID = 3116282932610137494L;
    private String inspectionType = "mechanic";
    private String mechanicNotes;
    private Integer odometerMiles;
    private Boolean previousDefectsCorrected;
    private Boolean previousDefectsIgnored;
    private SafeEnum safe;
    private Integer trailerId;
    private String userEmail;
    private Integer vehicleId;
    /** GETTER
     * Only type 'mechanic' is currently accepted.
     */
    @JsonGetter("inspectionType")
    public String getInspectionType ( ) { 
        return this.inspectionType;
    }
    
    /** SETTER
     * Only type 'mechanic' is currently accepted.
     */
    @JsonSetter("inspectionType")
    public void setInspectionType (String value) { 
        this.inspectionType = value;
    }
 
    /** GETTER
     * Any notes from the mechanic.
     */
    @JsonGetter("mechanicNotes")
    public String getMechanicNotes ( ) { 
        return this.mechanicNotes;
    }
    
    /** SETTER
     * Any notes from the mechanic.
     */
    @JsonSetter("mechanicNotes")
    public void setMechanicNotes (String value) { 
        this.mechanicNotes = value;
    }
 
    /** GETTER
     * The current odometer of the vehicle.
     */
    @JsonGetter("odometerMiles")
    public Integer getOdometerMiles ( ) { 
        return this.odometerMiles;
    }
    
    /** SETTER
     * The current odometer of the vehicle.
     */
    @JsonSetter("odometerMiles")
    public void setOdometerMiles (Integer value) { 
        this.odometerMiles = value;
    }
 
    /** GETTER
     * Whether any previous defects were corrected. If this vehicle or trailer was previously marked unsafe, and this DVIR marks it as safe, either previousDefectsCorrected or previousDefectsIgnored must be true.
     */
    @JsonGetter("previousDefectsCorrected")
    public Boolean getPreviousDefectsCorrected ( ) { 
        return this.previousDefectsCorrected;
    }
    
    /** SETTER
     * Whether any previous defects were corrected. If this vehicle or trailer was previously marked unsafe, and this DVIR marks it as safe, either previousDefectsCorrected or previousDefectsIgnored must be true.
     */
    @JsonSetter("previousDefectsCorrected")
    public void setPreviousDefectsCorrected (Boolean value) { 
        this.previousDefectsCorrected = value;
    }
 
    /** GETTER
     * Whether any previous defects were ignored. If this vehicle or trailer was previously marked unsafe, and this DVIR marks it as safe, either previousDefectsCorrected or previousDefectsIgnored must be true.
     */
    @JsonGetter("previousDefectsIgnored")
    public Boolean getPreviousDefectsIgnored ( ) { 
        return this.previousDefectsIgnored;
    }
    
    /** SETTER
     * Whether any previous defects were ignored. If this vehicle or trailer was previously marked unsafe, and this DVIR marks it as safe, either previousDefectsCorrected or previousDefectsIgnored must be true.
     */
    @JsonSetter("previousDefectsIgnored")
    public void setPreviousDefectsIgnored (Boolean value) { 
        this.previousDefectsIgnored = value;
    }
 
    /** GETTER
     * Whether or not this vehicle or trailer is safe to drive.
     */
    @JsonGetter("safe")
    public SafeEnum getSafe ( ) { 
        return this.safe;
    }
    
    /** SETTER
     * Whether or not this vehicle or trailer is safe to drive.
     */
    @JsonSetter("safe")
    public void setSafe (SafeEnum value) { 
        this.safe = value;
    }
 
    /** GETTER
     * Id of trailer being inspected. Either vehicleId or trailerId must be provided.
     */
    @JsonGetter("trailerId")
    public Integer getTrailerId ( ) { 
        return this.trailerId;
    }
    
    /** SETTER
     * Id of trailer being inspected. Either vehicleId or trailerId must be provided.
     */
    @JsonSetter("trailerId")
    public void setTrailerId (Integer value) { 
        this.trailerId = value;
    }
 
    /** GETTER
     * The Samsara login email for the person creating the DVIR. The email must correspond to a Samsara user's email.
     */
    @JsonGetter("userEmail")
    public String getUserEmail ( ) { 
        return this.userEmail;
    }
    
    /** SETTER
     * The Samsara login email for the person creating the DVIR. The email must correspond to a Samsara user's email.
     */
    @JsonSetter("userEmail")
    public void setUserEmail (String value) { 
        this.userEmail = value;
    }
 
    /** GETTER
     * Id of vehicle being inspected. Either vehicleId or trailerId must be provided.
     */
    @JsonGetter("vehicleId")
    public Integer getVehicleId ( ) { 
        return this.vehicleId;
    }
    
    /** SETTER
     * Id of vehicle being inspected. Either vehicleId or trailerId must be provided.
     */
    @JsonSetter("vehicleId")
    public void setVehicleId (Integer value) { 
        this.vehicleId = value;
    }
 
}

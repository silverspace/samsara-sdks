/*
 * SamsaraAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.samsara.api.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class DocumentField 
        extends java.util.Observable
        implements java.io.Serializable {
    private static final long serialVersionUID = 3283534780676118161L;
    private String label;
    private Object value;
    private Double numberValue;
    private List<PhotoValue> photoValue;
    private String stringValue;
    private String valueType;
    /** GETTER
     * Descriptive name of this field.
     */
    @JsonGetter("label")
    public String getLabel ( ) { 
        return this.label;
    }
    
    /** SETTER
     * Descriptive name of this field.
     */
    @JsonSetter("label")
    public void setLabel (String value) { 
        this.label = value;
        notifyObservers(this.label);
    }
 
    /** GETTER
     * DEPRECATED: Please use stringValue, numberValue, or photoValue instead. Value of this field. Depending on what kind of field it is, this may be one of the following: an array of image urls, a float, an integer, or a string.
     */
    @JsonGetter("value")
    public Object getValue ( ) { 
        return this.value;
    }
    
    /** SETTER
     * DEPRECATED: Please use stringValue, numberValue, or photoValue instead. Value of this field. Depending on what kind of field it is, this may be one of the following: an array of image urls, a float, an integer, or a string.
     */
    @JsonSetter("value")
    public void setValue (Object value) { 
        this.value = value;
        notifyObservers(this.value);
    }
 
    /** GETTER
     * Value of this field if this document field has valueType: ValueType_Number.
     */
    @JsonGetter("numberValue")
    public Double getNumberValue ( ) { 
        return this.numberValue;
    }
    
    /** SETTER
     * Value of this field if this document field has valueType: ValueType_Number.
     */
    @JsonSetter("numberValue")
    public void setNumberValue (Double value) { 
        this.numberValue = value;
        notifyObservers(this.numberValue);
    }
 
    /** GETTER
     * Value of this field if this document field has valueType: ValueType_Photo. Array of photo objects where each object contains a URL for a photo.
     */
    @JsonGetter("photoValue")
    public List<PhotoValue> getPhotoValue ( ) { 
        return this.photoValue;
    }
    
    /** SETTER
     * Value of this field if this document field has valueType: ValueType_Photo. Array of photo objects where each object contains a URL for a photo.
     */
    @JsonSetter("photoValue")
    public void setPhotoValue (List<PhotoValue> value) { 
        this.photoValue = value;
        notifyObservers(this.photoValue);
    }
 
    /** GETTER
     * Value of this field if this document field has valueType: ValueType_String.
     */
    @JsonGetter("stringValue")
    public String getStringValue ( ) { 
        return this.stringValue;
    }
    
    /** SETTER
     * Value of this field if this document field has valueType: ValueType_String.
     */
    @JsonSetter("stringValue")
    public void setStringValue (String value) { 
        this.stringValue = value;
        notifyObservers(this.stringValue);
    }
 
    /** GETTER
     * Determines the type of this field and what type of value this field has. It should be either ValueType_Number, ValueType_String, or ValueType_Photo.
     */
    @JsonGetter("valueType")
    public String getValueType ( ) { 
        return this.valueType;
    }
    
    /** SETTER
     * Determines the type of this field and what type of value this field has. It should be either ValueType_Number, ValueType_String, or ValueType_Photo.
     */
    @JsonSetter("valueType")
    public void setValueType (String value) { 
        this.valueType = value;
        notifyObservers(this.valueType);
    }
 
}

/*
 * SamsaraAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.samsara.api.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class AddressParam 
        extends java.util.Observable
        implements java.io.Serializable {
    private static final long serialVersionUID = 8548672679983814296L;
    private String address;
    private long groupId;
    private String name;
    private int radius;
    /** GETTER
     * The address of the entry to add, as it would be recognized if provided to maps.google.com.
     */
    @JsonGetter("address")
    public String getAddress ( ) { 
        return this.address;
    }
    
    /** SETTER
     * The address of the entry to add, as it would be recognized if provided to maps.google.com.
     */
    @JsonSetter("address")
    public void setAddress (String value) { 
        this.address = value;
        notifyObservers(this.address);
    }
 
    /** GETTER
     * Group ID to query.
     */
    @JsonGetter("groupId")
    public long getGroupId ( ) { 
        return this.groupId;
    }
    
    /** SETTER
     * Group ID to query.
     */
    @JsonSetter("groupId")
    public void setGroupId (long value) { 
        this.groupId = value;
        notifyObservers(this.groupId);
    }
 
    /** GETTER
     * Name of the location to add to the address book.
     */
    @JsonGetter("name")
    public String getName ( ) { 
        return this.name;
    }
    
    /** SETTER
     * Name of the location to add to the address book.
     */
    @JsonSetter("name")
    public void setName (String value) { 
        this.name = value;
        notifyObservers(this.name);
    }
 
    /** GETTER
     * Radius in meters of the address (used for matching vehicle trip stops to this location).
     */
    @JsonGetter("radius")
    public int getRadius ( ) { 
        return this.radius;
    }
    
    /** SETTER
     * Radius in meters of the address (used for matching vehicle trip stops to this location).
     */
    @JsonSetter("radius")
    public void setRadius (int value) { 
        this.radius = value;
        notifyObservers(this.radius);
    }
 
}

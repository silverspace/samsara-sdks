/*
 * SamsaraAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.samsara.api.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class DocumentCreate 
        extends java.util.Observable
        implements java.io.Serializable {
    private static final long serialVersionUID = 2851050035113276431L;
    private String documentTypeUuid;
    private List<DocumentField> fields;
    private Long dispatchJobId;
    private String notes;
    /** GETTER
     * Universally unique identifier for the document type this document is being created for.
     */
    @JsonGetter("documentTypeUuid")
    public String getDocumentTypeUuid ( ) { 
        return this.documentTypeUuid;
    }
    
    /** SETTER
     * Universally unique identifier for the document type this document is being created for.
     */
    @JsonSetter("documentTypeUuid")
    public void setDocumentTypeUuid (String value) { 
        this.documentTypeUuid = value;
        notifyObservers(this.documentTypeUuid);
    }
 
    /** GETTER
     * List of fields should match the document type’s list of field types in the correct order. In other words, a field's valueType and value (i.e. only one of: stringValue, numberValue, or photoValue) at index _i_ should match with the document field type’s valueType at index _i_.
     */
    @JsonGetter("fields")
    public List<DocumentField> getFields ( ) { 
        return this.fields;
    }
    
    /** SETTER
     * List of fields should match the document type’s list of field types in the correct order. In other words, a field's valueType and value (i.e. only one of: stringValue, numberValue, or photoValue) at index _i_ should match with the document field type’s valueType at index _i_.
     */
    @JsonSetter("fields")
    public void setFields (List<DocumentField> value) { 
        this.fields = value;
        notifyObservers(this.fields);
    }
 
    /** GETTER
     * ID of the Samsara dispatch job for which the document is submitted
     */
    @JsonGetter("dispatchJobId")
    public Long getDispatchJobId ( ) { 
        return this.dispatchJobId;
    }
    
    /** SETTER
     * ID of the Samsara dispatch job for which the document is submitted
     */
    @JsonSetter("dispatchJobId")
    public void setDispatchJobId (Long value) { 
        this.dispatchJobId = value;
        notifyObservers(this.dispatchJobId);
    }
 
    /** GETTER
     * Notes submitted with this document.
     */
    @JsonGetter("notes")
    public String getNotes ( ) { 
        return this.notes;
    }
    
    /** SETTER
     * Notes submitted with this document.
     */
    @JsonSetter("notes")
    public void setNotes (String value) { 
        this.notes = value;
        notifyObservers(this.notes);
    }
 
}

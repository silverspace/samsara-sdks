# -*- coding: utf-8 -*-

"""
    samsaraapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Pagination(object):

    """Implementation of the 'Pagination' model.

    TODO: type model description here.

    Attributes:
        end_cursor (string): Cursor identifier representing the last element
            in the response. This value should be used in conjunction with a
            subsequent request's 'starting_after' query parameter.
        has_next_page (bool): True if there are more pages of results after
            this response.
        has_prev_page (bool): True if there are more pages of results before
            this response.
        start_cursor (string): Cursor identifier representing the first
            element in the response. This value should be used in conjunction
            with a subsequent request's 'ending_before' query parameter.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "end_cursor":'endCursor',
        "has_next_page":'hasNextPage',
        "has_prev_page":'hasPrevPage',
        "start_cursor":'startCursor'
    }

    def __init__(self,
                 end_cursor=None,
                 has_next_page=None,
                 has_prev_page=None,
                 start_cursor=None):
        """Constructor for the Pagination class"""

        # Initialize members of the class
        self.end_cursor = end_cursor
        self.has_next_page = has_next_page
        self.has_prev_page = has_prev_page
        self.start_cursor = start_cursor


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        end_cursor = dictionary.get('endCursor')
        has_next_page = dictionary.get('hasNextPage')
        has_prev_page = dictionary.get('hasPrevPage')
        start_cursor = dictionary.get('startCursor')

        # Return an object of this model
        return cls(end_cursor,
                   has_next_page,
                   has_prev_page,
                   start_cursor)



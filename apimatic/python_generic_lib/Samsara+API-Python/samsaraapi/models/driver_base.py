# -*- coding: utf-8 -*-

"""
    samsaraapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class DriverBase(object):

    """Implementation of the 'DriverBase' model.

    TODO: type model description here.

    Attributes:
        eld_adverse_weather_exemption_enabled (bool): Flag indicating this
            driver may use Adverse Weather exemptions in ELD logs.
        eld_big_day_exemption_enabled (bool): Flag indicating this driver may
            use Big Day excemptions in ELD logs.
        eld_day_start_hour (int): 0 indicating midnight-to-midnight ELD
            driving hours, 12 to indicate noon-to-noon driving hours.
        eld_exempt (bool): Flag indicating this driver is exempt from the
            Electronic Logging Mandate.
        eld_exempt_reason (string): Reason that this driver is exempt from the
            Electronic Logging Mandate (see eldExempt).
        eld_pc_enabled (bool): Flag indicating this driver may select the
            Personal Conveyance duty status in ELD logs.
        eld_ym_enabled (bool): Flag indicating this driver may select the Yard
            Move duty status in ELD logs.
        external_ids (dict<object, string>): Dictionary of external IDs
            (string key-value pairs)
        group_id (long|int): ID of the group if the organization has multiple
            groups (uncommon).
        license_number (string): Driver's state issued license number.
        license_state (string): Abbreviation of state that issued driver's
            license.
        name (string): Driver's name.
        notes (string): Notes about the driver.
        phone (string): Driver's phone number. Please include only digits, ex.
            4157771234
        username (string): Driver's login username into the driver app.
        vehicle_id (long|int): ID of the vehicle assigned to the driver for
            static vehicle assignments. (uncommon).

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name":'name',
        "eld_adverse_weather_exemption_enabled":'eldAdverseWeatherExemptionEnabled',
        "eld_big_day_exemption_enabled":'eldBigDayExemptionEnabled',
        "eld_day_start_hour":'eldDayStartHour',
        "eld_exempt":'eldExempt',
        "eld_exempt_reason":'eldExemptReason',
        "eld_pc_enabled":'eldPcEnabled',
        "eld_ym_enabled":'eldYmEnabled',
        "external_ids":'externalIds',
        "group_id":'groupId',
        "license_number":'licenseNumber',
        "license_state":'licenseState',
        "notes":'notes',
        "phone":'phone',
        "username":'username',
        "vehicle_id":'vehicleId'
    }

    def __init__(self,
                 name=None,
                 eld_adverse_weather_exemption_enabled=None,
                 eld_big_day_exemption_enabled=None,
                 eld_day_start_hour=None,
                 eld_exempt=None,
                 eld_exempt_reason=None,
                 eld_pc_enabled=False,
                 eld_ym_enabled=False,
                 external_ids=None,
                 group_id=None,
                 license_number=None,
                 license_state=None,
                 notes=None,
                 phone=None,
                 username=None,
                 vehicle_id=None):
        """Constructor for the DriverBase class"""

        # Initialize members of the class
        self.eld_adverse_weather_exemption_enabled = eld_adverse_weather_exemption_enabled
        self.eld_big_day_exemption_enabled = eld_big_day_exemption_enabled
        self.eld_day_start_hour = eld_day_start_hour
        self.eld_exempt = eld_exempt
        self.eld_exempt_reason = eld_exempt_reason
        self.eld_pc_enabled = eld_pc_enabled
        self.eld_ym_enabled = eld_ym_enabled
        self.external_ids = external_ids
        self.group_id = group_id
        self.license_number = license_number
        self.license_state = license_state
        self.name = name
        self.notes = notes
        self.phone = phone
        self.username = username
        self.vehicle_id = vehicle_id


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        name = dictionary.get('name')
        eld_adverse_weather_exemption_enabled = dictionary.get('eldAdverseWeatherExemptionEnabled')
        eld_big_day_exemption_enabled = dictionary.get('eldBigDayExemptionEnabled')
        eld_day_start_hour = dictionary.get('eldDayStartHour')
        eld_exempt = dictionary.get('eldExempt')
        eld_exempt_reason = dictionary.get('eldExemptReason')
        eld_pc_enabled = dictionary.get("eldPcEnabled") if dictionary.get("eldPcEnabled") else False
        eld_ym_enabled = dictionary.get("eldYmEnabled") if dictionary.get("eldYmEnabled") else False
        external_ids = dictionary.get('externalIds')
        group_id = dictionary.get('groupId')
        license_number = dictionary.get('licenseNumber')
        license_state = dictionary.get('licenseState')
        notes = dictionary.get('notes')
        phone = dictionary.get('phone')
        username = dictionary.get('username')
        vehicle_id = dictionary.get('vehicleId')

        # Return an object of this model
        return cls(name,
                   eld_adverse_weather_exemption_enabled,
                   eld_big_day_exemption_enabled,
                   eld_day_start_hour,
                   eld_exempt,
                   eld_exempt_reason,
                   eld_pc_enabled,
                   eld_ym_enabled,
                   external_ids,
                   group_id,
                   license_number,
                   license_state,
                   notes,
                   phone,
                   username,
                   vehicle_id)



# -*- coding: utf-8 -*-

"""
    samsaraapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import samsaraapi.models.vertex

class Polygon(object):

    """Implementation of the 'Polygon' model.

    Information about a polygon geofence. This field is only populated if the
    geofence is a polygon.

    Attributes:
        vertices (list of Vertex): The vertices of the polygon geofence. These
            geofence vertices describe the perimeter of the polygon, and must
            consist of at least 3 vertices and less than 40.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "vertices":'vertices'
    }

    def __init__(self,
                 vertices=None):
        """Constructor for the Polygon class"""

        # Initialize members of the class
        self.vertices = vertices


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        vertices = None
        if dictionary.get('vertices') != None:
            vertices = list()
            for structure in dictionary.get('vertices'):
                vertices.append(samsaraapi.models.vertex.Vertex.from_dictionary(structure))

        # Return an object of this model
        return cls(vertices)



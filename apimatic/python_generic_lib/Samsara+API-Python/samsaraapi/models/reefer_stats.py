# -*- coding: utf-8 -*-

"""
    samsaraapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import samsaraapi.models.alarm
import samsaraapi.models.engine_hour
import samsaraapi.models.fuel_percentage
import samsaraapi.models.power_status
import samsaraapi.models.return_air_temp
import samsaraapi.models.set_point

class ReeferStats(object):

    """Implementation of the 'ReeferStats' model.

    TODO: type model description here.

    Attributes:
        alarms (list of Alarm): Reefer alarms
        engine_hours (list of EngineHour): Engine hours of the reefer
        fuel_percentage (list of FuelPercentage): Fuel percentage of the
            reefer
        power_status (list of PowerStatus): Power status of the reefer
        return_air_temp (list of ReturnAirTemp): Return air temperature of the
            reefer
        set_point (list of SetPoint): Set point temperature of the reefer

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "alarms":'alarms',
        "engine_hours":'engineHours',
        "fuel_percentage":'fuelPercentage',
        "power_status":'powerStatus',
        "return_air_temp":'returnAirTemp',
        "set_point":'setPoint'
    }

    def __init__(self,
                 alarms=None,
                 engine_hours=None,
                 fuel_percentage=None,
                 power_status=None,
                 return_air_temp=None,
                 set_point=None):
        """Constructor for the ReeferStats class"""

        # Initialize members of the class
        self.alarms = alarms
        self.engine_hours = engine_hours
        self.fuel_percentage = fuel_percentage
        self.power_status = power_status
        self.return_air_temp = return_air_temp
        self.set_point = set_point


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        alarms = None
        if dictionary.get('alarms') != None:
            alarms = list()
            for structure in dictionary.get('alarms'):
                alarms.append(samsaraapi.models.alarm.Alarm.from_dictionary(structure))
        engine_hours = None
        if dictionary.get('engineHours') != None:
            engine_hours = list()
            for structure in dictionary.get('engineHours'):
                engine_hours.append(samsaraapi.models.engine_hour.EngineHour.from_dictionary(structure))
        fuel_percentage = None
        if dictionary.get('fuelPercentage') != None:
            fuel_percentage = list()
            for structure in dictionary.get('fuelPercentage'):
                fuel_percentage.append(samsaraapi.models.fuel_percentage.FuelPercentage.from_dictionary(structure))
        power_status = None
        if dictionary.get('powerStatus') != None:
            power_status = list()
            for structure in dictionary.get('powerStatus'):
                power_status.append(samsaraapi.models.power_status.PowerStatus.from_dictionary(structure))
        return_air_temp = None
        if dictionary.get('returnAirTemp') != None:
            return_air_temp = list()
            for structure in dictionary.get('returnAirTemp'):
                return_air_temp.append(samsaraapi.models.return_air_temp.ReturnAirTemp.from_dictionary(structure))
        set_point = None
        if dictionary.get('setPoint') != None:
            set_point = list()
            for structure in dictionary.get('setPoint'):
                set_point.append(samsaraapi.models.set_point.SetPoint.from_dictionary(structure))

        # Return an object of this model
        return cls(alarms,
                   engine_hours,
                   fuel_percentage,
                   power_status,
                   return_air_temp,
                   set_point)



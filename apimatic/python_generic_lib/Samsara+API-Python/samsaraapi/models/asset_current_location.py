# -*- coding: utf-8 -*-

"""
    samsaraapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class AssetCurrentLocation(object):

    """Implementation of the 'AssetCurrentLocation' model.

    Current location of an asset

    Attributes:
        latitude (float): The latitude of the location in degrees.
        location (string): The best effort (street,city,state) for the
            latitude and longitude.
        longitude (float): The longitude of the location in degrees.
        speed_miles_per_hour (float): The speed calculated from GPS that the
            asset was traveling at in miles per hour.
        time_ms (float): Time in Unix milliseconds since epoch when the asset
            was at the location.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "latitude":'latitude',
        "location":'location',
        "longitude":'longitude',
        "speed_miles_per_hour":'speedMilesPerHour',
        "time_ms":'timeMs'
    }

    def __init__(self,
                 latitude=None,
                 location=None,
                 longitude=None,
                 speed_miles_per_hour=None,
                 time_ms=None):
        """Constructor for the AssetCurrentLocation class"""

        # Initialize members of the class
        self.latitude = latitude
        self.location = location
        self.longitude = longitude
        self.speed_miles_per_hour = speed_miles_per_hour
        self.time_ms = time_ms


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        latitude = dictionary.get('latitude')
        location = dictionary.get('location')
        longitude = dictionary.get('longitude')
        speed_miles_per_hour = dictionary.get('speedMilesPerHour')
        time_ms = dictionary.get('timeMs')

        # Return an object of this model
        return cls(latitude,
                   location,
                   longitude,
                   speed_miles_per_hour,
                   time_ms)



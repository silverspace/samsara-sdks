# -*- coding: utf-8 -*-

"""
    samsaraapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import samsaraapi.models.user_tag_role

class User(object):

    """Implementation of the 'User' model.

    TODO: type model description here.

    Attributes:
        auth_type (AuthTypeEnum): The authentication type the user uses to
            authenticate. To use SAML this organization must have a configured
            SAML integration.
        email (string): The email address of this user.
        name (string): The first and last name of the user.
        organization_role_id (string): The id of the role the user is assigned
            to at the organization level. This will be blank for users that
            only have access to specific tags.
        id (long|int): The ID of the User record.
        organization_role (string): The name of the role the user is assigned
            to at the organization level. This will be blank for users that
            only have access to specific tags.
        tag_roles (list of UserTagRole): The specific tags this user has
            access to. This will be blank for users that have full access to
            the organization.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "auth_type":'authType',
        "email":'email',
        "name":'name',
        "organization_role_id":'organizationRoleId',
        "id":'id',
        "organization_role":'organizationRole',
        "tag_roles":'tagRoles'
    }

    def __init__(self,
                 auth_type=None,
                 email=None,
                 name=None,
                 organization_role_id=None,
                 id=None,
                 organization_role=None,
                 tag_roles=None):
        """Constructor for the User class"""

        # Initialize members of the class
        self.auth_type = auth_type
        self.email = email
        self.name = name
        self.organization_role_id = organization_role_id
        self.id = id
        self.organization_role = organization_role
        self.tag_roles = tag_roles


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        auth_type = dictionary.get('authType')
        email = dictionary.get('email')
        name = dictionary.get('name')
        organization_role_id = dictionary.get('organizationRoleId')
        id = dictionary.get('id')
        organization_role = dictionary.get('organizationRole')
        tag_roles = None
        if dictionary.get('tagRoles') != None:
            tag_roles = list()
            for structure in dictionary.get('tagRoles'):
                tag_roles.append(samsaraapi.models.user_tag_role.UserTagRole.from_dictionary(structure))

        # Return an object of this model
        return cls(auth_type,
                   email,
                   name,
                   organization_role_id,
                   id,
                   organization_role,
                   tag_roles)



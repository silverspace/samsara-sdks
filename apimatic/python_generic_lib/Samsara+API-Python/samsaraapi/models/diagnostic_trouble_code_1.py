# -*- coding: utf-8 -*-

"""
    samsaraapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class DiagnosticTroubleCode1(object):

    """Implementation of the 'DiagnosticTroubleCode1' model.

    TODO: type model description here.

    Attributes:
        dtc_description (string): TODO: type description here.
        dtc_id (int): TODO: type description here.
        dtc_short_code (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "dtc_description":'dtcDescription',
        "dtc_id":'dtcId',
        "dtc_short_code":'dtcShortCode'
    }

    def __init__(self,
                 dtc_description=None,
                 dtc_id=None,
                 dtc_short_code=None):
        """Constructor for the DiagnosticTroubleCode1 class"""

        # Initialize members of the class
        self.dtc_description = dtc_description
        self.dtc_id = dtc_id
        self.dtc_short_code = dtc_short_code


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        dtc_description = dictionary.get('dtcDescription')
        dtc_id = dictionary.get('dtcId')
        dtc_short_code = dictionary.get('dtcShortCode')

        # Return an object of this model
        return cls(dtc_description,
                   dtc_id,
                   dtc_short_code)



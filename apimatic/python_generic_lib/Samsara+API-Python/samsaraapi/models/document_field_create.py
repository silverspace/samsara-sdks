# -*- coding: utf-8 -*-

"""
    samsaraapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import samsaraapi.models.photo_value

class DocumentFieldCreate(object):

    """Implementation of the 'DocumentFieldCreate' model.

    TODO: type model description here.

    Attributes:
        number_value (float): Value of this field if this document field has
            valueType: ValueType_Number.
        photo_value (list of PhotoValue): Value of this field if this document
            field has valueType: ValueType_Photo. Array of photo objects where
            each object contains a URL for a photo.
        string_value (string): Value of this field if this document field has
            valueType: ValueType_String.
        value_type (string): Determines the type of this field and what type
            of value this field has. It should be either ValueType_Number,
            ValueType_String, or ValueType_Photo.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "value_type":'valueType',
        "number_value":'numberValue',
        "photo_value":'photoValue',
        "string_value":'stringValue'
    }

    def __init__(self,
                 value_type=None,
                 number_value=None,
                 photo_value=None,
                 string_value=None):
        """Constructor for the DocumentFieldCreate class"""

        # Initialize members of the class
        self.number_value = number_value
        self.photo_value = photo_value
        self.string_value = string_value
        self.value_type = value_type


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        value_type = dictionary.get('valueType')
        number_value = dictionary.get('numberValue')
        photo_value = None
        if dictionary.get('photoValue') != None:
            photo_value = list()
            for structure in dictionary.get('photoValue'):
                photo_value.append(samsaraapi.models.photo_value.PhotoValue.from_dictionary(structure))
        string_value = dictionary.get('stringValue')

        # Return an object of this model
        return cls(value_type,
                   number_value,
                   photo_value,
                   string_value)



# -*- coding: utf-8 -*-

"""
    samsaraapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class DispatchJobCreate(object):

    """Implementation of the 'DispatchJobCreate' model.

    TODO: type model description here.

    Attributes:
        destination_address (string): The address of the job destination, as
            it would be recognized if provided to maps.google.com. Optional if
            a valid destination address ID is provided.
        destination_address_id (long|int): ID of the job destination
            associated with an address book entry. Optional if valid values
            are provided for destination address or latitude/longitude. If a
            valid destination address ID is provided,
            address/latitude/longitude will be used from the address book
            entry. Name of the address book entry will only be used if the
            destination name is not provided.
        destination_lat (float): Latitude of the destination in decimal
            degrees. Optional if a valid destination address ID is provided.
        destination_lng (float): Longitude of the destination in decimal
            degrees. Optional if a valid destination address ID is provided.
        destination_name (string): The name of the job destination. If
            provided, it will take precedence over the name of the address
            book entry.
        notes (string): Notes regarding the details of this job.
        scheduled_arrival_time_ms (long|int): The time at which the assigned
            driver is scheduled to arrive at the job destination.
        scheduled_departure_time_ms (long|int): The time at which the assigned
            driver is scheduled to depart from the job destination.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "scheduled_arrival_time_ms":'scheduled_arrival_time_ms',
        "destination_address":'destination_address',
        "destination_address_id":'destination_address_id',
        "destination_lat":'destination_lat',
        "destination_lng":'destination_lng',
        "destination_name":'destination_name',
        "notes":'notes',
        "scheduled_departure_time_ms":'scheduled_departure_time_ms'
    }

    def __init__(self,
                 scheduled_arrival_time_ms=None,
                 destination_address=None,
                 destination_address_id=None,
                 destination_lat=None,
                 destination_lng=None,
                 destination_name=None,
                 notes=None,
                 scheduled_departure_time_ms=None):
        """Constructor for the DispatchJobCreate class"""

        # Initialize members of the class
        self.destination_address = destination_address
        self.destination_address_id = destination_address_id
        self.destination_lat = destination_lat
        self.destination_lng = destination_lng
        self.destination_name = destination_name
        self.notes = notes
        self.scheduled_arrival_time_ms = scheduled_arrival_time_ms
        self.scheduled_departure_time_ms = scheduled_departure_time_ms


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        scheduled_arrival_time_ms = dictionary.get('scheduled_arrival_time_ms')
        destination_address = dictionary.get('destination_address')
        destination_address_id = dictionary.get('destination_address_id')
        destination_lat = dictionary.get('destination_lat')
        destination_lng = dictionary.get('destination_lng')
        destination_name = dictionary.get('destination_name')
        notes = dictionary.get('notes')
        scheduled_departure_time_ms = dictionary.get('scheduled_departure_time_ms')

        # Return an object of this model
        return cls(scheduled_arrival_time_ms,
                   destination_address,
                   destination_address_id,
                   destination_lat,
                   destination_lng,
                   destination_name,
                   notes,
                   scheduled_departure_time_ms)



# -*- coding: utf-8 -*-

"""
    samsaraapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Driver1(object):

    """Implementation of the 'Driver1' model.

    TODO: type model description here.

    Attributes:
        cycle_remaining (long|int): The amount of remaining cycle time (in
            ms).
        cycle_tomorrow (long|int): The amount of cycle time (in ms) available
            tomorrow.
        driver_id (long|int): ID of the driver.
        driver_name (string): Name of the driver.
        driving_in_violation_cycle (long|int): The amount of driving time in
            violation in this cycle (in ms).
        driving_in_violation_today (long|int): The amount of driving time in
            violation today (in ms).
        duty_status (string): The Hours of Service status type. One of
            `OFF_DUTY`, `SLEEPER_BED`, `DRIVING`, `ON_DUTY`, `YARD_MOVE`,
            `PERSONAL_CONVEYANCE`.
        shift_drive_remaining (long|int): The amount of remaining shift drive
            time (in ms).
        shift_remaining (long|int): The amount of remaining shift time (in
            ms).
        time_in_current_status (long|int): The amount of time (in ms) that the
            driver has been in the current `dutyStatus`.
        time_until_break (long|int): The amount of time (in ms) remaining
            until the driver cannot drive without a rest break.
        vehicle_name (string): Name of the vehicle.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "cycle_remaining":'cycleRemaining',
        "cycle_tomorrow":'cycleTomorrow',
        "driver_id":'driverId',
        "driver_name":'driverName',
        "driving_in_violation_cycle":'drivingInViolationCycle',
        "driving_in_violation_today":'drivingInViolationToday',
        "duty_status":'dutyStatus',
        "shift_drive_remaining":'shiftDriveRemaining',
        "shift_remaining":'shiftRemaining',
        "time_in_current_status":'timeInCurrentStatus',
        "time_until_break":'timeUntilBreak',
        "vehicle_name":'vehicleName'
    }

    def __init__(self,
                 cycle_remaining=None,
                 cycle_tomorrow=None,
                 driver_id=None,
                 driver_name=None,
                 driving_in_violation_cycle=None,
                 driving_in_violation_today=None,
                 duty_status=None,
                 shift_drive_remaining=None,
                 shift_remaining=None,
                 time_in_current_status=None,
                 time_until_break=None,
                 vehicle_name=None):
        """Constructor for the Driver1 class"""

        # Initialize members of the class
        self.cycle_remaining = cycle_remaining
        self.cycle_tomorrow = cycle_tomorrow
        self.driver_id = driver_id
        self.driver_name = driver_name
        self.driving_in_violation_cycle = driving_in_violation_cycle
        self.driving_in_violation_today = driving_in_violation_today
        self.duty_status = duty_status
        self.shift_drive_remaining = shift_drive_remaining
        self.shift_remaining = shift_remaining
        self.time_in_current_status = time_in_current_status
        self.time_until_break = time_until_break
        self.vehicle_name = vehicle_name


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        cycle_remaining = dictionary.get('cycleRemaining')
        cycle_tomorrow = dictionary.get('cycleTomorrow')
        driver_id = dictionary.get('driverId')
        driver_name = dictionary.get('driverName')
        driving_in_violation_cycle = dictionary.get('drivingInViolationCycle')
        driving_in_violation_today = dictionary.get('drivingInViolationToday')
        duty_status = dictionary.get('dutyStatus')
        shift_drive_remaining = dictionary.get('shiftDriveRemaining')
        shift_remaining = dictionary.get('shiftRemaining')
        time_in_current_status = dictionary.get('timeInCurrentStatus')
        time_until_break = dictionary.get('timeUntilBreak')
        vehicle_name = dictionary.get('vehicleName')

        # Return an object of this model
        return cls(cycle_remaining,
                   cycle_tomorrow,
                   driver_id,
                   driver_name,
                   driving_in_violation_cycle,
                   driving_in_violation_today,
                   duty_status,
                   shift_drive_remaining,
                   shift_remaining,
                   time_in_current_status,
                   time_until_break,
                   vehicle_name)



# -*- coding: utf-8 -*-

"""
    samsaraapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import samsaraapi.models.reefer_stats

class AssetReeferResponse(object):

    """Implementation of the 'AssetReeferResponse' model.

    Reefer-specific asset details

    Attributes:
        asset_type (string): Asset type
        id (int): Asset ID
        name (string): Asset name
        reefer_stats (ReeferStats): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "asset_type":'assetType',
        "id":'id',
        "name":'name',
        "reefer_stats":'reeferStats'
    }

    def __init__(self,
                 asset_type=None,
                 id=None,
                 name=None,
                 reefer_stats=None):
        """Constructor for the AssetReeferResponse class"""

        # Initialize members of the class
        self.asset_type = asset_type
        self.id = id
        self.name = name
        self.reefer_stats = reefer_stats


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        asset_type = dictionary.get('assetType')
        id = dictionary.get('id')
        name = dictionary.get('name')
        reefer_stats = samsaraapi.models.reefer_stats.ReeferStats.from_dictionary(dictionary.get('reeferStats')) if dictionary.get('reeferStats') else None

        # Return an object of this model
        return cls(asset_type,
                   id,
                   name,
                   reefer_stats)



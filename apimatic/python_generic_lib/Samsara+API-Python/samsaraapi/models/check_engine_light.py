# -*- coding: utf-8 -*-

"""
    samsaraapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class CheckEngineLight(object):

    """Implementation of the 'CheckEngineLight' model.

    J1939 check engine lights.

    Attributes:
        emissions_is_on (bool): TODO: type description here.
        protect_is_on (bool): TODO: type description here.
        stop_is_on (bool): TODO: type description here.
        warning_is_on (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "emissions_is_on":'emissionsIsOn',
        "protect_is_on":'protectIsOn',
        "stop_is_on":'stopIsOn',
        "warning_is_on":'warningIsOn'
    }

    def __init__(self,
                 emissions_is_on=None,
                 protect_is_on=None,
                 stop_is_on=None,
                 warning_is_on=None):
        """Constructor for the CheckEngineLight class"""

        # Initialize members of the class
        self.emissions_is_on = emissions_is_on
        self.protect_is_on = protect_is_on
        self.stop_is_on = stop_is_on
        self.warning_is_on = warning_is_on


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        emissions_is_on = dictionary.get('emissionsIsOn')
        protect_is_on = dictionary.get('protectIsOn')
        stop_is_on = dictionary.get('stopIsOn')
        warning_is_on = dictionary.get('warningIsOn')

        # Return an object of this model
        return cls(emissions_is_on,
                   protect_is_on,
                   stop_is_on,
                   warning_is_on)



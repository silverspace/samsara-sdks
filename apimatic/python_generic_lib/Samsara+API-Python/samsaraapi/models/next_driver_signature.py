# -*- coding: utf-8 -*-

"""
    samsaraapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class NextDriverSignature(object):

    """Implementation of the 'NextDriverSignature' model.

    The next driver signature for the DVIR.

    Attributes:
        driver_id (long|int): ID of the driver who signed the DVIR
        email (string): Email of the  driver who signed the next DVIR on this
            vehicle.
        name (string): The name of the driver who signed the next DVIR on this
            vehicle.
        signed_at (long|int): The time in millis when the next driver signed
            the DVIR on this vehicle.
        mtype (string): Type corresponds to driver.
        username (string): Username of the  driver who signed the next DVIR on
            this vehicle.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "driver_id":'driverId',
        "email":'email',
        "name":'name',
        "signed_at":'signedAt',
        "mtype":'type',
        "username":'username'
    }

    def __init__(self,
                 driver_id=None,
                 email=None,
                 name=None,
                 signed_at=None,
                 mtype=None,
                 username=None):
        """Constructor for the NextDriverSignature class"""

        # Initialize members of the class
        self.driver_id = driver_id
        self.email = email
        self.name = name
        self.signed_at = signed_at
        self.mtype = mtype
        self.username = username


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        driver_id = dictionary.get('driverId')
        email = dictionary.get('email')
        name = dictionary.get('name')
        signed_at = dictionary.get('signedAt')
        mtype = dictionary.get('type')
        username = dictionary.get('username')

        # Return an object of this model
        return cls(driver_id,
                   email,
                   name,
                   signed_at,
                   mtype,
                   username)



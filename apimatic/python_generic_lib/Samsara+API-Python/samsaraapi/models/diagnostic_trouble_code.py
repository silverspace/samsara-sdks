# -*- coding: utf-8 -*-

"""
    samsaraapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class DiagnosticTroubleCode(object):

    """Implementation of the 'DiagnosticTroubleCode' model.

    TODO: type model description here.

    Attributes:
        fmi_id (int): TODO: type description here.
        fmi_text (string): TODO: type description here.
        occurrence_count (int): TODO: type description here.
        spn_description (string): TODO: type description here.
        spn_id (int): TODO: type description here.
        tx_id (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "fmi_id":'fmiId',
        "fmi_text":'fmiText',
        "occurrence_count":'occurrenceCount',
        "spn_description":'spnDescription',
        "spn_id":'spnId',
        "tx_id":'txId'
    }

    def __init__(self,
                 fmi_id=None,
                 fmi_text=None,
                 occurrence_count=None,
                 spn_description=None,
                 spn_id=None,
                 tx_id=None):
        """Constructor for the DiagnosticTroubleCode class"""

        # Initialize members of the class
        self.fmi_id = fmi_id
        self.fmi_text = fmi_text
        self.occurrence_count = occurrence_count
        self.spn_description = spn_description
        self.spn_id = spn_id
        self.tx_id = tx_id


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        fmi_id = dictionary.get('fmiId')
        fmi_text = dictionary.get('fmiText')
        occurrence_count = dictionary.get('occurrenceCount')
        spn_description = dictionary.get('spnDescription')
        spn_id = dictionary.get('spnId')
        tx_id = dictionary.get('txId')

        # Return an object of this model
        return cls(fmi_id,
                   fmi_text,
                   occurrence_count,
                   spn_description,
                   spn_id,
                   tx_id)



# -*- coding: utf-8 -*-

"""
    samsaraapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import samsaraapi.models.vehicle_info

class FleetVehicleResponse(object):

    """Implementation of the 'FleetVehicleResponse' model.

    A vehicle object as returned for fleet/vehicle

    Attributes:
        external_ids (dict<object, string>): TODO: type description here.
        harsh_accel_setting (string): Harsh event detection setting.
        id (long|int): ID of the vehicle.
        name (string): Name of the vehicle.
        vehicle_info (VehicleInfo): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id":'id',
        "name":'name',
        "external_ids":'externalIds',
        "harsh_accel_setting":'harshAccelSetting',
        "vehicle_info":'vehicleInfo'
    }

    def __init__(self,
                 id=None,
                 name=None,
                 external_ids=None,
                 harsh_accel_setting=None,
                 vehicle_info=None):
        """Constructor for the FleetVehicleResponse class"""

        # Initialize members of the class
        self.external_ids = external_ids
        self.harsh_accel_setting = harsh_accel_setting
        self.id = id
        self.name = name
        self.vehicle_info = vehicle_info


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get('id')
        name = dictionary.get('name')
        external_ids = dictionary.get('externalIds')
        harsh_accel_setting = dictionary.get('harshAccelSetting')
        vehicle_info = samsaraapi.models.vehicle_info.VehicleInfo.from_dictionary(dictionary.get('vehicleInfo')) if dictionary.get('vehicleInfo') else None

        # Return an object of this model
        return cls(id,
                   name,
                   external_ids,
                   harsh_accel_setting,
                   vehicle_info)



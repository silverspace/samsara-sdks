// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class DvirBase
    {
        /// <summary>
        /// Initializes a new instance of the DvirBase class.
        /// </summary>
        public DvirBase()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DvirBase class.
        /// </summary>
        /// <param name="authorSignature">The authors signature for the
        /// DVIR.</param>
        /// <param name="defectsCorrected">Signifies if the defects on the
        /// vehicle corrected after the DVIR is done.</param>
        /// <param name="defectsNeedNotBeCorrected">Signifies if the defects on
        /// this vehicle can be ignored.</param>
        /// <param name="id">The id of this DVIR record.</param>
        /// <param name="inspectionType">Inspection type of the DVIR.</param>
        /// <param name="mechanicNotes">The mechanics notes on the
        /// DVIR.</param>
        /// <param name="mechanicOrAgentSignature">The mechanic's or agent's
        /// signature for the DVIR.</param>
        /// <param name="nextDriverSignature">The next driver signature for the
        /// DVIR.</param>
        /// <param name="odometerMiles">The odometer reading in miles for the
        /// vehicle when the DVIR was done.</param>
        /// <param name="timeMs">Timestamp of this DVIR in UNIX
        /// milliseconds.</param>
        /// <param name="trailerDefects">Defects registered for the trailer
        /// which was part of the DVIR.</param>
        /// <param name="trailerId">The id of the trailer which was part of the
        /// DVIR.</param>
        /// <param name="trailerName">The name of the trailer which was part of
        /// the DVIR.</param>
        /// <param name="vehicle">The vehicle on which DVIR was done.</param>
        /// <param name="vehicleCondition">The condition of vechile on which
        /// DVIR was done.</param>
        /// <param name="vehicleDefects">Defects registered for the vehicle
        /// which was part of the DVIR.</param>
        public DvirBase(DvirBaseAuthorSignature authorSignature = default(DvirBaseAuthorSignature), bool? defectsCorrected = default(bool?), bool? defectsNeedNotBeCorrected = default(bool?), long? id = default(long?), string inspectionType = default(string), string mechanicNotes = default(string), DvirBaseMechanicOrAgentSignature mechanicOrAgentSignature = default(DvirBaseMechanicOrAgentSignature), DvirBaseNextDriverSignature nextDriverSignature = default(DvirBaseNextDriverSignature), long? odometerMiles = default(long?), long? timeMs = default(long?), IList<DvirBaseTrailerDefectsItem> trailerDefects = default(IList<DvirBaseTrailerDefectsItem>), int? trailerId = default(int?), string trailerName = default(string), DvirBaseVehicle vehicle = default(DvirBaseVehicle), string vehicleCondition = default(string), IList<DvirBaseVehicleDefectsItem> vehicleDefects = default(IList<DvirBaseVehicleDefectsItem>))
        {
            AuthorSignature = authorSignature;
            DefectsCorrected = defectsCorrected;
            DefectsNeedNotBeCorrected = defectsNeedNotBeCorrected;
            Id = id;
            InspectionType = inspectionType;
            MechanicNotes = mechanicNotes;
            MechanicOrAgentSignature = mechanicOrAgentSignature;
            NextDriverSignature = nextDriverSignature;
            OdometerMiles = odometerMiles;
            TimeMs = timeMs;
            TrailerDefects = trailerDefects;
            TrailerId = trailerId;
            TrailerName = trailerName;
            Vehicle = vehicle;
            VehicleCondition = vehicleCondition;
            VehicleDefects = vehicleDefects;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the authors signature for the DVIR.
        /// </summary>
        [JsonProperty(PropertyName = "authorSignature")]
        public DvirBaseAuthorSignature AuthorSignature { get; set; }

        /// <summary>
        /// Gets or sets signifies if the defects on the vehicle corrected
        /// after the DVIR is done.
        /// </summary>
        [JsonProperty(PropertyName = "defectsCorrected")]
        public bool? DefectsCorrected { get; set; }

        /// <summary>
        /// Gets or sets signifies if the defects on this vehicle can be
        /// ignored.
        /// </summary>
        [JsonProperty(PropertyName = "defectsNeedNotBeCorrected")]
        public bool? DefectsNeedNotBeCorrected { get; set; }

        /// <summary>
        /// Gets or sets the id of this DVIR record.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or sets inspection type of the DVIR.
        /// </summary>
        [JsonProperty(PropertyName = "inspectionType")]
        public string InspectionType { get; set; }

        /// <summary>
        /// Gets or sets the mechanics notes on the DVIR.
        /// </summary>
        [JsonProperty(PropertyName = "mechanicNotes")]
        public string MechanicNotes { get; set; }

        /// <summary>
        /// Gets or sets the mechanic's or agent's signature for the DVIR.
        /// </summary>
        [JsonProperty(PropertyName = "mechanicOrAgentSignature")]
        public DvirBaseMechanicOrAgentSignature MechanicOrAgentSignature { get; set; }

        /// <summary>
        /// Gets or sets the next driver signature for the DVIR.
        /// </summary>
        [JsonProperty(PropertyName = "nextDriverSignature")]
        public DvirBaseNextDriverSignature NextDriverSignature { get; set; }

        /// <summary>
        /// Gets or sets the odometer reading in miles for the vehicle when the
        /// DVIR was done.
        /// </summary>
        [JsonProperty(PropertyName = "odometerMiles")]
        public long? OdometerMiles { get; set; }

        /// <summary>
        /// Gets or sets timestamp of this DVIR in UNIX milliseconds.
        /// </summary>
        [JsonProperty(PropertyName = "timeMs")]
        public long? TimeMs { get; set; }

        /// <summary>
        /// Gets or sets defects registered for the trailer which was part of
        /// the DVIR.
        /// </summary>
        [JsonProperty(PropertyName = "trailerDefects")]
        public IList<DvirBaseTrailerDefectsItem> TrailerDefects { get; set; }

        /// <summary>
        /// Gets or sets the id of the trailer which was part of the DVIR.
        /// </summary>
        [JsonProperty(PropertyName = "trailerId")]
        public int? TrailerId { get; set; }

        /// <summary>
        /// Gets or sets the name of the trailer which was part of the DVIR.
        /// </summary>
        [JsonProperty(PropertyName = "trailerName")]
        public string TrailerName { get; set; }

        /// <summary>
        /// Gets or sets the vehicle on which DVIR was done.
        /// </summary>
        [JsonProperty(PropertyName = "vehicle")]
        public DvirBaseVehicle Vehicle { get; set; }

        /// <summary>
        /// Gets or sets the condition of vechile on which DVIR was done.
        /// </summary>
        [JsonProperty(PropertyName = "vehicleCondition")]
        public string VehicleCondition { get; set; }

        /// <summary>
        /// Gets or sets defects registered for the vehicle which was part of
        /// the DVIR.
        /// </summary>
        [JsonProperty(PropertyName = "vehicleDefects")]
        public IList<DvirBaseVehicleDefectsItem> VehicleDefects { get; set; }

    }
}

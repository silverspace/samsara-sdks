// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class GetVehicleStatsOKResponseVehicleStatsItem
    {
        /// <summary>
        /// Initializes a new instance of the
        /// GetVehicleStatsOKResponseVehicleStatsItem class.
        /// </summary>
        public GetVehicleStatsOKResponseVehicleStatsItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// GetVehicleStatsOKResponseVehicleStatsItem class.
        /// </summary>
        /// <param name="vehicleId">ID of the vehicle.</param>
        public GetVehicleStatsOKResponseVehicleStatsItem(long vehicleId, AuxInputSeries auxInput1 = default(AuxInputSeries), AuxInputSeries auxInput2 = default(AuxInputSeries), IList<EngineState> engineState = default(IList<EngineState>))
        {
            AuxInput1 = auxInput1;
            AuxInput2 = auxInput2;
            EngineState = engineState;
            VehicleId = vehicleId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "auxInput1")]
        public AuxInputSeries AuxInput1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "auxInput2")]
        public AuxInputSeries AuxInput2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "engineState")]
        public IList<EngineState> EngineState { get; set; }

        /// <summary>
        /// Gets or sets ID of the vehicle.
        /// </summary>
        [JsonProperty(PropertyName = "vehicleId")]
        public long VehicleId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AuxInput1 != null)
            {
                AuxInput1.Validate();
            }
            if (AuxInput2 != null)
            {
                AuxInput2.Validate();
            }
            if (EngineState != null)
            {
                foreach (var element in EngineState)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}

// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The geofence that defines this address and its bounds. This can either
    /// be a circle, or a polygon - only one key should be provided, depending
    /// on the geofence type.
    /// </summary>
    public partial class AddressGeofence
    {
        /// <summary>
        /// Initializes a new instance of the AddressGeofence class.
        /// </summary>
        public AddressGeofence()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AddressGeofence class.
        /// </summary>
        /// <param name="circle">Information about a circular geofence. This
        /// field is only populated if the geofence is a circle.</param>
        /// <param name="polygon">Information about a polygon geofence. This
        /// field is only populated if the geofence is a polygon.</param>
        public AddressGeofence(AddressGeofenceCircle circle = default(AddressGeofenceCircle), AddressGeofencePolygon polygon = default(AddressGeofencePolygon))
        {
            Circle = circle;
            Polygon = polygon;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets information about a circular geofence. This field is
        /// only populated if the geofence is a circle.
        /// </summary>
        [JsonProperty(PropertyName = "circle")]
        public AddressGeofenceCircle Circle { get; set; }

        /// <summary>
        /// Gets or sets information about a polygon geofence. This field is
        /// only populated if the geofence is a polygon.
        /// </summary>
        [JsonProperty(PropertyName = "polygon")]
        public AddressGeofencePolygon Polygon { get; set; }

    }
}

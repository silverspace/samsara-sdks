// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class TagUpdate
    {
        /// <summary>
        /// Initializes a new instance of the TagUpdate class.
        /// </summary>
        public TagUpdate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TagUpdate class.
        /// </summary>
        /// <param name="assets">The assets that belong to this tag.</param>
        /// <param name="drivers">The drivers that belong to this tag.</param>
        /// <param name="machines">The machines that belong to this
        /// tag.</param>
        /// <param name="name">Updated name of this tag.</param>
        /// <param name="parentTagId">If this tag is part a hierarchical tag
        /// tree as a child tag, the parentTagId is the ID of this tag's parent
        /// tag.</param>
        /// <param name="sensors">The sensors that belong to this tag.</param>
        /// <param name="vehicles">The vehicles that belong to this
        /// tag.</param>
        public TagUpdate(IList<TaggedAssetBase> assets = default(IList<TaggedAssetBase>), IList<TaggedDriverBase> drivers = default(IList<TaggedDriverBase>), IList<TaggedMachineBase> machines = default(IList<TaggedMachineBase>), string name = default(string), long? parentTagId = default(long?), IList<TaggedSensorBase> sensors = default(IList<TaggedSensorBase>), IList<TaggedVehicleBase> vehicles = default(IList<TaggedVehicleBase>))
        {
            Assets = assets;
            Drivers = drivers;
            Machines = machines;
            Name = name;
            ParentTagId = parentTagId;
            Sensors = sensors;
            Vehicles = vehicles;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the assets that belong to this tag.
        /// </summary>
        [JsonProperty(PropertyName = "assets")]
        public IList<TaggedAssetBase> Assets { get; set; }

        /// <summary>
        /// Gets or sets the drivers that belong to this tag.
        /// </summary>
        [JsonProperty(PropertyName = "drivers")]
        public IList<TaggedDriverBase> Drivers { get; set; }

        /// <summary>
        /// Gets or sets the machines that belong to this tag.
        /// </summary>
        [JsonProperty(PropertyName = "machines")]
        public IList<TaggedMachineBase> Machines { get; set; }

        /// <summary>
        /// Gets or sets updated name of this tag.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets if this tag is part a hierarchical tag tree as a child
        /// tag, the parentTagId is the ID of this tag's parent tag.
        /// </summary>
        [JsonProperty(PropertyName = "parentTagId")]
        public long? ParentTagId { get; set; }

        /// <summary>
        /// Gets or sets the sensors that belong to this tag.
        /// </summary>
        [JsonProperty(PropertyName = "sensors")]
        public IList<TaggedSensorBase> Sensors { get; set; }

        /// <summary>
        /// Gets or sets the vehicles that belong to this tag.
        /// </summary>
        [JsonProperty(PropertyName = "vehicles")]
        public IList<TaggedVehicleBase> Vehicles { get; set; }

    }
}

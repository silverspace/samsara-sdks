// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The state of the vehicle over time. State can be Running, Off, or Idle.
    /// </summary>
    public partial class EngineState
    {
        /// <summary>
        /// Initializes a new instance of the EngineState class.
        /// </summary>
        public EngineState()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EngineState class.
        /// </summary>
        /// <param name="timeMs">Timestamp in Unix epoch milliseconds.</param>
        /// <param name="value">Possible values include: 'Running', 'Off',
        /// 'Idle'</param>
        public EngineState(double timeMs, string value)
        {
            TimeMs = timeMs;
            Value = value;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets timestamp in Unix epoch milliseconds.
        /// </summary>
        [JsonProperty(PropertyName = "timeMs")]
        public double TimeMs { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Running', 'Off', 'Idle'
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Value == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Value");
            }
        }
    }
}

// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class HistoryParamModel
    {
        /// <summary>
        /// Initializes a new instance of the HistoryParamModel class.
        /// </summary>
        public HistoryParamModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HistoryParamModel class.
        /// </summary>
        /// <param name="endMs">End of the time range, specified in
        /// milliseconds UNIX time.</param>
        /// <param name="groupId">Group ID to query.</param>
        /// <param name="startMs">Beginning of the time range, specified in
        /// milliseconds UNIX time.</param>
        /// <param name="stepMs">Time resolution for which data should be
        /// returned, in milliseconds. Specifying 3600000 will return data at
        /// hour intervals.</param>
        /// <param name="fillMissing">Possible values include: 'withNull',
        /// 'withPrevious'</param>
        public HistoryParamModel(int endMs, long groupId, IList<HistoryParamSeriesItem> series, int startMs, int stepMs, string fillMissing = default(string))
        {
            EndMs = endMs;
            FillMissing = fillMissing;
            GroupId = groupId;
            Series = series;
            StartMs = startMs;
            StepMs = stepMs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets end of the time range, specified in milliseconds UNIX
        /// time.
        /// </summary>
        [JsonProperty(PropertyName = "endMs")]
        public int EndMs { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'withNull', 'withPrevious'
        /// </summary>
        [JsonProperty(PropertyName = "fillMissing")]
        public string FillMissing { get; set; }

        /// <summary>
        /// Gets or sets group ID to query.
        /// </summary>
        [JsonProperty(PropertyName = "groupId")]
        public long GroupId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "series")]
        public IList<HistoryParamSeriesItem> Series { get; set; }

        /// <summary>
        /// Gets or sets beginning of the time range, specified in milliseconds
        /// UNIX time.
        /// </summary>
        [JsonProperty(PropertyName = "startMs")]
        public int StartMs { get; set; }

        /// <summary>
        /// Gets or sets time resolution for which data should be returned, in
        /// milliseconds. Specifying 3600000 will return data at hour
        /// intervals.
        /// </summary>
        [JsonProperty(PropertyName = "stepMs")]
        public int StepMs { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Series == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Series");
            }
            if (Series != null)
            {
                foreach (var element in Series)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}

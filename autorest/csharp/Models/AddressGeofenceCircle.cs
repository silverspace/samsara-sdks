// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Information about a circular geofence. This field is only populated if
    /// the geofence is a circle.
    /// </summary>
    public partial class AddressGeofenceCircle
    {
        /// <summary>
        /// Initializes a new instance of the AddressGeofenceCircle class.
        /// </summary>
        public AddressGeofenceCircle()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AddressGeofenceCircle class.
        /// </summary>
        /// <param name="latitude">The latitude of the center of the circular
        /// geofence</param>
        /// <param name="longitude">The longitude of the center of the circular
        /// geofence</param>
        /// <param name="radiusMeters">The radius of the circular
        /// geofence</param>
        public AddressGeofenceCircle(double? latitude = default(double?), double? longitude = default(double?), double? radiusMeters = default(double?))
        {
            Latitude = latitude;
            Longitude = longitude;
            RadiusMeters = radiusMeters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the latitude of the center of the circular geofence
        /// </summary>
        [JsonProperty(PropertyName = "latitude")]
        public double? Latitude { get; set; }

        /// <summary>
        /// Gets or sets the longitude of the center of the circular geofence
        /// </summary>
        [JsonProperty(PropertyName = "longitude")]
        public double? Longitude { get; set; }

        /// <summary>
        /// Gets or sets the radius of the circular geofence
        /// </summary>
        [JsonProperty(PropertyName = "radiusMeters")]
        public double? RadiusMeters { get; set; }

    }
}

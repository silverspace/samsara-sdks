// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Information about an address/geofence. Geofences are either a circle or
    /// a polygon.
    /// </summary>
    public partial class Address
    {
        /// <summary>
        /// Initializes a new instance of the Address class.
        /// </summary>
        public Address()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Address class.
        /// </summary>
        /// <param name="formattedAddress">The full address associated with
        /// this address/geofence, as it might be recognized by
        /// maps.google.com</param>
        /// <param name="id">ID of the address</param>
        /// <param name="name">Name of the address or geofence</param>
        public Address(IList<Contact> contacts = default(IList<Contact>), string formattedAddress = default(string), AddressGeofence geofence = default(AddressGeofence), long? id = default(long?), string name = default(string), string notes = default(string), IList<TagMetadata> tags = default(IList<TagMetadata>))
        {
            Contacts = contacts;
            FormattedAddress = formattedAddress;
            Geofence = geofence;
            Id = id;
            Name = name;
            Notes = notes;
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contacts")]
        public IList<Contact> Contacts { get; set; }

        /// <summary>
        /// Gets or sets the full address associated with this
        /// address/geofence, as it might be recognized by maps.google.com
        /// </summary>
        [JsonProperty(PropertyName = "formattedAddress")]
        public string FormattedAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "geofence")]
        public AddressGeofence Geofence { get; set; }

        /// <summary>
        /// Gets or sets ID of the address
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or sets name of the address or geofence
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "notes")]
        public string Notes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IList<TagMetadata> Tags { get; set; }

    }
}

// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class DriverDailyLogResponseDaysItem
    {
        /// <summary>
        /// Initializes a new instance of the DriverDailyLogResponseDaysItem
        /// class.
        /// </summary>
        public DriverDailyLogResponseDaysItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DriverDailyLogResponseDaysItem
        /// class.
        /// </summary>
        /// <param name="activeHours">Hours spent on duty or driving, rounded
        /// to two decimal places.</param>
        /// <param name="activeMs">Milliseconds spent on duty or
        /// driving.</param>
        /// <param name="certified">Whether this HOS day chart was certified by
        /// the driver.</param>
        /// <param name="certifiedAtMs">Unix epoch time (in ms) of time when
        /// this chart was certified. If this chart is uncertified, 0.</param>
        /// <param name="distanceMiles">Distance driven in miles, rounded to
        /// two decimal places.</param>
        /// <param name="endMs">End of the HOS day, specified in milliseconds
        /// UNIX time.</param>
        /// <param name="startMs">End of the HOS day, specified in milliseconds
        /// UNIX time.</param>
        /// <param name="trailerIds">List of trailer ID's associated with the
        /// driver for the day.</param>
        /// <param name="vehicleIds">List of vehicle ID's associated with the
        /// driver for the day.</param>
        public DriverDailyLogResponseDaysItem(double? activeHours = default(double?), long? activeMs = default(long?), bool? certified = default(bool?), double? certifiedAtMs = default(double?), double? distanceMiles = default(double?), int? endMs = default(int?), int? startMs = default(int?), object trailerIds = default(object), object vehicleIds = default(object))
        {
            ActiveHours = activeHours;
            ActiveMs = activeMs;
            Certified = certified;
            CertifiedAtMs = certifiedAtMs;
            DistanceMiles = distanceMiles;
            EndMs = endMs;
            StartMs = startMs;
            TrailerIds = trailerIds;
            VehicleIds = vehicleIds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets hours spent on duty or driving, rounded to two decimal
        /// places.
        /// </summary>
        [JsonProperty(PropertyName = "activeHours")]
        public double? ActiveHours { get; set; }

        /// <summary>
        /// Gets or sets milliseconds spent on duty or driving.
        /// </summary>
        [JsonProperty(PropertyName = "activeMs")]
        public long? ActiveMs { get; set; }

        /// <summary>
        /// Gets or sets whether this HOS day chart was certified by the
        /// driver.
        /// </summary>
        [JsonProperty(PropertyName = "certified")]
        public bool? Certified { get; set; }

        /// <summary>
        /// Gets or sets unix epoch time (in ms) of time when this chart was
        /// certified. If this chart is uncertified, 0.
        /// </summary>
        [JsonProperty(PropertyName = "certifiedAtMs")]
        public double? CertifiedAtMs { get; set; }

        /// <summary>
        /// Gets or sets distance driven in miles, rounded to two decimal
        /// places.
        /// </summary>
        [JsonProperty(PropertyName = "distanceMiles")]
        public double? DistanceMiles { get; set; }

        /// <summary>
        /// Gets or sets end of the HOS day, specified in milliseconds UNIX
        /// time.
        /// </summary>
        [JsonProperty(PropertyName = "endMs")]
        public int? EndMs { get; set; }

        /// <summary>
        /// Gets or sets end of the HOS day, specified in milliseconds UNIX
        /// time.
        /// </summary>
        [JsonProperty(PropertyName = "startMs")]
        public int? StartMs { get; set; }

        /// <summary>
        /// Gets or sets list of trailer ID's associated with the driver for
        /// the day.
        /// </summary>
        [JsonProperty(PropertyName = "trailerIds")]
        public object TrailerIds { get; set; }

        /// <summary>
        /// Gets or sets list of vehicle ID's associated with the driver for
        /// the day.
        /// </summary>
        [JsonProperty(PropertyName = "vehicleIds")]
        public object VehicleIds { get; set; }

    }
}

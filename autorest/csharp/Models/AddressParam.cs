// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class AddressParam
    {
        /// <summary>
        /// Initializes a new instance of the AddressParam class.
        /// </summary>
        public AddressParam()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AddressParam class.
        /// </summary>
        /// <param name="address">The address of the entry to add, as it would
        /// be recognized if provided to maps.google.com.</param>
        /// <param name="groupId">Group ID to query.</param>
        /// <param name="name">Name of the location to add to the address
        /// book.</param>
        /// <param name="radius">Radius in meters of the address (used for
        /// matching vehicle trip stops to this location).</param>
        public AddressParam(string address, long groupId, string name, int radius)
        {
            Address = address;
            GroupId = groupId;
            Name = name;
            Radius = radius;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the address of the entry to add, as it would be
        /// recognized if provided to maps.google.com.
        /// </summary>
        [JsonProperty(PropertyName = "address")]
        public string Address { get; set; }

        /// <summary>
        /// Gets or sets group ID to query.
        /// </summary>
        [JsonProperty(PropertyName = "groupId")]
        public long GroupId { get; set; }

        /// <summary>
        /// Gets or sets name of the location to add to the address book.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets radius in meters of the address (used for matching
        /// vehicle trip stops to this location).
        /// </summary>
        [JsonProperty(PropertyName = "radius")]
        public int Radius { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Address == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Address");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}

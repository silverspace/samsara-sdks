# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class VehicleLocation(Model):
    """Contains the location, in latitude and longitude, of a vehicle.

    :param heading: Heading in degrees.
    :type heading: float
    :param id: ID of the vehicle.
    :type id: long
    :param latitude: Latitude in decimal degrees.
    :type latitude: float
    :param location: Text representation of nearest identifiable location to
     (latitude, longitude) coordinates.
    :type location: str
    :param longitude: Longitude in decimal degrees.
    :type longitude: float
    :param name: Name of the vehicle.
    :type name: str
    :param odometer_meters: The number of meters reported by the odometer.
    :type odometer_meters: long
    :param on_trip: Whether or not a trip is currently in progress for this
     vehicle. More information available via /fleet/trips endpoint.
    :type on_trip: bool
    :param speed: Speed in miles per hour.
    :type speed: float
    :param time: The time the reported location was logged, reported as a UNIX
     timestamp in milliseconds.
    :type time: int
    :param vin: Vehicle Identification Number (VIN) of the vehicle.
    :type vin: str
    """

    _validation = {
        'id': {'required': True},
    }

    _attribute_map = {
        'heading': {'key': 'heading', 'type': 'float'},
        'id': {'key': 'id', 'type': 'long'},
        'latitude': {'key': 'latitude', 'type': 'float'},
        'location': {'key': 'location', 'type': 'str'},
        'longitude': {'key': 'longitude', 'type': 'float'},
        'name': {'key': 'name', 'type': 'str'},
        'odometer_meters': {'key': 'odometerMeters', 'type': 'long'},
        'on_trip': {'key': 'onTrip', 'type': 'bool'},
        'speed': {'key': 'speed', 'type': 'float'},
        'time': {'key': 'time', 'type': 'int'},
        'vin': {'key': 'vin', 'type': 'str'},
    }

    def __init__(self, id, heading=None, latitude=None, location=None, longitude=None, name=None, odometer_meters=None, on_trip=None, speed=None, time=None, vin=None):
        super(VehicleLocation, self).__init__()
        self.heading = heading
        self.id = id
        self.latitude = latitude
        self.location = location
        self.longitude = longitude
        self.name = name
        self.odometer_meters = odometer_meters
        self.on_trip = on_trip
        self.speed = speed
        self.time = time
        self.vin = vin

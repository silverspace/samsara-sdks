# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AddressesAddressesItem(Model):
    """AddressesAddressesItem.

    :param contact_ids:
    :type contact_ids: list[float]
    :param formatted_address: The full address associated with this
     address/geofence, as it might be recognized by maps.google.com
    :type formatted_address: str
    :param geofence:
    :type geofence: ~swagger.models.AddressGeofence
    :param name: The name of this address/geofence
    :type name: str
    :param notes:
    :type notes: str
    :param tag_ids:
    :type tag_ids: list[float]
    """

    _validation = {
        'formatted_address': {'required': True},
        'geofence': {'required': True},
        'name': {'required': True},
    }

    _attribute_map = {
        'contact_ids': {'key': 'contactIds', 'type': '[float]'},
        'formatted_address': {'key': 'formattedAddress', 'type': 'str'},
        'geofence': {'key': 'geofence', 'type': 'AddressGeofence'},
        'name': {'key': 'name', 'type': 'str'},
        'notes': {'key': 'notes', 'type': 'str'},
        'tag_ids': {'key': 'tagIds', 'type': '[float]'},
    }

    def __init__(self, formatted_address, geofence, name, contact_ids=None, notes=None, tag_ids=None):
        super(AddressesAddressesItem, self).__init__()
        self.contact_ids = contact_ids
        self.formatted_address = formatted_address
        self.geofence = geofence
        self.name = name
        self.notes = notes
        self.tag_ids = tag_ids

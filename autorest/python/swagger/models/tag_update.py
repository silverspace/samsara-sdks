# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class TagUpdate(Model):
    """TagUpdate.

    :param assets: The assets that belong to this tag.
    :type assets: list[~swagger.models.TaggedAssetBase]
    :param drivers: The drivers that belong to this tag.
    :type drivers: list[~swagger.models.TaggedDriverBase]
    :param machines: The machines that belong to this tag.
    :type machines: list[~swagger.models.TaggedMachineBase]
    :param name: Updated name of this tag.
    :type name: str
    :param parent_tag_id: If this tag is part a hierarchical tag tree as a
     child tag, the parentTagId is the ID of this tag's parent tag.
    :type parent_tag_id: long
    :param sensors: The sensors that belong to this tag.
    :type sensors: list[~swagger.models.TaggedSensorBase]
    :param vehicles: The vehicles that belong to this tag.
    :type vehicles: list[~swagger.models.TaggedVehicleBase]
    """

    _attribute_map = {
        'assets': {'key': 'assets', 'type': '[TaggedAssetBase]'},
        'drivers': {'key': 'drivers', 'type': '[TaggedDriverBase]'},
        'machines': {'key': 'machines', 'type': '[TaggedMachineBase]'},
        'name': {'key': 'name', 'type': 'str'},
        'parent_tag_id': {'key': 'parentTagId', 'type': 'long'},
        'sensors': {'key': 'sensors', 'type': '[TaggedSensorBase]'},
        'vehicles': {'key': 'vehicles', 'type': '[TaggedVehicleBase]'},
    }

    def __init__(self, assets=None, drivers=None, machines=None, name=None, parent_tag_id=None, sensors=None, vehicles=None):
        super(TagUpdate, self).__init__()
        self.assets = assets
        self.drivers = drivers
        self.machines = machines
        self.name = name
        self.parent_tag_id = parent_tag_id
        self.sensors = sensors
        self.vehicles = vehicles

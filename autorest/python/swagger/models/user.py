# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .user_base import UserBase


class User(UserBase):
    """User.

    :param auth_type: The authentication type the user uses to authenticate.
     To use SAML this organization must have a configured SAML integration.
     Possible values include: 'default', 'saml'
    :type auth_type: str or ~swagger.models.enum
    :param email: The email address of this user.
    :type email: str
    :param name: The first and last name of the user.
    :type name: str
    :param organization_role_id: The id of the role the user is assigned to at
     the organization level. This will be blank for users that only have access
     to specific tags.
    :type organization_role_id: str
    :param id: The ID of the User record.
    :type id: long
    :param organization_role: The name of the role the user is assigned to at
     the organization level. This will be blank for users that only have access
     to specific tags.
    :type organization_role: str
    :param tag_roles: The specific tags this user has access to. This will be
     blank for users that have full access to the organization.
    :type tag_roles: list[~swagger.models.UserTagRole]
    """

    _validation = {
        'auth_type': {'required': True},
        'email': {'required': True},
    }

    _attribute_map = {
        'auth_type': {'key': 'authType', 'type': 'str'},
        'email': {'key': 'email', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'organization_role_id': {'key': 'organizationRoleId', 'type': 'str'},
        'id': {'key': 'id', 'type': 'long'},
        'organization_role': {'key': 'organizationRole', 'type': 'str'},
        'tag_roles': {'key': 'tagRoles', 'type': '[UserTagRole]'},
    }

    def __init__(self, auth_type, email, name=None, organization_role_id=None, id=None, organization_role=None, tag_roles=None):
        super(User, self).__init__(auth_type=auth_type, email=email, name=name, organization_role_id=organization_role_id)
        self.id = id
        self.organization_role = organization_role
        self.tag_roles = tag_roles

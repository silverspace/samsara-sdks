# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class DispatchJobCreate(Model):
    """DispatchJobCreate.

    :param destination_address: The address of the job destination, as it
     would be recognized if provided to maps.google.com. Optional if a valid
     destination address ID is provided.
    :type destination_address: str
    :param destination_address_id: ID of the job destination associated with
     an address book entry. Optional if valid values are provided for
     destination address or latitude/longitude. If a valid destination address
     ID is provided, address/latitude/longitude will be used from the address
     book entry. Name of the address book entry will only be used if the
     destination name is not provided.
    :type destination_address_id: long
    :param destination_lat: Latitude of the destination in decimal degrees.
     Optional if a valid destination address ID is provided.
    :type destination_lat: float
    :param destination_lng: Longitude of the destination in decimal degrees.
     Optional if a valid destination address ID is provided.
    :type destination_lng: float
    :param destination_name: The name of the job destination. If provided, it
     will take precedence over the name of the address book entry.
    :type destination_name: str
    :param notes: Notes regarding the details of this job.
    :type notes: str
    :param scheduled_arrival_time_ms: The time at which the assigned driver is
     scheduled to arrive at the job destination.
    :type scheduled_arrival_time_ms: long
    :param scheduled_departure_time_ms: The time at which the assigned driver
     is scheduled to depart from the job destination.
    :type scheduled_departure_time_ms: long
    """

    _validation = {
        'scheduled_arrival_time_ms': {'required': True},
    }

    _attribute_map = {
        'destination_address': {'key': 'destination_address', 'type': 'str'},
        'destination_address_id': {'key': 'destination_address_id', 'type': 'long'},
        'destination_lat': {'key': 'destination_lat', 'type': 'float'},
        'destination_lng': {'key': 'destination_lng', 'type': 'float'},
        'destination_name': {'key': 'destination_name', 'type': 'str'},
        'notes': {'key': 'notes', 'type': 'str'},
        'scheduled_arrival_time_ms': {'key': 'scheduled_arrival_time_ms', 'type': 'long'},
        'scheduled_departure_time_ms': {'key': 'scheduled_departure_time_ms', 'type': 'long'},
    }

    def __init__(self, scheduled_arrival_time_ms, destination_address=None, destination_address_id=None, destination_lat=None, destination_lng=None, destination_name=None, notes=None, scheduled_departure_time_ms=None):
        super(DispatchJobCreate, self).__init__()
        self.destination_address = destination_address
        self.destination_address_id = destination_address_id
        self.destination_lat = destination_lat
        self.destination_lng = destination_lng
        self.destination_name = destination_name
        self.notes = notes
        self.scheduled_arrival_time_ms = scheduled_arrival_time_ms
        self.scheduled_departure_time_ms = scheduled_departure_time_ms

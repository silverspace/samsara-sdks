/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a TagUpdate.
 */
class TagUpdate {
  /**
   * Create a TagUpdate.
   * @property {array} [assets] The assets that belong to this tag.
   * @property {array} [drivers] The drivers that belong to this tag.
   * @property {array} [machines] The machines that belong to this tag.
   * @property {string} [name] Updated name of this tag.
   * @property {number} [parentTagId] If this tag is part a hierarchical tag
   * tree as a child tag, the parentTagId is the ID of this tag's parent tag.
   * @property {array} [sensors] The sensors that belong to this tag.
   * @property {array} [vehicles] The vehicles that belong to this tag.
   */
  constructor() {
  }

  /**
   * Defines the metadata of TagUpdate
   *
   * @returns {object} metadata of TagUpdate
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TagUpdate',
      type: {
        name: 'Composite',
        className: 'TagUpdate',
        modelProperties: {
          assets: {
            required: false,
            serializedName: 'assets',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TaggedAssetBaseElementType',
                  type: {
                    name: 'Composite',
                    className: 'TaggedAssetBase'
                  }
              }
            }
          },
          drivers: {
            required: false,
            serializedName: 'drivers',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TaggedDriverBaseElementType',
                  type: {
                    name: 'Composite',
                    className: 'TaggedDriverBase'
                  }
              }
            }
          },
          machines: {
            required: false,
            serializedName: 'machines',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TaggedMachineBaseElementType',
                  type: {
                    name: 'Composite',
                    className: 'TaggedMachineBase'
                  }
              }
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          parentTagId: {
            required: false,
            serializedName: 'parentTagId',
            type: {
              name: 'Number'
            }
          },
          sensors: {
            required: false,
            serializedName: 'sensors',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TaggedSensorBaseElementType',
                  type: {
                    name: 'Composite',
                    className: 'TaggedSensorBase'
                  }
              }
            }
          },
          vehicles: {
            required: false,
            serializedName: 'vehicles',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TaggedVehicleBaseElementType',
                  type: {
                    name: 'Composite',
                    className: 'TaggedVehicleBase'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = TagUpdate;

/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Contains the location, in latitude and longitude, of a vehicle.
 *
 */
class VehicleLocation {
  /**
   * Create a VehicleLocation.
   * @property {number} [heading] Heading in degrees.
   * @property {number} id ID of the vehicle.
   * @property {number} [latitude] Latitude in decimal degrees.
   * @property {string} [location] Text representation of nearest identifiable
   * location to (latitude, longitude) coordinates.
   * @property {number} [longitude] Longitude in decimal degrees.
   * @property {string} [name] Name of the vehicle.
   * @property {number} [odometerMeters] The number of meters reported by the
   * odometer.
   * @property {boolean} [onTrip] Whether or not a trip is currently in
   * progress for this vehicle. More information available via /fleet/trips
   * endpoint.
   * @property {number} [speed] Speed in miles per hour.
   * @property {number} [time] The time the reported location was logged,
   * reported as a UNIX timestamp in milliseconds.
   * @property {string} [vin] Vehicle Identification Number (VIN) of the
   * vehicle.
   */
  constructor() {
  }

  /**
   * Defines the metadata of VehicleLocation
   *
   * @returns {object} metadata of VehicleLocation
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VehicleLocation',
      type: {
        name: 'Composite',
        className: 'VehicleLocation',
        modelProperties: {
          heading: {
            required: false,
            serializedName: 'heading',
            type: {
              name: 'Number'
            }
          },
          id: {
            required: true,
            serializedName: 'id',
            type: {
              name: 'Number'
            }
          },
          latitude: {
            required: false,
            serializedName: 'latitude',
            type: {
              name: 'Number'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          longitude: {
            required: false,
            serializedName: 'longitude',
            type: {
              name: 'Number'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          odometerMeters: {
            required: false,
            serializedName: 'odometerMeters',
            type: {
              name: 'Number'
            }
          },
          onTrip: {
            required: false,
            serializedName: 'onTrip',
            type: {
              name: 'Boolean'
            }
          },
          speed: {
            required: false,
            serializedName: 'speed',
            type: {
              name: 'Number'
            }
          },
          time: {
            required: false,
            serializedName: 'time',
            type: {
              name: 'Number'
            }
          },
          vin: {
            required: false,
            serializedName: 'vin',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = VehicleLocation;

/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a TripResponseTripsItem.
 */
class TripResponseTripsItem {
  /**
   * Create a TripResponseTripsItem.
   * @property {number} [distanceMeters] Length of the trip in meters.
   * @property {number} [driverId] ID of the driver.
   * @property {string} [endAddress] Text representation of nearest
   * identifiable location to the end (latitude, longitude) coordinates.
   * @property {object} [endCoordinates] End (latitude, longitude) in decimal
   * degrees.
   * @property {number} [endCoordinates.latitude]
   * @property {number} [endCoordinates.longitude]
   * @property {string} [endLocation] Geocoded street address of start
   * (latitude, longitude) coordinates.
   * @property {number} [endMs] End of the trip in UNIX milliseconds.
   * @property {number} [endOdometer] Odometer reading at the end of the trip.
   * @property {number} [fuelConsumedMl] Amount in milliliters of fuel consumed
   * on this trip.
   * @property {string} [startAddress] Text representation of nearest
   * identifiable location to the start (latitude, longitude) coordinates.
   * @property {object} [startCoordinates] Start (latitude, longitude) in
   * decimal degrees.
   * @property {number} [startCoordinates.latitude]
   * @property {number} [startCoordinates.longitude]
   * @property {string} [startLocation] Geocoded street address of start
   * (latitude, longitude) coordinates.
   * @property {number} [startMs] Beginning of the trip in UNIX milliseconds.
   * @property {number} [startOdometer] Odometer reading at the beginning of
   * the trip.
   * @property {number} [tollMeters] Length in meters trip spent on toll roads.
   */
  constructor() {
  }

  /**
   * Defines the metadata of TripResponseTripsItem
   *
   * @returns {object} metadata of TripResponseTripsItem
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TripResponse_tripsItem',
      type: {
        name: 'Composite',
        className: 'TripResponseTripsItem',
        modelProperties: {
          distanceMeters: {
            required: false,
            serializedName: 'distanceMeters',
            type: {
              name: 'Number'
            }
          },
          driverId: {
            required: false,
            serializedName: 'driverId',
            type: {
              name: 'Number'
            }
          },
          endAddress: {
            required: false,
            serializedName: 'endAddress',
            type: {
              name: 'String'
            }
          },
          endCoordinates: {
            required: false,
            serializedName: 'endCoordinates',
            type: {
              name: 'Composite',
              className: 'TripResponseTripsItemEndCoordinates'
            }
          },
          endLocation: {
            required: false,
            serializedName: 'endLocation',
            type: {
              name: 'String'
            }
          },
          endMs: {
            required: false,
            serializedName: 'endMs',
            type: {
              name: 'Number'
            }
          },
          endOdometer: {
            required: false,
            serializedName: 'endOdometer',
            type: {
              name: 'Number'
            }
          },
          fuelConsumedMl: {
            required: false,
            serializedName: 'fuelConsumedMl',
            type: {
              name: 'Number'
            }
          },
          startAddress: {
            required: false,
            serializedName: 'startAddress',
            type: {
              name: 'String'
            }
          },
          startCoordinates: {
            required: false,
            serializedName: 'startCoordinates',
            type: {
              name: 'Composite',
              className: 'TripResponseTripsItemStartCoordinates'
            }
          },
          startLocation: {
            required: false,
            serializedName: 'startLocation',
            type: {
              name: 'String'
            }
          },
          startMs: {
            required: false,
            serializedName: 'startMs',
            type: {
              name: 'Number'
            }
          },
          startOdometer: {
            required: false,
            serializedName: 'startOdometer',
            type: {
              name: 'Number'
            }
          },
          tollMeters: {
            required: false,
            serializedName: 'tollMeters',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = TripResponseTripsItem;

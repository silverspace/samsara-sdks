/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The authors signature for the DVIR.
 *
 */
class DvirBaseAuthorSignature {
  /**
   * Create a DvirBaseAuthorSignature.
   * @property {number} [driverId] ID of the driver who signed the DVIR. Will
   * not be returned if mechanicUserId is returned.
   * @property {string} [email] Email of the  driver|mechanic who signed the
   * DVIR.
   * @property {number} [mechanicUserId] ID of the mechanic who signed the
   * DVIR. Will not be returned if driverId is returned.
   * @property {string} [name] The name of the driver or mechanic who signed
   * the DVIR.
   * @property {number} [signedAt] The time in millis when the DVIR was signed
   * @property {string} [type] Type corresponds to whether the signature
   * corresponds to driver|mechanic.
   * @property {string} [username] Username of the  driver|mechanic who signed
   * the DVIR.
   */
  constructor() {
  }

  /**
   * Defines the metadata of DvirBaseAuthorSignature
   *
   * @returns {object} metadata of DvirBaseAuthorSignature
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DvirBase_authorSignature',
      type: {
        name: 'Composite',
        className: 'DvirBaseAuthorSignature',
        modelProperties: {
          driverId: {
            required: false,
            serializedName: 'driverId',
            type: {
              name: 'Number'
            }
          },
          email: {
            required: false,
            serializedName: 'email',
            type: {
              name: 'String'
            }
          },
          mechanicUserId: {
            required: false,
            serializedName: 'mechanicUserId',
            type: {
              name: 'Number'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          signedAt: {
            required: false,
            serializedName: 'signedAt',
            type: {
              name: 'Number'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          username: {
            required: false,
            serializedName: 'username',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = DvirBaseAuthorSignature;

/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Sensor ID and field to query.
 *
 */
class HistoryParamSeriesItem {
  /**
   * Create a HistoryParamSeriesItem.
   * @property {string} field Field to query. Possible values include:
   * 'ambientTemperature', 'probeTemperature', 'currentLoop1Raw',
   * 'currentLoop1Mapped', 'currentLoop2Raw', 'currentLoop2Mapped',
   * 'pmPowerTotal', 'pmPhase1Power', 'pmPhase2Power', 'pmPhase3Power',
   * 'pmPhase1PowerFactor', 'pmPhase2PowerFactor', 'pmPhase3PowerFactor'
   * @property {number} widgetId Sensor ID to query.
   */
  constructor() {
  }

  /**
   * Defines the metadata of HistoryParamSeriesItem
   *
   * @returns {object} metadata of HistoryParamSeriesItem
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'historyParam_seriesItem',
      type: {
        name: 'Composite',
        className: 'HistoryParamSeriesItem',
        modelProperties: {
          field: {
            required: true,
            serializedName: 'field',
            type: {
              name: 'String'
            }
          },
          widgetId: {
            required: true,
            serializedName: 'widgetId',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = HistoryParamSeriesItem;

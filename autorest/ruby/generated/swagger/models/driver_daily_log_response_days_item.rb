# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Swagger
  module Models
    #
    # Model object.
    #
    #
    class DriverDailyLogResponseDaysItem
      # @return [Float] Hours spent on duty or driving, rounded to two decimal
      # places.
      attr_accessor :active_hours

      # @return [Integer] Milliseconds spent on duty or driving.
      attr_accessor :active_ms

      # @return [Boolean] Whether this HOS day chart was certified by the
      # driver.
      attr_accessor :certified

      # @return [Float] Unix epoch time (in ms) of time when this chart was
      # certified. If this chart is uncertified, 0.
      attr_accessor :certified_at_ms

      # @return [Float] Distance driven in miles, rounded to two decimal
      # places.
      attr_accessor :distance_miles

      # @return [Integer] End of the HOS day, specified in milliseconds UNIX
      # time.
      attr_accessor :end_ms

      # @return [Integer] End of the HOS day, specified in milliseconds UNIX
      # time.
      attr_accessor :start_ms

      # @return List of trailer ID's associated with the driver for the day.
      attr_accessor :trailer_ids

      # @return List of vehicle ID's associated with the driver for the day.
      attr_accessor :vehicle_ids


      #
      # Mapper for DriverDailyLogResponseDaysItem class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'DriverDailyLogResponse_daysItem',
          type: {
            name: 'Composite',
            class_name: 'DriverDailyLogResponseDaysItem',
            model_properties: {
              active_hours: {
                client_side_validation: true,
                required: false,
                serialized_name: 'activeHours',
                type: {
                  name: 'Double'
                }
              },
              active_ms: {
                client_side_validation: true,
                required: false,
                serialized_name: 'activeMs',
                type: {
                  name: 'Number'
                }
              },
              certified: {
                client_side_validation: true,
                required: false,
                serialized_name: 'certified',
                type: {
                  name: 'Boolean'
                }
              },
              certified_at_ms: {
                client_side_validation: true,
                required: false,
                serialized_name: 'certifiedAtMs',
                type: {
                  name: 'Double'
                }
              },
              distance_miles: {
                client_side_validation: true,
                required: false,
                serialized_name: 'distanceMiles',
                type: {
                  name: 'Double'
                }
              },
              end_ms: {
                client_side_validation: true,
                required: false,
                serialized_name: 'endMs',
                type: {
                  name: 'Number'
                }
              },
              start_ms: {
                client_side_validation: true,
                required: false,
                serialized_name: 'startMs',
                type: {
                  name: 'Number'
                }
              },
              trailer_ids: {
                client_side_validation: true,
                required: false,
                serialized_name: 'trailerIds',
                type: {
                  name: 'Object'
                }
              },
              vehicle_ids: {
                client_side_validation: true,
                required: false,
                serialized_name: 'vehicleIds',
                type: {
                  name: 'Object'
                }
              }
            }
          }
        }
      end
    end
  end
end

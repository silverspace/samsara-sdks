# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Swagger
  module Models
    #
    # Model object.
    #
    #
    class DispatchRouteBase
      # @return [Integer] The time in Unix epoch milliseconds that the route
      # actually ended.
      attr_accessor :actual_end_ms

      # @return [Integer] The time in Unix epoch milliseconds that the route
      # actually started.
      attr_accessor :actual_start_ms

      # @return [Integer] ID of the driver assigned to the dispatch route. Note
      # that driver_id and vehicle_id are mutually exclusive. If neither is
      # specified, then the route is unassigned.
      attr_accessor :driver_id

      # @return [Integer] ID of the group if the organization has multiple
      # groups (optional).
      attr_accessor :group_id

      # @return [String] Descriptive name of this route.
      attr_accessor :name

      # @return [Integer] The time in Unix epoch milliseconds that the last job
      # in the route is scheduled to end.
      attr_accessor :scheduled_end_ms

      # @return [Integer] The distance expected to be traveled for this route
      # in meters.
      attr_accessor :scheduled_meters

      # @return [Integer] The time in Unix epoch milliseconds that the route is
      # scheduled to start.
      attr_accessor :scheduled_start_ms

      # @return [String] The address of the route's starting location, as it
      # would be recognized if provided to maps.google.com. Optional if a valid
      # start location address ID is provided.
      attr_accessor :start_location_address

      # @return [Integer] ID of the start location associated with an address
      # book entry. Optional if valid values are provided for start location
      # address or latitude/longitude. If a valid start location address ID is
      # provided, address/latitude/longitude will be used from the address book
      # entry. Name of the address book entry will only be used if the start
      # location name is not provided.
      attr_accessor :start_location_address_id

      # @return [Float] Latitude of the start location in decimal degrees.
      # Optional if a valid start location address ID is provided.
      attr_accessor :start_location_lat

      # @return [Float] Longitude of the start location in decimal degrees.
      # Optional if a valid start location address ID is provided.
      attr_accessor :start_location_lng

      # @return [String] The name of the route's starting location. If
      # provided, it will take precedence over the name of the address book
      # entry.
      attr_accessor :start_location_name

      # @return [Integer] ID of the trailer assigned to the dispatch route.
      # Note that trailers can only be assigned to routes that have a Vehicle
      # or Driver assigned to them.
      attr_accessor :trailer_id

      # @return [Integer] ID of the vehicle assigned to the dispatch route.
      # Note that vehicle_id and driver_id are mutually exclusive. If neither
      # is specified, then the route is unassigned.
      attr_accessor :vehicle_id


      #
      # Mapper for DispatchRouteBase class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'DispatchRouteBase',
          type: {
            name: 'Composite',
            class_name: 'DispatchRouteBase',
            model_properties: {
              actual_end_ms: {
                client_side_validation: true,
                required: false,
                serialized_name: 'actual_end_ms',
                type: {
                  name: 'Number'
                }
              },
              actual_start_ms: {
                client_side_validation: true,
                required: false,
                serialized_name: 'actual_start_ms',
                type: {
                  name: 'Number'
                }
              },
              driver_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'driver_id',
                type: {
                  name: 'Number'
                }
              },
              group_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'group_id',
                type: {
                  name: 'Number'
                }
              },
              name: {
                client_side_validation: true,
                required: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              scheduled_end_ms: {
                client_side_validation: true,
                required: true,
                serialized_name: 'scheduled_end_ms',
                type: {
                  name: 'Number'
                }
              },
              scheduled_meters: {
                client_side_validation: true,
                required: false,
                serialized_name: 'scheduled_meters',
                type: {
                  name: 'Number'
                }
              },
              scheduled_start_ms: {
                client_side_validation: true,
                required: true,
                serialized_name: 'scheduled_start_ms',
                type: {
                  name: 'Number'
                }
              },
              start_location_address: {
                client_side_validation: true,
                required: false,
                serialized_name: 'start_location_address',
                type: {
                  name: 'String'
                }
              },
              start_location_address_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'start_location_address_id',
                type: {
                  name: 'Number'
                }
              },
              start_location_lat: {
                client_side_validation: true,
                required: false,
                serialized_name: 'start_location_lat',
                type: {
                  name: 'Double'
                }
              },
              start_location_lng: {
                client_side_validation: true,
                required: false,
                serialized_name: 'start_location_lng',
                type: {
                  name: 'Double'
                }
              },
              start_location_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'start_location_name',
                type: {
                  name: 'String'
                }
              },
              trailer_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'trailer_id',
                type: {
                  name: 'Number'
                }
              },
              vehicle_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'vehicle_id',
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end

# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Swagger
  module Models
    #
    # Model object.
    #
    #
    class DvirBase
      # @return [DvirBaseAuthorSignature] The authors signature for the DVIR.
      attr_accessor :author_signature

      # @return [Boolean] Signifies if the defects on the vehicle corrected
      # after the DVIR is done.
      attr_accessor :defects_corrected

      # @return [Boolean] Signifies if the defects on this vehicle can be
      # ignored.
      attr_accessor :defects_need_not_be_corrected

      # @return [Integer] The id of this DVIR record.
      attr_accessor :id

      # @return [String] Inspection type of the DVIR.
      attr_accessor :inspection_type

      # @return [String] The mechanics notes on the DVIR.
      attr_accessor :mechanic_notes

      # @return [DvirBaseMechanicOrAgentSignature] The mechanic's or agent's
      # signature for the DVIR.
      attr_accessor :mechanic_or_agent_signature

      # @return [DvirBaseNextDriverSignature] The next driver signature for the
      # DVIR.
      attr_accessor :next_driver_signature

      # @return [Integer] The odometer reading in miles for the vehicle when
      # the DVIR was done.
      attr_accessor :odometer_miles

      # @return [Integer] Timestamp of this DVIR in UNIX milliseconds.
      attr_accessor :time_ms

      # @return [Array<DvirBaseTrailerDefectsItem>] Defects registered for the
      # trailer which was part of the DVIR.
      attr_accessor :trailer_defects

      # @return [Integer] The id of the trailer which was part of the DVIR.
      attr_accessor :trailer_id

      # @return [String] The name of the trailer which was part of the DVIR.
      attr_accessor :trailer_name

      # @return [DvirBaseVehicle] The vehicle on which DVIR was done.
      attr_accessor :vehicle

      # @return [String] The condition of vechile on which DVIR was done.
      attr_accessor :vehicle_condition

      # @return [Array<DvirBaseVehicleDefectsItem>] Defects registered for the
      # vehicle which was part of the DVIR.
      attr_accessor :vehicle_defects


      #
      # Mapper for DvirBase class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'DvirBase',
          type: {
            name: 'Composite',
            class_name: 'DvirBase',
            model_properties: {
              author_signature: {
                client_side_validation: true,
                required: false,
                serialized_name: 'authorSignature',
                type: {
                  name: 'Composite',
                  class_name: 'DvirBaseAuthorSignature'
                }
              },
              defects_corrected: {
                client_side_validation: true,
                required: false,
                serialized_name: 'defectsCorrected',
                type: {
                  name: 'Boolean'
                }
              },
              defects_need_not_be_corrected: {
                client_side_validation: true,
                required: false,
                serialized_name: 'defectsNeedNotBeCorrected',
                type: {
                  name: 'Boolean'
                }
              },
              id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'id',
                type: {
                  name: 'Number'
                }
              },
              inspection_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'inspectionType',
                type: {
                  name: 'String'
                }
              },
              mechanic_notes: {
                client_side_validation: true,
                required: false,
                serialized_name: 'mechanicNotes',
                type: {
                  name: 'String'
                }
              },
              mechanic_or_agent_signature: {
                client_side_validation: true,
                required: false,
                serialized_name: 'mechanicOrAgentSignature',
                type: {
                  name: 'Composite',
                  class_name: 'DvirBaseMechanicOrAgentSignature'
                }
              },
              next_driver_signature: {
                client_side_validation: true,
                required: false,
                serialized_name: 'nextDriverSignature',
                type: {
                  name: 'Composite',
                  class_name: 'DvirBaseNextDriverSignature'
                }
              },
              odometer_miles: {
                client_side_validation: true,
                required: false,
                serialized_name: 'odometerMiles',
                type: {
                  name: 'Number'
                }
              },
              time_ms: {
                client_side_validation: true,
                required: false,
                serialized_name: 'timeMs',
                type: {
                  name: 'Number'
                }
              },
              trailer_defects: {
                client_side_validation: true,
                required: false,
                serialized_name: 'trailerDefects',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'DvirBaseTrailerDefectsItemElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'DvirBaseTrailerDefectsItem'
                      }
                  }
                }
              },
              trailer_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'trailerId',
                type: {
                  name: 'Number'
                }
              },
              trailer_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'trailerName',
                type: {
                  name: 'String'
                }
              },
              vehicle: {
                client_side_validation: true,
                required: false,
                serialized_name: 'vehicle',
                type: {
                  name: 'Composite',
                  class_name: 'DvirBaseVehicle'
                }
              },
              vehicle_condition: {
                client_side_validation: true,
                required: false,
                serialized_name: 'vehicleCondition',
                type: {
                  name: 'String'
                }
              },
              vehicle_defects: {
                client_side_validation: true,
                required: false,
                serialized_name: 'vehicleDefects',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'DvirBaseVehicleDefectsItemElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'DvirBaseVehicleDefectsItem'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end

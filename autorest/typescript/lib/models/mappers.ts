/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const Contact: msRest.CompositeMapper = {
  serializedName: "Contact",
  type: {
    name: "Composite",
    className: "Contact",
    modelProperties: {
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      firstName: {
        serializedName: "firstName",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      lastName: {
        serializedName: "lastName",
        type: {
          name: "String"
        }
      },
      phone: {
        serializedName: "phone",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddressGeofenceCircle: msRest.CompositeMapper = {
  serializedName: "AddressGeofence_circle",
  type: {
    name: "Composite",
    className: "AddressGeofenceCircle",
    modelProperties: {
      latitude: {
        serializedName: "latitude",
        type: {
          name: "Number"
        }
      },
      longitude: {
        serializedName: "longitude",
        type: {
          name: "Number"
        }
      },
      radiusMeters: {
        serializedName: "radiusMeters",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AddressGeofencePolygonVerticesItem: msRest.CompositeMapper = {
  serializedName: "AddressGeofence_polygon_verticesItem",
  type: {
    name: "Composite",
    className: "AddressGeofencePolygonVerticesItem",
    modelProperties: {
      latitude: {
        serializedName: "latitude",
        type: {
          name: "Number"
        }
      },
      longitude: {
        serializedName: "longitude",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AddressGeofencePolygon: msRest.CompositeMapper = {
  serializedName: "AddressGeofence_polygon",
  type: {
    name: "Composite",
    className: "AddressGeofencePolygon",
    modelProperties: {
      vertices: {
        serializedName: "vertices",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AddressGeofencePolygonVerticesItem"
            }
          }
        }
      }
    }
  }
};

export const AddressGeofence: msRest.CompositeMapper = {
  serializedName: "AddressGeofence",
  type: {
    name: "Composite",
    className: "AddressGeofence",
    modelProperties: {
      circle: {
        serializedName: "circle",
        type: {
          name: "Composite",
          className: "AddressGeofenceCircle"
        }
      },
      polygon: {
        serializedName: "polygon",
        type: {
          name: "Composite",
          className: "AddressGeofencePolygon"
        }
      }
    }
  }
};

export const TagMetadata: msRest.CompositeMapper = {
  serializedName: "TagMetadata",
  type: {
    name: "Composite",
    className: "TagMetadata",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Address: msRest.CompositeMapper = {
  serializedName: "Address",
  type: {
    name: "Composite",
    className: "Address",
    modelProperties: {
      contacts: {
        serializedName: "contacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Contact"
            }
          }
        }
      },
      formattedAddress: {
        serializedName: "formattedAddress",
        type: {
          name: "String"
        }
      },
      geofence: {
        serializedName: "geofence",
        type: {
          name: "Composite",
          className: "AddressGeofence"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      notes: {
        serializedName: "notes",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TagMetadata"
            }
          }
        }
      }
    }
  }
};

export const AssetCableItem: msRest.CompositeMapper = {
  serializedName: "Asset_cableItem",
  type: {
    name: "Composite",
    className: "AssetCableItem",
    modelProperties: {
      assetType: {
        serializedName: "assetType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Asset: msRest.CompositeMapper = {
  serializedName: "Asset",
  type: {
    name: "Composite",
    className: "Asset",
    modelProperties: {
      assetSerialNumber: {
        serializedName: "assetSerialNumber",
        type: {
          name: "String"
        }
      },
      cable: {
        serializedName: "cable",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssetCableItem"
            }
          }
        }
      },
      engineHours: {
        serializedName: "engineHours",
        type: {
          name: "Number"
        }
      },
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssetCurrentLocation: msRest.CompositeMapper = {
  serializedName: "AssetCurrentLocation",
  type: {
    name: "Composite",
    className: "AssetCurrentLocation",
    modelProperties: {
      latitude: {
        serializedName: "latitude",
        type: {
          name: "Number"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      longitude: {
        serializedName: "longitude",
        type: {
          name: "Number"
        }
      },
      speedMilesPerHour: {
        serializedName: "speedMilesPerHour",
        type: {
          name: "Number"
        }
      },
      timeMs: {
        serializedName: "timeMs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AssetCurrentLocationsResponseCableItem: msRest.CompositeMapper = {
  serializedName: "AssetCurrentLocationsResponse_cableItem",
  type: {
    name: "Composite",
    className: "AssetCurrentLocationsResponseCableItem",
    modelProperties: {
      assetType: {
        serializedName: "assetType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssetCurrentLocationsResponse: msRest.CompositeMapper = {
  serializedName: "AssetCurrentLocationsResponse",
  type: {
    name: "Composite",
    className: "AssetCurrentLocationsResponse",
    modelProperties: {
      cable: {
        serializedName: "cable",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssetCurrentLocationsResponseCableItem"
            }
          }
        }
      },
      engineHours: {
        serializedName: "engineHours",
        type: {
          name: "Number"
        }
      },
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssetCurrentLocation"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssetLocationResponseItem: msRest.CompositeMapper = {
  serializedName: "AssetLocationResponseItem",
  type: {
    name: "Composite",
    className: "AssetLocationResponseItem",
    modelProperties: {
      latitude: {
        serializedName: "latitude",
        type: {
          name: "Number"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      longitude: {
        serializedName: "longitude",
        type: {
          name: "Number"
        }
      },
      speedMilesPerHour: {
        serializedName: "speedMilesPerHour",
        type: {
          name: "Number"
        }
      },
      time: {
        serializedName: "time",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AssetReeferResponseReeferStatsAlarmsItemAlarmsItem: msRest.CompositeMapper = {
  serializedName: "AssetReeferResponse_reeferStats_alarmsItem_alarmsItem",
  type: {
    name: "Composite",
    className: "AssetReeferResponseReeferStatsAlarmsItemAlarmsItem",
    modelProperties: {
      alarmCode: {
        serializedName: "alarmCode",
        type: {
          name: "Number"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      operatorAction: {
        serializedName: "operatorAction",
        type: {
          name: "String"
        }
      },
      severity: {
        serializedName: "severity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AssetReeferResponseReeferStatsAlarmsItem: msRest.CompositeMapper = {
  serializedName: "AssetReeferResponse_reeferStats_alarmsItem",
  type: {
    name: "Composite",
    className: "AssetReeferResponseReeferStatsAlarmsItem",
    modelProperties: {
      alarms: {
        serializedName: "alarms",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssetReeferResponseReeferStatsAlarmsItemAlarmsItem"
            }
          }
        }
      },
      changedAtMs: {
        serializedName: "changedAtMs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AssetReeferResponseReeferStatsEngineHoursItem: msRest.CompositeMapper = {
  serializedName: "AssetReeferResponse_reeferStats_engineHoursItem",
  type: {
    name: "Composite",
    className: "AssetReeferResponseReeferStatsEngineHoursItem",
    modelProperties: {
      changedAtMs: {
        serializedName: "changedAtMs",
        type: {
          name: "Number"
        }
      },
      engineHours: {
        serializedName: "engineHours",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AssetReeferResponseReeferStatsFuelPercentageItem: msRest.CompositeMapper = {
  serializedName: "AssetReeferResponse_reeferStats_fuelPercentageItem",
  type: {
    name: "Composite",
    className: "AssetReeferResponseReeferStatsFuelPercentageItem",
    modelProperties: {
      changedAtMs: {
        serializedName: "changedAtMs",
        type: {
          name: "Number"
        }
      },
      fuelPercentage: {
        serializedName: "fuelPercentage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AssetReeferResponseReeferStatsPowerStatusItem: msRest.CompositeMapper = {
  serializedName: "AssetReeferResponse_reeferStats_powerStatusItem",
  type: {
    name: "Composite",
    className: "AssetReeferResponseReeferStatsPowerStatusItem",
    modelProperties: {
      changedAtMs: {
        serializedName: "changedAtMs",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssetReeferResponseReeferStatsReturnAirTempItem: msRest.CompositeMapper = {
  serializedName: "AssetReeferResponse_reeferStats_returnAirTempItem",
  type: {
    name: "Composite",
    className: "AssetReeferResponseReeferStatsReturnAirTempItem",
    modelProperties: {
      changedAtMs: {
        serializedName: "changedAtMs",
        type: {
          name: "Number"
        }
      },
      tempInMilliC: {
        serializedName: "tempInMilliC",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AssetReeferResponseReeferStatsSetPointItem: msRest.CompositeMapper = {
  serializedName: "AssetReeferResponse_reeferStats_setPointItem",
  type: {
    name: "Composite",
    className: "AssetReeferResponseReeferStatsSetPointItem",
    modelProperties: {
      changedAtMs: {
        serializedName: "changedAtMs",
        type: {
          name: "Number"
        }
      },
      tempInMilliC: {
        serializedName: "tempInMilliC",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AssetReeferResponseReeferStats: msRest.CompositeMapper = {
  serializedName: "AssetReeferResponse_reeferStats",
  type: {
    name: "Composite",
    className: "AssetReeferResponseReeferStats",
    modelProperties: {
      alarms: {
        serializedName: "alarms",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssetReeferResponseReeferStatsAlarmsItem"
            }
          }
        }
      },
      engineHours: {
        serializedName: "engineHours",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssetReeferResponseReeferStatsEngineHoursItem"
            }
          }
        }
      },
      fuelPercentage: {
        serializedName: "fuelPercentage",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssetReeferResponseReeferStatsFuelPercentageItem"
            }
          }
        }
      },
      powerStatus: {
        serializedName: "powerStatus",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssetReeferResponseReeferStatsPowerStatusItem"
            }
          }
        }
      },
      returnAirTemp: {
        serializedName: "returnAirTemp",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssetReeferResponseReeferStatsReturnAirTempItem"
            }
          }
        }
      },
      setPoint: {
        serializedName: "setPoint",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssetReeferResponseReeferStatsSetPointItem"
            }
          }
        }
      }
    }
  }
};

export const AssetReeferResponse: msRest.CompositeMapper = {
  serializedName: "AssetReeferResponse",
  type: {
    name: "Composite",
    className: "AssetReeferResponse",
    modelProperties: {
      assetType: {
        serializedName: "assetType",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      reeferStats: {
        serializedName: "reeferStats",
        type: {
          name: "Composite",
          className: "AssetReeferResponseReeferStats"
        }
      }
    }
  }
};

export const AuxInput: msRest.CompositeMapper = {
  serializedName: "AuxInput",
  type: {
    name: "Composite",
    className: "AuxInput",
    modelProperties: {
      timeMs: {
        required: true,
        serializedName: "timeMs",
        type: {
          name: "Number"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AuxInputSeries: msRest.CompositeMapper = {
  serializedName: "AuxInputSeries",
  type: {
    name: "Composite",
    className: "AuxInputSeries",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      values: {
        required: true,
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AuxInput"
            }
          }
        }
      }
    }
  }
};

export const CargoResponseSensorsItem: msRest.CompositeMapper = {
  serializedName: "CargoResponse_sensorsItem",
  type: {
    name: "Composite",
    className: "CargoResponseSensorsItem",
    modelProperties: {
      cargoEmpty: {
        serializedName: "cargoEmpty",
        type: {
          name: "Boolean"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CargoResponse: msRest.CompositeMapper = {
  serializedName: "CargoResponse",
  type: {
    name: "Composite",
    className: "CargoResponse",
    modelProperties: {
      groupId: {
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      sensors: {
        serializedName: "sensors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CargoResponseSensorsItem"
            }
          }
        }
      }
    }
  }
};

export const DriverBase: msRest.CompositeMapper = {
  serializedName: "DriverBase",
  type: {
    name: "Composite",
    className: "DriverBase",
    modelProperties: {
      eldAdverseWeatherExemptionEnabled: {
        serializedName: "eldAdverseWeatherExemptionEnabled",
        type: {
          name: "Boolean"
        }
      },
      eldBigDayExemptionEnabled: {
        serializedName: "eldBigDayExemptionEnabled",
        type: {
          name: "Boolean"
        }
      },
      eldDayStartHour: {
        serializedName: "eldDayStartHour",
        type: {
          name: "Number"
        }
      },
      eldExempt: {
        serializedName: "eldExempt",
        type: {
          name: "Boolean"
        }
      },
      eldExemptReason: {
        serializedName: "eldExemptReason",
        type: {
          name: "String"
        }
      },
      eldPcEnabled: {
        serializedName: "eldPcEnabled",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      eldYmEnabled: {
        serializedName: "eldYmEnabled",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      externalIds: {
        serializedName: "externalIds",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      groupId: {
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      licenseNumber: {
        serializedName: "licenseNumber",
        type: {
          name: "String"
        }
      },
      licenseState: {
        serializedName: "licenseState",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      notes: {
        serializedName: "notes",
        type: {
          name: "String"
        }
      },
      phone: {
        serializedName: "phone",
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      vehicleId: {
        serializedName: "vehicleId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CurrentDriver: msRest.CompositeMapper = {
  serializedName: "CurrentDriver",
  type: {
    name: "Composite",
    className: "CurrentDriver",
    modelProperties: {
      ...DriverBase.type.modelProperties,
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      isDeactivated: {
        serializedName: "isDeactivated",
        type: {
          name: "Boolean"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TagMetadata"
            }
          }
        }
      },
      currentVehicleId: {
        serializedName: "currentVehicleId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DataInputHistoryResponsePointsItem: msRest.CompositeMapper = {
  serializedName: "DataInputHistoryResponse_pointsItem",
  type: {
    name: "Composite",
    className: "DataInputHistoryResponsePointsItem",
    modelProperties: {
      timeMs: {
        serializedName: "timeMs",
        type: {
          name: "Number"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DataInputHistoryResponse: msRest.CompositeMapper = {
  serializedName: "DataInputHistoryResponse",
  type: {
    name: "Composite",
    className: "DataInputHistoryResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      points: {
        serializedName: "points",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataInputHistoryResponsePointsItem"
            }
          }
        }
      }
    }
  }
};

export const DispatchJobCreate: msRest.CompositeMapper = {
  serializedName: "DispatchJobCreate",
  type: {
    name: "Composite",
    className: "DispatchJobCreate",
    modelProperties: {
      destinationAddress: {
        serializedName: "destination_address",
        type: {
          name: "String"
        }
      },
      destinationAddressId: {
        serializedName: "destination_address_id",
        type: {
          name: "Number"
        }
      },
      destinationLat: {
        serializedName: "destination_lat",
        type: {
          name: "Number"
        }
      },
      destinationLng: {
        serializedName: "destination_lng",
        type: {
          name: "Number"
        }
      },
      destinationName: {
        serializedName: "destination_name",
        type: {
          name: "String"
        }
      },
      notes: {
        serializedName: "notes",
        type: {
          name: "String"
        }
      },
      scheduledArrivalTimeMs: {
        required: true,
        serializedName: "scheduled_arrival_time_ms",
        type: {
          name: "Number"
        }
      },
      scheduledDepartureTimeMs: {
        serializedName: "scheduled_departure_time_ms",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DispatchJob: msRest.CompositeMapper = {
  serializedName: "DispatchJob",
  type: {
    name: "Composite",
    className: "DispatchJob",
    modelProperties: {
      ...DispatchJobCreate.type.modelProperties,
      arrivedAtMs: {
        serializedName: "arrived_at_ms",
        type: {
          name: "Number"
        }
      },
      completedAtMs: {
        serializedName: "completed_at_ms",
        type: {
          name: "Number"
        }
      },
      dispatchRouteId: {
        required: true,
        serializedName: "dispatch_route_id",
        type: {
          name: "Number"
        }
      },
      driverId: {
        serializedName: "driver_id",
        type: {
          name: "Number"
        }
      },
      enRouteAtMs: {
        serializedName: "en_route_at_ms",
        type: {
          name: "Number"
        }
      },
      estimatedArrivalMs: {
        serializedName: "estimated_arrival_ms",
        type: {
          name: "Number"
        }
      },
      fleetViewerUrl: {
        serializedName: "fleet_viewer_url",
        type: {
          name: "String"
        }
      },
      groupId: {
        required: true,
        serializedName: "group_id",
        type: {
          name: "Number"
        }
      },
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      jobState: {
        required: true,
        serializedName: "job_state",
        type: {
          name: "String"
        }
      },
      skippedAtMs: {
        serializedName: "skipped_at_ms",
        type: {
          name: "Number"
        }
      },
      vehicleId: {
        serializedName: "vehicle_id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DispatchRouteBase: msRest.CompositeMapper = {
  serializedName: "DispatchRouteBase",
  type: {
    name: "Composite",
    className: "DispatchRouteBase",
    modelProperties: {
      actualEndMs: {
        serializedName: "actual_end_ms",
        type: {
          name: "Number"
        }
      },
      actualStartMs: {
        serializedName: "actual_start_ms",
        type: {
          name: "Number"
        }
      },
      driverId: {
        serializedName: "driver_id",
        type: {
          name: "Number"
        }
      },
      groupId: {
        serializedName: "group_id",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      scheduledEndMs: {
        required: true,
        serializedName: "scheduled_end_ms",
        type: {
          name: "Number"
        }
      },
      scheduledMeters: {
        serializedName: "scheduled_meters",
        type: {
          name: "Number"
        }
      },
      scheduledStartMs: {
        required: true,
        serializedName: "scheduled_start_ms",
        type: {
          name: "Number"
        }
      },
      startLocationAddress: {
        serializedName: "start_location_address",
        type: {
          name: "String"
        }
      },
      startLocationAddressId: {
        serializedName: "start_location_address_id",
        type: {
          name: "Number"
        }
      },
      startLocationLat: {
        serializedName: "start_location_lat",
        type: {
          name: "Number"
        }
      },
      startLocationLng: {
        serializedName: "start_location_lng",
        type: {
          name: "Number"
        }
      },
      startLocationName: {
        serializedName: "start_location_name",
        type: {
          name: "String"
        }
      },
      trailerId: {
        serializedName: "trailer_id",
        type: {
          name: "Number"
        }
      },
      vehicleId: {
        serializedName: "vehicle_id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DispatchRoute: msRest.CompositeMapper = {
  serializedName: "DispatchRoute",
  type: {
    name: "Composite",
    className: "DispatchRoute",
    modelProperties: {
      ...DispatchRouteBase.type.modelProperties,
      dispatchJobs: {
        required: true,
        serializedName: "dispatch_jobs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DispatchJob"
            }
          }
        }
      },
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DispatchRouteCreate: msRest.CompositeMapper = {
  serializedName: "DispatchRouteCreate",
  type: {
    name: "Composite",
    className: "DispatchRouteCreate",
    modelProperties: {
      ...DispatchRouteBase.type.modelProperties,
      dispatchJobs: {
        required: true,
        serializedName: "dispatch_jobs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DispatchJobCreate"
            }
          }
        }
      }
    }
  }
};

export const DispatchRouteHistoricalEntry: msRest.CompositeMapper = {
  serializedName: "DispatchRouteHistoricalEntry",
  type: {
    name: "Composite",
    className: "DispatchRouteHistoricalEntry",
    modelProperties: {
      changedAtMs: {
        serializedName: "changed_at_ms",
        type: {
          name: "Number"
        }
      },
      route: {
        serializedName: "route",
        type: {
          name: "Composite",
          className: "DispatchRoute"
        }
      }
    }
  }
};

export const DispatchRouteHistory: msRest.CompositeMapper = {
  serializedName: "DispatchRouteHistory",
  type: {
    name: "Composite",
    className: "DispatchRouteHistory",
    modelProperties: {
      history: {
        serializedName: "history",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DispatchRouteHistoricalEntry"
            }
          }
        }
      }
    }
  }
};

export const DocumentFieldCreate: msRest.CompositeMapper = {
  serializedName: "DocumentFieldCreate",
  type: {
    name: "Composite",
    className: "DocumentFieldCreate",
    modelProperties: {
      numberValue: {
        serializedName: "numberValue",
        type: {
          name: "Number"
        }
      },
      photoValue: {
        serializedName: "photoValue",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DocumentFieldCreatePhotoValueItem"
            }
          }
        }
      },
      stringValue: {
        serializedName: "stringValue",
        type: {
          name: "String"
        }
      },
      valueType: {
        required: true,
        serializedName: "valueType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DocumentField: msRest.CompositeMapper = {
  serializedName: "DocumentField",
  type: {
    name: "Composite",
    className: "DocumentField",
    modelProperties: {
      ...DocumentFieldCreate.type.modelProperties,
      label: {
        required: true,
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const DocumentBase: msRest.CompositeMapper = {
  serializedName: "DocumentBase",
  type: {
    name: "Composite",
    className: "DocumentBase",
    modelProperties: {
      dispatchJobId: {
        serializedName: "dispatchJobId",
        type: {
          name: "Number"
        }
      },
      notes: {
        serializedName: "notes",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Document: msRest.CompositeMapper = {
  serializedName: "Document",
  type: {
    name: "Composite",
    className: "Document",
    modelProperties: {
      ...DocumentBase.type.modelProperties,
      documentType: {
        required: true,
        serializedName: "documentType",
        type: {
          name: "String"
        }
      },
      driverCreatedAtMs: {
        required: true,
        serializedName: "driverCreatedAtMs",
        type: {
          name: "Number"
        }
      },
      driverId: {
        required: true,
        serializedName: "driverId",
        type: {
          name: "Number"
        }
      },
      fields: {
        required: true,
        serializedName: "fields",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DocumentField"
            }
          }
        }
      },
      vehicleId: {
        serializedName: "vehicleId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DocumentCreate: msRest.CompositeMapper = {
  serializedName: "DocumentCreate",
  type: {
    name: "Composite",
    className: "DocumentCreate",
    modelProperties: {
      ...DocumentBase.type.modelProperties,
      documentTypeUuid: {
        required: true,
        serializedName: "documentTypeUuid",
        type: {
          name: "String"
        }
      },
      fields: {
        required: true,
        serializedName: "fields",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DocumentField"
            }
          }
        }
      }
    }
  }
};

export const DocumentFieldCreatePhotoValueItem: msRest.CompositeMapper = {
  serializedName: "DocumentFieldCreate_photoValueItem",
  type: {
    name: "Composite",
    className: "DocumentFieldCreatePhotoValueItem",
    modelProperties: {
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DocumentFieldTypeNumberValueTypeMetadata: msRest.CompositeMapper = {
  serializedName: "DocumentFieldType_numberValueTypeMetadata",
  type: {
    name: "Composite",
    className: "DocumentFieldTypeNumberValueTypeMetadata",
    modelProperties: {
      numDecimalPlaces: {
        serializedName: "numDecimalPlaces",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DocumentFieldType: msRest.CompositeMapper = {
  serializedName: "DocumentFieldType",
  type: {
    name: "Composite",
    className: "DocumentFieldType",
    modelProperties: {
      label: {
        required: true,
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      numberValueTypeMetadata: {
        serializedName: "numberValueTypeMetadata",
        type: {
          name: "Composite",
          className: "DocumentFieldTypeNumberValueTypeMetadata"
        }
      },
      valueType: {
        required: true,
        serializedName: "valueType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DocumentType: msRest.CompositeMapper = {
  serializedName: "DocumentType",
  type: {
    name: "Composite",
    className: "DocumentType",
    modelProperties: {
      fieldTypes: {
        serializedName: "fieldTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "DocumentFieldType"
                }
              }
            }
          }
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      orgId: {
        required: true,
        serializedName: "orgId",
        type: {
          name: "Number"
        }
      },
      uuid: {
        required: true,
        serializedName: "uuid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DoorResponseSensorsItem: msRest.CompositeMapper = {
  serializedName: "DoorResponse_sensorsItem",
  type: {
    name: "Composite",
    className: "DoorResponseSensorsItem",
    modelProperties: {
      doorClosed: {
        serializedName: "doorClosed",
        type: {
          name: "Boolean"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DoorResponse: msRest.CompositeMapper = {
  serializedName: "DoorResponse",
  type: {
    name: "Composite",
    className: "DoorResponse",
    modelProperties: {
      groupId: {
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      sensors: {
        serializedName: "sensors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DoorResponseSensorsItem"
            }
          }
        }
      }
    }
  }
};

export const DriverDailyLogResponseDaysItem: msRest.CompositeMapper = {
  serializedName: "DriverDailyLogResponse_daysItem",
  type: {
    name: "Composite",
    className: "DriverDailyLogResponseDaysItem",
    modelProperties: {
      activeHours: {
        serializedName: "activeHours",
        type: {
          name: "Number"
        }
      },
      activeMs: {
        serializedName: "activeMs",
        type: {
          name: "Number"
        }
      },
      certified: {
        serializedName: "certified",
        type: {
          name: "Boolean"
        }
      },
      certifiedAtMs: {
        serializedName: "certifiedAtMs",
        type: {
          name: "Number"
        }
      },
      distanceMiles: {
        serializedName: "distanceMiles",
        type: {
          name: "Number"
        }
      },
      endMs: {
        serializedName: "endMs",
        type: {
          name: "Number"
        }
      },
      startMs: {
        serializedName: "startMs",
        type: {
          name: "Number"
        }
      },
      trailerIds: {
        serializedName: "trailerIds",
        type: {
          name: "Object"
        }
      },
      vehicleIds: {
        serializedName: "vehicleIds",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const DriverDailyLogResponse: msRest.CompositeMapper = {
  serializedName: "DriverDailyLogResponse",
  type: {
    name: "Composite",
    className: "DriverDailyLogResponse",
    modelProperties: {
      days: {
        serializedName: "days",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DriverDailyLogResponseDaysItem"
            }
          }
        }
      }
    }
  }
};

export const DriverForCreate: msRest.CompositeMapper = {
  serializedName: "DriverForCreate",
  type: {
    name: "Composite",
    className: "DriverForCreate",
    modelProperties: {
      ...DriverBase.type.modelProperties,
      password: {
        required: true,
        serializedName: "password",
        type: {
          name: "String"
        }
      },
      tagIds: {
        serializedName: "tagIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const SafetyReportHarshEvent: msRest.CompositeMapper = {
  serializedName: "SafetyReportHarshEvent",
  type: {
    name: "Composite",
    className: "SafetyReportHarshEvent",
    modelProperties: {
      harshEventType: {
        serializedName: "harshEventType",
        type: {
          name: "String"
        }
      },
      timestampMs: {
        serializedName: "timestampMs",
        type: {
          name: "Number"
        }
      },
      vehicleId: {
        serializedName: "vehicleId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DriverSafetyScoreResponse: msRest.CompositeMapper = {
  serializedName: "DriverSafetyScoreResponse",
  type: {
    name: "Composite",
    className: "DriverSafetyScoreResponse",
    modelProperties: {
      crashCount: {
        serializedName: "crashCount",
        type: {
          name: "Number"
        }
      },
      driverId: {
        serializedName: "driverId",
        type: {
          name: "Number"
        }
      },
      harshAccelCount: {
        serializedName: "harshAccelCount",
        type: {
          name: "Number"
        }
      },
      harshBrakingCount: {
        serializedName: "harshBrakingCount",
        type: {
          name: "Number"
        }
      },
      harshEvents: {
        serializedName: "harshEvents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SafetyReportHarshEvent"
            }
          }
        }
      },
      harshTurningCount: {
        serializedName: "harshTurningCount",
        type: {
          name: "Number"
        }
      },
      safetyScore: {
        serializedName: "safetyScore",
        type: {
          name: "Number"
        }
      },
      safetyScoreRank: {
        serializedName: "safetyScoreRank",
        type: {
          name: "String"
        }
      },
      timeOverSpeedLimitMs: {
        serializedName: "timeOverSpeedLimitMs",
        type: {
          name: "Number"
        }
      },
      totalDistanceDrivenMeters: {
        serializedName: "totalDistanceDrivenMeters",
        type: {
          name: "Number"
        }
      },
      totalHarshEventCount: {
        serializedName: "totalHarshEventCount",
        type: {
          name: "Number"
        }
      },
      totalTimeDrivenMs: {
        serializedName: "totalTimeDrivenMs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DriversResponse: msRest.CompositeMapper = {
  serializedName: "DriversResponse",
  type: {
    name: "Composite",
    className: "DriversResponse",
    modelProperties: {
      drivers: {
        serializedName: "drivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CurrentDriver"
            }
          }
        }
      }
    }
  }
};

export const DriversSummaryResponseSummariesItem: msRest.CompositeMapper = {
  serializedName: "DriversSummaryResponse_SummariesItem",
  type: {
    name: "Composite",
    className: "DriversSummaryResponseSummariesItem",
    modelProperties: {
      activeMs: {
        serializedName: "activeMs",
        type: {
          name: "Number"
        }
      },
      distanceMiles: {
        serializedName: "distanceMiles",
        type: {
          name: "Number"
        }
      },
      driveMs: {
        serializedName: "driveMs",
        type: {
          name: "Number"
        }
      },
      driverId: {
        serializedName: "driverId",
        type: {
          name: "Number"
        }
      },
      driverName: {
        serializedName: "driverName",
        type: {
          name: "String"
        }
      },
      driverUsername: {
        serializedName: "driverUsername",
        type: {
          name: "String"
        }
      },
      groupId: {
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      onDutyMs: {
        serializedName: "onDutyMs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DriversSummaryResponse: msRest.CompositeMapper = {
  serializedName: "DriversSummaryResponse",
  type: {
    name: "Composite",
    className: "DriversSummaryResponse",
    modelProperties: {
      summaries: {
        serializedName: "Summaries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DriversSummaryResponseSummariesItem"
            }
          }
        }
      }
    }
  }
};

export const DvirBaseAuthorSignature: msRest.CompositeMapper = {
  serializedName: "DvirBase_authorSignature",
  type: {
    name: "Composite",
    className: "DvirBaseAuthorSignature",
    modelProperties: {
      driverId: {
        serializedName: "driverId",
        type: {
          name: "Number"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      mechanicUserId: {
        serializedName: "mechanicUserId",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      signedAt: {
        serializedName: "signedAt",
        type: {
          name: "Number"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DvirBaseMechanicOrAgentSignature: msRest.CompositeMapper = {
  serializedName: "DvirBase_mechanicOrAgentSignature",
  type: {
    name: "Composite",
    className: "DvirBaseMechanicOrAgentSignature",
    modelProperties: {
      driverId: {
        serializedName: "driverId",
        type: {
          name: "Number"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      mechanicUserId: {
        serializedName: "mechanicUserId",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      signedAt: {
        serializedName: "signedAt",
        type: {
          name: "Number"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DvirBaseNextDriverSignature: msRest.CompositeMapper = {
  serializedName: "DvirBase_nextDriverSignature",
  type: {
    name: "Composite",
    className: "DvirBaseNextDriverSignature",
    modelProperties: {
      driverId: {
        serializedName: "driverId",
        type: {
          name: "Number"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      signedAt: {
        serializedName: "signedAt",
        type: {
          name: "Number"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DvirBaseTrailerDefectsItem: msRest.CompositeMapper = {
  serializedName: "DvirBase_trailerDefectsItem",
  type: {
    name: "Composite",
    className: "DvirBaseTrailerDefectsItem",
    modelProperties: {
      comment: {
        serializedName: "comment",
        type: {
          name: "String"
        }
      },
      defectType: {
        serializedName: "defectType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DvirBaseVehicle: msRest.CompositeMapper = {
  serializedName: "DvirBase_vehicle",
  type: {
    name: "Composite",
    className: "DvirBaseVehicle",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DvirBaseVehicleDefectsItem: msRest.CompositeMapper = {
  serializedName: "DvirBase_vehicleDefectsItem",
  type: {
    name: "Composite",
    className: "DvirBaseVehicleDefectsItem",
    modelProperties: {
      comment: {
        serializedName: "comment",
        type: {
          name: "String"
        }
      },
      defectType: {
        serializedName: "defectType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DvirBase: msRest.CompositeMapper = {
  serializedName: "DvirBase",
  type: {
    name: "Composite",
    className: "DvirBase",
    modelProperties: {
      authorSignature: {
        serializedName: "authorSignature",
        type: {
          name: "Composite",
          className: "DvirBaseAuthorSignature"
        }
      },
      defectsCorrected: {
        serializedName: "defectsCorrected",
        type: {
          name: "Boolean"
        }
      },
      defectsNeedNotBeCorrected: {
        serializedName: "defectsNeedNotBeCorrected",
        type: {
          name: "Boolean"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      inspectionType: {
        serializedName: "inspectionType",
        type: {
          name: "String"
        }
      },
      mechanicNotes: {
        serializedName: "mechanicNotes",
        type: {
          name: "String"
        }
      },
      mechanicOrAgentSignature: {
        serializedName: "mechanicOrAgentSignature",
        type: {
          name: "Composite",
          className: "DvirBaseMechanicOrAgentSignature"
        }
      },
      nextDriverSignature: {
        serializedName: "nextDriverSignature",
        type: {
          name: "Composite",
          className: "DvirBaseNextDriverSignature"
        }
      },
      odometerMiles: {
        serializedName: "odometerMiles",
        type: {
          name: "Number"
        }
      },
      timeMs: {
        serializedName: "timeMs",
        type: {
          name: "Number"
        }
      },
      trailerDefects: {
        serializedName: "trailerDefects",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DvirBaseTrailerDefectsItem"
            }
          }
        }
      },
      trailerId: {
        serializedName: "trailerId",
        type: {
          name: "Number"
        }
      },
      trailerName: {
        serializedName: "trailerName",
        type: {
          name: "String"
        }
      },
      vehicle: {
        serializedName: "vehicle",
        type: {
          name: "Composite",
          className: "DvirBaseVehicle"
        }
      },
      vehicleCondition: {
        serializedName: "vehicleCondition",
        type: {
          name: "String"
        }
      },
      vehicleDefects: {
        serializedName: "vehicleDefects",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DvirBaseVehicleDefectsItem"
            }
          }
        }
      }
    }
  }
};

export const DvirListResponse: msRest.CompositeMapper = {
  serializedName: "DvirListResponse",
  type: {
    name: "Composite",
    className: "DvirListResponse",
    modelProperties: {
      dvirs: {
        serializedName: "dvirs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DvirBase"
            }
          }
        }
      }
    }
  }
};

export const EngineState: msRest.CompositeMapper = {
  serializedName: "EngineState",
  type: {
    name: "Composite",
    className: "EngineState",
    modelProperties: {
      timeMs: {
        required: true,
        serializedName: "timeMs",
        type: {
          name: "Number"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FleetVehicleLocation: msRest.CompositeMapper = {
  serializedName: "FleetVehicleLocation",
  type: {
    name: "Composite",
    className: "FleetVehicleLocation",
    modelProperties: {
      latitude: {
        serializedName: "latitude",
        type: {
          name: "Number"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      longitude: {
        serializedName: "longitude",
        type: {
          name: "Number"
        }
      },
      speedMilesPerHour: {
        serializedName: "speedMilesPerHour",
        type: {
          name: "Number"
        }
      },
      timeMs: {
        serializedName: "timeMs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const FleetVehicleResponseVehicleInfo: msRest.CompositeMapper = {
  serializedName: "FleetVehicleResponse_vehicleInfo",
  type: {
    name: "Composite",
    className: "FleetVehicleResponseVehicleInfo",
    modelProperties: {
      make: {
        serializedName: "make",
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      vin: {
        serializedName: "vin",
        type: {
          name: "String"
        }
      },
      year: {
        serializedName: "year",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const FleetVehicleResponse: msRest.CompositeMapper = {
  serializedName: "FleetVehicleResponse",
  type: {
    name: "Composite",
    className: "FleetVehicleResponse",
    modelProperties: {
      externalIds: {
        serializedName: "externalIds",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      harshAccelSetting: {
        serializedName: "harshAccelSetting",
        type: {
          name: "String"
        }
      },
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      vehicleInfo: {
        serializedName: "vehicleInfo",
        type: {
          name: "Composite",
          className: "FleetVehicleResponseVehicleInfo"
        }
      }
    }
  }
};

export const FleetVehiclesLocationsItem: msRest.CompositeMapper = {
  serializedName: "FleetVehiclesLocationsItem",
  type: {
    name: "Composite",
    className: "FleetVehiclesLocationsItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      locations: {
        serializedName: "locations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FleetVehicleLocation"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HosAuthenticationLogsResponseAuthenticationLogsItem: msRest.CompositeMapper = {
  serializedName: "HosAuthenticationLogsResponse_authenticationLogsItem",
  type: {
    name: "Composite",
    className: "HosAuthenticationLogsResponseAuthenticationLogsItem",
    modelProperties: {
      actionType: {
        serializedName: "actionType",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      addressName: {
        serializedName: "addressName",
        type: {
          name: "String"
        }
      },
      city: {
        serializedName: "city",
        type: {
          name: "String"
        }
      },
      happenedAtMs: {
        serializedName: "happenedAtMs",
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HosAuthenticationLogsResponse: msRest.CompositeMapper = {
  serializedName: "HosAuthenticationLogsResponse",
  type: {
    name: "Composite",
    className: "HosAuthenticationLogsResponse",
    modelProperties: {
      authenticationLogs: {
        serializedName: "authenticationLogs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HosAuthenticationLogsResponseAuthenticationLogsItem"
            }
          }
        }
      }
    }
  }
};

export const HosLogsResponseLogsItem: msRest.CompositeMapper = {
  serializedName: "HosLogsResponse_logsItem",
  type: {
    name: "Composite",
    className: "HosLogsResponseLogsItem",
    modelProperties: {
      codriverIds: {
        serializedName: "codriverIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      driverId: {
        serializedName: "driverId",
        type: {
          name: "Number"
        }
      },
      groupId: {
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      locCity: {
        serializedName: "locCity",
        type: {
          name: "String"
        }
      },
      locLat: {
        serializedName: "locLat",
        type: {
          name: "Number"
        }
      },
      locLng: {
        serializedName: "locLng",
        type: {
          name: "Number"
        }
      },
      locName: {
        serializedName: "locName",
        type: {
          name: "String"
        }
      },
      locState: {
        serializedName: "locState",
        type: {
          name: "String"
        }
      },
      logStartMs: {
        serializedName: "logStartMs",
        type: {
          name: "Number"
        }
      },
      remark: {
        serializedName: "remark",
        type: {
          name: "String"
        }
      },
      statusType: {
        serializedName: "statusType",
        type: {
          name: "String"
        }
      },
      vehicleId: {
        serializedName: "vehicleId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const HosLogsResponse: msRest.CompositeMapper = {
  serializedName: "HosLogsResponse",
  type: {
    name: "Composite",
    className: "HosLogsResponse",
    modelProperties: {
      logs: {
        serializedName: "logs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HosLogsResponseLogsItem"
            }
          }
        }
      }
    }
  }
};

export const HosLogsSummaryResponseDriversItem: msRest.CompositeMapper = {
  serializedName: "HosLogsSummaryResponse_driversItem",
  type: {
    name: "Composite",
    className: "HosLogsSummaryResponseDriversItem",
    modelProperties: {
      cycleRemaining: {
        serializedName: "cycleRemaining",
        type: {
          name: "Number"
        }
      },
      cycleTomorrow: {
        serializedName: "cycleTomorrow",
        type: {
          name: "Number"
        }
      },
      driverId: {
        serializedName: "driverId",
        type: {
          name: "Number"
        }
      },
      driverName: {
        serializedName: "driverName",
        type: {
          name: "String"
        }
      },
      drivingInViolationCycle: {
        serializedName: "drivingInViolationCycle",
        type: {
          name: "Number"
        }
      },
      drivingInViolationToday: {
        serializedName: "drivingInViolationToday",
        type: {
          name: "Number"
        }
      },
      dutyStatus: {
        serializedName: "dutyStatus",
        type: {
          name: "String"
        }
      },
      shiftDriveRemaining: {
        serializedName: "shiftDriveRemaining",
        type: {
          name: "Number"
        }
      },
      shiftRemaining: {
        serializedName: "shiftRemaining",
        type: {
          name: "Number"
        }
      },
      timeInCurrentStatus: {
        serializedName: "timeInCurrentStatus",
        type: {
          name: "Number"
        }
      },
      timeUntilBreak: {
        serializedName: "timeUntilBreak",
        type: {
          name: "Number"
        }
      },
      vehicleName: {
        serializedName: "vehicleName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HosLogsSummaryResponse: msRest.CompositeMapper = {
  serializedName: "HosLogsSummaryResponse",
  type: {
    name: "Composite",
    className: "HosLogsSummaryResponse",
    modelProperties: {
      drivers: {
        serializedName: "drivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HosLogsSummaryResponseDriversItem"
            }
          }
        }
      }
    }
  }
};

export const HumidityResponseSensorsItem: msRest.CompositeMapper = {
  serializedName: "HumidityResponse_sensorsItem",
  type: {
    name: "Composite",
    className: "HumidityResponseSensorsItem",
    modelProperties: {
      humidity: {
        serializedName: "humidity",
        type: {
          name: "Number"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HumidityResponse: msRest.CompositeMapper = {
  serializedName: "HumidityResponse",
  type: {
    name: "Composite",
    className: "HumidityResponse",
    modelProperties: {
      groupId: {
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      sensors: {
        serializedName: "sensors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HumidityResponseSensorsItem"
            }
          }
        }
      }
    }
  }
};

export const Machine: msRest.CompositeMapper = {
  serializedName: "Machine",
  type: {
    name: "Composite",
    className: "Machine",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      notes: {
        serializedName: "notes",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MachineHistoryResponseMachinesItemVibrationsItem: msRest.CompositeMapper = {
  serializedName: "MachineHistoryResponse_machinesItem_vibrationsItem",
  type: {
    name: "Composite",
    className: "MachineHistoryResponseMachinesItemVibrationsItem",
    modelProperties: {
      x: {
        serializedName: "X",
        type: {
          name: "Number"
        }
      },
      y: {
        serializedName: "Y",
        type: {
          name: "Number"
        }
      },
      z: {
        serializedName: "Z",
        type: {
          name: "Number"
        }
      },
      time: {
        serializedName: "time",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const MachineHistoryResponseMachinesItem: msRest.CompositeMapper = {
  serializedName: "MachineHistoryResponse_machinesItem",
  type: {
    name: "Composite",
    className: "MachineHistoryResponseMachinesItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      vibrations: {
        serializedName: "vibrations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MachineHistoryResponseMachinesItemVibrationsItem"
            }
          }
        }
      }
    }
  }
};

export const MachineHistoryResponse: msRest.CompositeMapper = {
  serializedName: "MachineHistoryResponse",
  type: {
    name: "Composite",
    className: "MachineHistoryResponse",
    modelProperties: {
      machines: {
        serializedName: "machines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MachineHistoryResponseMachinesItem"
            }
          }
        }
      }
    }
  }
};

export const Pagination: msRest.CompositeMapper = {
  serializedName: "Pagination",
  type: {
    name: "Composite",
    className: "Pagination",
    modelProperties: {
      endCursor: {
        required: true,
        serializedName: "endCursor",
        type: {
          name: "String"
        }
      },
      hasNextPage: {
        required: true,
        serializedName: "hasNextPage",
        type: {
          name: "Boolean"
        }
      },
      hasPrevPage: {
        required: true,
        serializedName: "hasPrevPage",
        type: {
          name: "Boolean"
        }
      },
      startCursor: {
        required: true,
        serializedName: "startCursor",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sensor: msRest.CompositeMapper = {
  serializedName: "Sensor",
  type: {
    name: "Composite",
    className: "Sensor",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      macAddress: {
        serializedName: "macAddress",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SensorHistoryResponseResultsItem: msRest.CompositeMapper = {
  serializedName: "SensorHistoryResponse_resultsItem",
  type: {
    name: "Composite",
    className: "SensorHistoryResponseResultsItem",
    modelProperties: {
      series: {
        serializedName: "series",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      timeMs: {
        serializedName: "timeMs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SensorHistoryResponse: msRest.CompositeMapper = {
  serializedName: "SensorHistoryResponse",
  type: {
    name: "Composite",
    className: "SensorHistoryResponse",
    modelProperties: {
      results: {
        serializedName: "results",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SensorHistoryResponseResultsItem"
            }
          }
        }
      }
    }
  }
};

export const TaggedAddressBase: msRest.CompositeMapper = {
  serializedName: "TaggedAddressBase",
  type: {
    name: "Composite",
    className: "TaggedAddressBase",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TaggedAddress: msRest.CompositeMapper = {
  serializedName: "TaggedAddress",
  type: {
    name: "Composite",
    className: "TaggedAddress",
    modelProperties: {
      ...TaggedAddressBase.type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TaggedAssetBase: msRest.CompositeMapper = {
  serializedName: "TaggedAssetBase",
  type: {
    name: "Composite",
    className: "TaggedAssetBase",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TaggedAsset: msRest.CompositeMapper = {
  serializedName: "TaggedAsset",
  type: {
    name: "Composite",
    className: "TaggedAsset",
    modelProperties: {
      ...TaggedAssetBase.type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TaggedDriverBase: msRest.CompositeMapper = {
  serializedName: "TaggedDriverBase",
  type: {
    name: "Composite",
    className: "TaggedDriverBase",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TaggedDriver: msRest.CompositeMapper = {
  serializedName: "TaggedDriver",
  type: {
    name: "Composite",
    className: "TaggedDriver",
    modelProperties: {
      ...TaggedDriverBase.type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TaggedMachineBase: msRest.CompositeMapper = {
  serializedName: "TaggedMachineBase",
  type: {
    name: "Composite",
    className: "TaggedMachineBase",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TaggedMachine: msRest.CompositeMapper = {
  serializedName: "TaggedMachine",
  type: {
    name: "Composite",
    className: "TaggedMachine",
    modelProperties: {
      ...TaggedMachineBase.type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TaggedSensorBase: msRest.CompositeMapper = {
  serializedName: "TaggedSensorBase",
  type: {
    name: "Composite",
    className: "TaggedSensorBase",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TaggedSensor: msRest.CompositeMapper = {
  serializedName: "TaggedSensor",
  type: {
    name: "Composite",
    className: "TaggedSensor",
    modelProperties: {
      ...TaggedSensorBase.type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TaggedVehicleBase: msRest.CompositeMapper = {
  serializedName: "TaggedVehicleBase",
  type: {
    name: "Composite",
    className: "TaggedVehicleBase",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TaggedVehicle: msRest.CompositeMapper = {
  serializedName: "TaggedVehicle",
  type: {
    name: "Composite",
    className: "TaggedVehicle",
    modelProperties: {
      ...TaggedVehicleBase.type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Tag: msRest.CompositeMapper = {
  serializedName: "Tag",
  type: {
    name: "Composite",
    className: "Tag",
    modelProperties: {
      addresses: {
        serializedName: "addresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedAddress"
            }
          }
        }
      },
      assets: {
        serializedName: "assets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedAsset"
            }
          }
        }
      },
      drivers: {
        serializedName: "drivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedDriver"
            }
          }
        }
      },
      groupId: {
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      machines: {
        serializedName: "machines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedMachine"
            }
          }
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      parentTagId: {
        serializedName: "parentTagId",
        type: {
          name: "Number"
        }
      },
      sensors: {
        serializedName: "sensors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedSensor"
            }
          }
        }
      },
      vehicles: {
        serializedName: "vehicles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedVehicle"
            }
          }
        }
      }
    }
  }
};

export const TagCreate: msRest.CompositeMapper = {
  serializedName: "TagCreate",
  type: {
    name: "Composite",
    className: "TagCreate",
    modelProperties: {
      assets: {
        serializedName: "assets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedAssetBase"
            }
          }
        }
      },
      drivers: {
        serializedName: "drivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedDriverBase"
            }
          }
        }
      },
      machines: {
        serializedName: "machines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedMachineBase"
            }
          }
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      parentTagId: {
        serializedName: "parentTagId",
        type: {
          name: "Number"
        }
      },
      sensors: {
        serializedName: "sensors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedSensorBase"
            }
          }
        }
      },
      vehicles: {
        serializedName: "vehicles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedVehicleBase"
            }
          }
        }
      }
    }
  }
};

export const TagModifyAdd: msRest.CompositeMapper = {
  serializedName: "TagModify_add",
  type: {
    name: "Composite",
    className: "TagModifyAdd",
    modelProperties: {
      assets: {
        serializedName: "assets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedAssetBase"
            }
          }
        }
      },
      drivers: {
        serializedName: "drivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedDriverBase"
            }
          }
        }
      },
      machines: {
        serializedName: "machines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedMachineBase"
            }
          }
        }
      },
      sensors: {
        serializedName: "sensors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedSensorBase"
            }
          }
        }
      },
      vehicles: {
        serializedName: "vehicles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedVehicleBase"
            }
          }
        }
      }
    }
  }
};

export const TagModifyDelete: msRest.CompositeMapper = {
  serializedName: "TagModify_delete",
  type: {
    name: "Composite",
    className: "TagModifyDelete",
    modelProperties: {
      assets: {
        serializedName: "assets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedAssetBase"
            }
          }
        }
      },
      drivers: {
        serializedName: "drivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedDriverBase"
            }
          }
        }
      },
      machines: {
        serializedName: "machines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedMachineBase"
            }
          }
        }
      },
      sensors: {
        serializedName: "sensors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedSensorBase"
            }
          }
        }
      },
      vehicles: {
        serializedName: "vehicles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedVehicleBase"
            }
          }
        }
      }
    }
  }
};

export const TagModify: msRest.CompositeMapper = {
  serializedName: "TagModify",
  type: {
    name: "Composite",
    className: "TagModify",
    modelProperties: {
      add: {
        serializedName: "add",
        type: {
          name: "Composite",
          className: "TagModifyAdd"
        }
      },
      deleteProperty: {
        serializedName: "delete",
        type: {
          name: "Composite",
          className: "TagModifyDelete"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      parentTagId: {
        serializedName: "parentTagId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TagUpdate: msRest.CompositeMapper = {
  serializedName: "TagUpdate",
  type: {
    name: "Composite",
    className: "TagUpdate",
    modelProperties: {
      assets: {
        serializedName: "assets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedAssetBase"
            }
          }
        }
      },
      drivers: {
        serializedName: "drivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedDriverBase"
            }
          }
        }
      },
      machines: {
        serializedName: "machines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedMachineBase"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      parentTagId: {
        serializedName: "parentTagId",
        type: {
          name: "Number"
        }
      },
      sensors: {
        serializedName: "sensors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedSensorBase"
            }
          }
        }
      },
      vehicles: {
        serializedName: "vehicles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaggedVehicleBase"
            }
          }
        }
      }
    }
  }
};

export const TemperatureResponseSensorsItem: msRest.CompositeMapper = {
  serializedName: "TemperatureResponse_sensorsItem",
  type: {
    name: "Composite",
    className: "TemperatureResponseSensorsItem",
    modelProperties: {
      ambientTemperature: {
        serializedName: "ambientTemperature",
        type: {
          name: "Number"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      probeTemperature: {
        serializedName: "probeTemperature",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TemperatureResponse: msRest.CompositeMapper = {
  serializedName: "TemperatureResponse",
  type: {
    name: "Composite",
    className: "TemperatureResponse",
    modelProperties: {
      groupId: {
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      sensors: {
        serializedName: "sensors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TemperatureResponseSensorsItem"
            }
          }
        }
      }
    }
  }
};

export const TripResponseTripsItemEndCoordinates: msRest.CompositeMapper = {
  serializedName: "TripResponse_tripsItem_endCoordinates",
  type: {
    name: "Composite",
    className: "TripResponseTripsItemEndCoordinates",
    modelProperties: {
      latitude: {
        serializedName: "latitude",
        type: {
          name: "Number"
        }
      },
      longitude: {
        serializedName: "longitude",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TripResponseTripsItemStartCoordinates: msRest.CompositeMapper = {
  serializedName: "TripResponse_tripsItem_startCoordinates",
  type: {
    name: "Composite",
    className: "TripResponseTripsItemStartCoordinates",
    modelProperties: {
      latitude: {
        serializedName: "latitude",
        type: {
          name: "Number"
        }
      },
      longitude: {
        serializedName: "longitude",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TripResponseTripsItem: msRest.CompositeMapper = {
  serializedName: "TripResponse_tripsItem",
  type: {
    name: "Composite",
    className: "TripResponseTripsItem",
    modelProperties: {
      distanceMeters: {
        serializedName: "distanceMeters",
        type: {
          name: "Number"
        }
      },
      driverId: {
        serializedName: "driverId",
        type: {
          name: "Number"
        }
      },
      endAddress: {
        serializedName: "endAddress",
        type: {
          name: "String"
        }
      },
      endCoordinates: {
        serializedName: "endCoordinates",
        type: {
          name: "Composite",
          className: "TripResponseTripsItemEndCoordinates"
        }
      },
      endLocation: {
        serializedName: "endLocation",
        type: {
          name: "String"
        }
      },
      endMs: {
        serializedName: "endMs",
        type: {
          name: "Number"
        }
      },
      endOdometer: {
        serializedName: "endOdometer",
        type: {
          name: "Number"
        }
      },
      fuelConsumedMl: {
        serializedName: "fuelConsumedMl",
        type: {
          name: "Number"
        }
      },
      startAddress: {
        serializedName: "startAddress",
        type: {
          name: "String"
        }
      },
      startCoordinates: {
        serializedName: "startCoordinates",
        type: {
          name: "Composite",
          className: "TripResponseTripsItemStartCoordinates"
        }
      },
      startLocation: {
        serializedName: "startLocation",
        type: {
          name: "String"
        }
      },
      startMs: {
        serializedName: "startMs",
        type: {
          name: "Number"
        }
      },
      startOdometer: {
        serializedName: "startOdometer",
        type: {
          name: "Number"
        }
      },
      tollMeters: {
        serializedName: "tollMeters",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TripResponse: msRest.CompositeMapper = {
  serializedName: "TripResponse",
  type: {
    name: "Composite",
    className: "TripResponse",
    modelProperties: {
      trips: {
        serializedName: "trips",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TripResponseTripsItem"
            }
          }
        }
      }
    }
  }
};

export const UserTagRoleTag: msRest.CompositeMapper = {
  serializedName: "UserTagRole_tag",
  type: {
    name: "Composite",
    className: "UserTagRoleTag",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      parentTagId: {
        serializedName: "parentTagId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const UserTagRole: msRest.CompositeMapper = {
  serializedName: "UserTagRole",
  type: {
    name: "Composite",
    className: "UserTagRole",
    modelProperties: {
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      },
      roleId: {
        required: true,
        serializedName: "roleId",
        type: {
          name: "String"
        }
      },
      tag: {
        required: true,
        serializedName: "tag",
        type: {
          name: "Composite",
          className: "UserTagRoleTag"
        }
      }
    }
  }
};

export const UserBase: msRest.CompositeMapper = {
  serializedName: "UserBase",
  type: {
    name: "Composite",
    className: "UserBase",
    modelProperties: {
      authType: {
        required: true,
        serializedName: "authType",
        type: {
          name: "String"
        }
      },
      email: {
        required: true,
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      organizationRoleId: {
        serializedName: "organizationRoleId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const User: msRest.CompositeMapper = {
  serializedName: "User",
  type: {
    name: "Composite",
    className: "User",
    modelProperties: {
      ...UserBase.type.modelProperties,
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      organizationRole: {
        serializedName: "organizationRole",
        type: {
          name: "String"
        }
      },
      tagRoles: {
        serializedName: "tagRoles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UserTagRole"
            }
          }
        }
      }
    }
  }
};

export const UserRole: msRest.CompositeMapper = {
  serializedName: "UserRole",
  type: {
    name: "Composite",
    className: "UserRole",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Vehicle: msRest.CompositeMapper = {
  serializedName: "Vehicle",
  type: {
    name: "Composite",
    className: "Vehicle",
    modelProperties: {
      engineHours: {
        serializedName: "engineHours",
        type: {
          name: "Number"
        }
      },
      fuelLevelPercent: {
        serializedName: "fuelLevelPercent",
        type: {
          name: "Number"
        }
      },
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      note: {
        serializedName: "note",
        type: {
          name: "String"
        }
      },
      odometerMeters: {
        serializedName: "odometerMeters",
        type: {
          name: "Number"
        }
      },
      vin: {
        serializedName: "vin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VehicleHarshEventResponseLocation: msRest.CompositeMapper = {
  serializedName: "VehicleHarshEventResponse_location",
  type: {
    name: "Composite",
    className: "VehicleHarshEventResponseLocation",
    modelProperties: {
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      latitude: {
        serializedName: "latitude",
        type: {
          name: "String"
        }
      },
      longitude: {
        serializedName: "longitude",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VehicleHarshEventResponse: msRest.CompositeMapper = {
  serializedName: "VehicleHarshEventResponse",
  type: {
    name: "Composite",
    className: "VehicleHarshEventResponse",
    modelProperties: {
      downloadForwardVideoUrl: {
        serializedName: "downloadForwardVideoUrl",
        type: {
          name: "String"
        }
      },
      downloadInwardVideoUrl: {
        serializedName: "downloadInwardVideoUrl",
        type: {
          name: "String"
        }
      },
      downloadTrackedInwardVideoUrl: {
        serializedName: "downloadTrackedInwardVideoUrl",
        type: {
          name: "String"
        }
      },
      harshEventType: {
        required: true,
        serializedName: "harshEventType",
        type: {
          name: "String"
        }
      },
      incidentReportUrl: {
        required: true,
        serializedName: "incidentReportUrl",
        type: {
          name: "String"
        }
      },
      isDistracted: {
        serializedName: "isDistracted",
        type: {
          name: "Boolean"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "Composite",
          className: "VehicleHarshEventResponseLocation"
        }
      }
    }
  }
};

export const VehicleLocation: msRest.CompositeMapper = {
  serializedName: "VehicleLocation",
  type: {
    name: "Composite",
    className: "VehicleLocation",
    modelProperties: {
      heading: {
        serializedName: "heading",
        type: {
          name: "Number"
        }
      },
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      latitude: {
        serializedName: "latitude",
        type: {
          name: "Number"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      longitude: {
        serializedName: "longitude",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      odometerMeters: {
        serializedName: "odometerMeters",
        type: {
          name: "Number"
        }
      },
      onTrip: {
        serializedName: "onTrip",
        type: {
          name: "Boolean"
        }
      },
      speed: {
        serializedName: "speed",
        type: {
          name: "Number"
        }
      },
      time: {
        serializedName: "time",
        type: {
          name: "Number"
        }
      },
      vin: {
        serializedName: "vin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VehicleMaintenanceJ1939CheckEngineLight: msRest.CompositeMapper = {
  serializedName: "VehicleMaintenance_j1939_checkEngineLight",
  type: {
    name: "Composite",
    className: "VehicleMaintenanceJ1939CheckEngineLight",
    modelProperties: {
      emissionsIsOn: {
        serializedName: "emissionsIsOn",
        type: {
          name: "Boolean"
        }
      },
      protectIsOn: {
        serializedName: "protectIsOn",
        type: {
          name: "Boolean"
        }
      },
      stopIsOn: {
        serializedName: "stopIsOn",
        type: {
          name: "Boolean"
        }
      },
      warningIsOn: {
        serializedName: "warningIsOn",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VehicleMaintenanceJ1939DiagnosticTroubleCodesItem: msRest.CompositeMapper = {
  serializedName: "VehicleMaintenance_j1939_diagnosticTroubleCodesItem",
  type: {
    name: "Composite",
    className: "VehicleMaintenanceJ1939DiagnosticTroubleCodesItem",
    modelProperties: {
      fmiId: {
        serializedName: "fmiId",
        type: {
          name: "Number"
        }
      },
      fmiText: {
        serializedName: "fmiText",
        type: {
          name: "String"
        }
      },
      occurrenceCount: {
        serializedName: "occurrenceCount",
        type: {
          name: "Number"
        }
      },
      spnDescription: {
        serializedName: "spnDescription",
        type: {
          name: "String"
        }
      },
      spnId: {
        serializedName: "spnId",
        type: {
          name: "Number"
        }
      },
      txId: {
        serializedName: "txId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VehicleMaintenanceJ1939: msRest.CompositeMapper = {
  serializedName: "VehicleMaintenance_j1939",
  type: {
    name: "Composite",
    className: "VehicleMaintenanceJ1939",
    modelProperties: {
      checkEngineLight: {
        serializedName: "checkEngineLight",
        type: {
          name: "Composite",
          className: "VehicleMaintenanceJ1939CheckEngineLight"
        }
      },
      diagnosticTroubleCodes: {
        serializedName: "diagnosticTroubleCodes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VehicleMaintenanceJ1939DiagnosticTroubleCodesItem"
            }
          }
        }
      }
    }
  }
};

export const VehicleMaintenancePassengerCheckEngineLight: msRest.CompositeMapper = {
  serializedName: "VehicleMaintenance_passenger_checkEngineLight",
  type: {
    name: "Composite",
    className: "VehicleMaintenancePassengerCheckEngineLight",
    modelProperties: {
      isOn: {
        serializedName: "isOn",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VehicleMaintenancePassengerDiagnosticTroubleCodesItem: msRest.CompositeMapper = {
  serializedName: "VehicleMaintenance_passenger_diagnosticTroubleCodesItem",
  type: {
    name: "Composite",
    className: "VehicleMaintenancePassengerDiagnosticTroubleCodesItem",
    modelProperties: {
      dtcDescription: {
        serializedName: "dtcDescription",
        type: {
          name: "String"
        }
      },
      dtcId: {
        serializedName: "dtcId",
        type: {
          name: "Number"
        }
      },
      dtcShortCode: {
        serializedName: "dtcShortCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VehicleMaintenancePassenger: msRest.CompositeMapper = {
  serializedName: "VehicleMaintenance_passenger",
  type: {
    name: "Composite",
    className: "VehicleMaintenancePassenger",
    modelProperties: {
      checkEngineLight: {
        serializedName: "checkEngineLight",
        type: {
          name: "Composite",
          className: "VehicleMaintenancePassengerCheckEngineLight"
        }
      },
      diagnosticTroubleCodes: {
        serializedName: "diagnosticTroubleCodes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VehicleMaintenancePassengerDiagnosticTroubleCodesItem"
            }
          }
        }
      }
    }
  }
};

export const VehicleMaintenance: msRest.CompositeMapper = {
  serializedName: "VehicleMaintenance",
  type: {
    name: "Composite",
    className: "VehicleMaintenance",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      j1939: {
        serializedName: "j1939",
        type: {
          name: "Composite",
          className: "VehicleMaintenanceJ1939"
        }
      },
      passenger: {
        serializedName: "passenger",
        type: {
          name: "Composite",
          className: "VehicleMaintenancePassenger"
        }
      }
    }
  }
};

export const VehicleSafetyScoreResponse: msRest.CompositeMapper = {
  serializedName: "VehicleSafetyScoreResponse",
  type: {
    name: "Composite",
    className: "VehicleSafetyScoreResponse",
    modelProperties: {
      crashCount: {
        serializedName: "crashCount",
        type: {
          name: "Number"
        }
      },
      harshAccelCount: {
        serializedName: "harshAccelCount",
        type: {
          name: "Number"
        }
      },
      harshBrakingCount: {
        serializedName: "harshBrakingCount",
        type: {
          name: "Number"
        }
      },
      harshEvents: {
        serializedName: "harshEvents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SafetyReportHarshEvent"
            }
          }
        }
      },
      harshTurningCount: {
        serializedName: "harshTurningCount",
        type: {
          name: "Number"
        }
      },
      safetyScore: {
        serializedName: "safetyScore",
        type: {
          name: "Number"
        }
      },
      safetyScoreRank: {
        serializedName: "safetyScoreRank",
        type: {
          name: "String"
        }
      },
      timeOverSpeedLimitMs: {
        serializedName: "timeOverSpeedLimitMs",
        type: {
          name: "Number"
        }
      },
      totalDistanceDrivenMeters: {
        serializedName: "totalDistanceDrivenMeters",
        type: {
          name: "Number"
        }
      },
      totalHarshEventCount: {
        serializedName: "totalHarshEventCount",
        type: {
          name: "Number"
        }
      },
      totalTimeDrivenMs: {
        serializedName: "totalTimeDrivenMs",
        type: {
          name: "Number"
        }
      },
      vehicleId: {
        serializedName: "vehicleId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const JobUpdateObject: msRest.CompositeMapper = {
  serializedName: "jobUpdateObject",
  type: {
    name: "Composite",
    className: "JobUpdateObject",
    modelProperties: {
      changedAtMs: {
        serializedName: "changed_at_ms",
        type: {
          name: "Number"
        }
      },
      jobId: {
        serializedName: "job_id",
        type: {
          name: "Number"
        }
      },
      jobState: {
        serializedName: "job_state",
        type: {
          name: "String"
        }
      },
      prevJobState: {
        serializedName: "prev_job_state",
        type: {
          name: "String"
        }
      },
      route: {
        serializedName: "route",
        type: {
          name: "Composite",
          className: "DispatchRoute"
        }
      },
      routeId: {
        serializedName: "route_id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AllRouteJobUpdates: msRest.CompositeMapper = {
  serializedName: "allRouteJobUpdates",
  type: {
    name: "Composite",
    className: "AllRouteJobUpdates",
    modelProperties: {
      jobUpdates: {
        serializedName: "job_updates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobUpdateObject"
            }
          }
        }
      },
      sequenceId: {
        serializedName: "sequence_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddressesAddressesItem: msRest.CompositeMapper = {
  serializedName: "addresses_addressesItem",
  type: {
    name: "Composite",
    className: "AddressesAddressesItem",
    modelProperties: {
      contactIds: {
        serializedName: "contactIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      formattedAddress: {
        required: true,
        serializedName: "formattedAddress",
        type: {
          name: "String"
        }
      },
      geofence: {
        required: true,
        serializedName: "geofence",
        type: {
          name: "Composite",
          className: "AddressGeofence"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      notes: {
        serializedName: "notes",
        type: {
          name: "String"
        }
      },
      tagIds: {
        serializedName: "tagIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const Addresses: msRest.CompositeMapper = {
  serializedName: "addresses",
  type: {
    name: "Composite",
    className: "Addresses",
    modelProperties: {
      addresses: {
        required: true,
        serializedName: "addresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AddressesAddressesItem"
            }
          }
        }
      }
    }
  }
};

export const AddressModel: msRest.CompositeMapper = {
  serializedName: "address",
  type: {
    name: "Composite",
    className: "AddressModel",
    modelProperties: {
      contactIds: {
        serializedName: "contactIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      formattedAddress: {
        serializedName: "formattedAddress",
        type: {
          name: "String"
        }
      },
      geofence: {
        serializedName: "geofence",
        type: {
          name: "Composite",
          className: "AddressGeofence"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      notes: {
        serializedName: "notes",
        type: {
          name: "String"
        }
      },
      tagIds: {
        serializedName: "tagIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const AddressParam: msRest.CompositeMapper = {
  serializedName: "addressParam",
  type: {
    name: "Composite",
    className: "AddressParam",
    modelProperties: {
      address: {
        required: true,
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      groupId: {
        required: true,
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      radius: {
        required: true,
        serializedName: "radius",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GetAllAssetsOKResponse: msRest.CompositeMapper = {
  serializedName: "GetAllAssetsOKResponse",
  type: {
    name: "Composite",
    className: "GetAllAssetsOKResponse",
    modelProperties: {
      assets: {
        serializedName: "assets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Asset"
            }
          }
        }
      }
    }
  }
};

export const GetAllAssetCurrentLocationsOKResponse: msRest.CompositeMapper = {
  serializedName: "GetAllAssetCurrentLocationsOKResponse",
  type: {
    name: "Composite",
    className: "GetAllAssetCurrentLocationsOKResponse",
    modelProperties: {
      assets: {
        serializedName: "assets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssetCurrentLocationsResponse"
            }
          }
        }
      }
    }
  }
};

export const GroupDriversParam: msRest.CompositeMapper = {
  serializedName: "groupDriversParam",
  type: {
    name: "Composite",
    className: "GroupDriversParam",
    modelProperties: {
      groupId: {
        required: true,
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ReactivateDriverParam: msRest.CompositeMapper = {
  serializedName: "reactivateDriverParam",
  type: {
    name: "Composite",
    className: "ReactivateDriverParam",
    modelProperties: {
      reactivate: {
        required: true,
        serializedName: "reactivate",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DriversSummaryParam: msRest.CompositeMapper = {
  serializedName: "driversSummaryParam",
  type: {
    name: "Composite",
    className: "DriversSummaryParam",
    modelProperties: {
      endMs: {
        required: true,
        serializedName: "endMs",
        type: {
          name: "Number"
        }
      },
      orgId: {
        required: true,
        serializedName: "orgId",
        type: {
          name: "Number"
        }
      },
      startMs: {
        required: true,
        serializedName: "startMs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Body: msRest.CompositeMapper = {
  serializedName: "body",
  type: {
    name: "Composite",
    className: "Body",
    modelProperties: {
      driverId: {
        required: true,
        serializedName: "driverId",
        type: {
          name: "Number"
        }
      },
      endMs: {
        required: true,
        serializedName: "endMs",
        type: {
          name: "Number"
        }
      },
      groupId: {
        required: true,
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      startMs: {
        required: true,
        serializedName: "startMs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const HosAuthenticationLogsParam: msRest.CompositeMapper = {
  serializedName: "hosAuthenticationLogsParam",
  type: {
    name: "Composite",
    className: "HosAuthenticationLogsParam",
    modelProperties: {
      driverId: {
        required: true,
        serializedName: "driverId",
        type: {
          name: "Number"
        }
      },
      endMs: {
        required: true,
        serializedName: "endMs",
        type: {
          name: "Number"
        }
      },
      groupId: {
        required: true,
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      startMs: {
        required: true,
        serializedName: "startMs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const HosLogsParam: msRest.CompositeMapper = {
  serializedName: "hosLogsParam",
  type: {
    name: "Composite",
    className: "HosLogsParam",
    modelProperties: {
      groupId: {
        required: true,
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const BodyModel: msRest.CompositeMapper = {
  serializedName: "body",
  type: {
    name: "Composite",
    className: "BodyModel",
    modelProperties: {
      groupId: {
        required: true,
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const FleetOKResponse: msRest.CompositeMapper = {
  serializedName: "FleetOKResponse",
  type: {
    name: "Composite",
    className: "FleetOKResponse",
    modelProperties: {
      groupId: {
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      pagination: {
        serializedName: "pagination",
        type: {
          name: "Composite",
          className: "Pagination"
        }
      },
      vehicles: {
        serializedName: "vehicles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Vehicle"
            }
          }
        }
      }
    }
  }
};

export const LocationsOKResponse: msRest.CompositeMapper = {
  serializedName: "LocationsOKResponse",
  type: {
    name: "Composite",
    className: "LocationsOKResponse",
    modelProperties: {
      groupId: {
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      vehicles: {
        serializedName: "vehicles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VehicleLocation"
            }
          }
        }
      }
    }
  }
};

export const CreateDvirParam: msRest.CompositeMapper = {
  serializedName: "createDvirParam",
  type: {
    name: "Composite",
    className: "CreateDvirParam",
    modelProperties: {
      inspectionType: {
        required: true,
        isConstant: true,
        serializedName: "inspectionType",
        defaultValue: 'mechanic',
        type: {
          name: "String"
        }
      },
      mechanicNotes: {
        serializedName: "mechanicNotes",
        type: {
          name: "String"
        }
      },
      odometerMiles: {
        serializedName: "odometerMiles",
        type: {
          name: "Number"
        }
      },
      previousDefectsCorrected: {
        serializedName: "previousDefectsCorrected",
        type: {
          name: "Boolean"
        }
      },
      previousDefectsIgnored: {
        serializedName: "previousDefectsIgnored",
        type: {
          name: "Boolean"
        }
      },
      safe: {
        required: true,
        serializedName: "safe",
        type: {
          name: "String"
        }
      },
      trailerId: {
        serializedName: "trailerId",
        type: {
          name: "Number"
        }
      },
      userEmail: {
        required: true,
        serializedName: "userEmail",
        type: {
          name: "String"
        }
      },
      vehicleId: {
        serializedName: "vehicleId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ListOKResponse: msRest.CompositeMapper = {
  serializedName: "ListOKResponse",
  type: {
    name: "Composite",
    className: "ListOKResponse",
    modelProperties: {
      vehicles: {
        serializedName: "vehicles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VehicleMaintenance"
            }
          }
        }
      }
    }
  }
};

export const VehicleUpdateParam: msRest.CompositeMapper = {
  serializedName: "vehicleUpdateParam",
  type: {
    name: "Composite",
    className: "VehicleUpdateParam",
    modelProperties: {
      groupId: {
        required: true,
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      vehicles: {
        required: true,
        serializedName: "vehicles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Vehicle"
            }
          }
        }
      }
    }
  }
};

export const TripsParam: msRest.CompositeMapper = {
  serializedName: "tripsParam",
  type: {
    name: "Composite",
    className: "TripsParam",
    modelProperties: {
      endMs: {
        required: true,
        serializedName: "endMs",
        type: {
          name: "Number"
        }
      },
      groupId: {
        required: true,
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      startMs: {
        required: true,
        serializedName: "startMs",
        type: {
          name: "Number"
        }
      },
      vehicleId: {
        required: true,
        serializedName: "vehicleId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GetVehicleStatsOKResponseVehicleStatsItem: msRest.CompositeMapper = {
  serializedName: "GetVehicleStatsOKResponse_vehicleStatsItem",
  type: {
    name: "Composite",
    className: "GetVehicleStatsOKResponseVehicleStatsItem",
    modelProperties: {
      auxInput1: {
        serializedName: "auxInput1",
        type: {
          name: "Composite",
          className: "AuxInputSeries"
        }
      },
      auxInput2: {
        serializedName: "auxInput2",
        type: {
          name: "Composite",
          className: "AuxInputSeries"
        }
      },
      engineState: {
        serializedName: "engineState",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EngineState"
            }
          }
        }
      },
      vehicleId: {
        required: true,
        serializedName: "vehicleId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GetVehicleStatsOKResponse: msRest.CompositeMapper = {
  serializedName: "GetVehicleStatsOKResponse",
  type: {
    name: "Composite",
    className: "GetVehicleStatsOKResponse",
    modelProperties: {
      pagination: {
        serializedName: "pagination",
        type: {
          name: "Composite",
          className: "Pagination"
        }
      },
      vehicleStats: {
        required: true,
        serializedName: "vehicleStats",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GetVehicleStatsOKResponseVehicleStatsItem"
            }
          }
        }
      }
    }
  }
};

export const Data: msRest.CompositeMapper = {
  serializedName: "data",
  type: {
    name: "Composite",
    className: "Data",
    modelProperties: {
      externalIds: {
        serializedName: "externalIds",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      harshAccelSetting: {
        serializedName: "harsh_accel_setting",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetAllDataInputsOKResponse: msRest.CompositeMapper = {
  serializedName: "GetAllDataInputsOKResponse",
  type: {
    name: "Composite",
    className: "GetAllDataInputsOKResponse",
    modelProperties: {
      dataInputs: {
        serializedName: "dataInputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataInputHistoryResponse"
            }
          }
        }
      }
    }
  }
};

export const HistoryParam: msRest.CompositeMapper = {
  serializedName: "historyParam",
  type: {
    name: "Composite",
    className: "HistoryParam",
    modelProperties: {
      endMs: {
        required: true,
        serializedName: "endMs",
        type: {
          name: "Number"
        }
      },
      groupId: {
        required: true,
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      startMs: {
        required: true,
        serializedName: "startMs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const MachinesOKResponse: msRest.CompositeMapper = {
  serializedName: "MachinesOKResponse",
  type: {
    name: "Composite",
    className: "MachinesOKResponse",
    modelProperties: {
      machines: {
        serializedName: "machines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Machine"
            }
          }
        }
      }
    }
  }
};

export const BodyModelModel: msRest.CompositeMapper = {
  serializedName: "body",
  type: {
    name: "Composite",
    className: "BodyModelModel",
    modelProperties: {
      groupId: {
        required: true,
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      sensors: {
        required: true,
        serializedName: "sensors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const HistoryParamSeriesItem: msRest.CompositeMapper = {
  serializedName: "historyParam_seriesItem",
  type: {
    name: "Composite",
    className: "HistoryParamSeriesItem",
    modelProperties: {
      field: {
        required: true,
        serializedName: "field",
        type: {
          name: "String"
        }
      },
      widgetId: {
        required: true,
        serializedName: "widgetId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const HistoryParamModel: msRest.CompositeMapper = {
  serializedName: "historyParam",
  type: {
    name: "Composite",
    className: "HistoryParamModel",
    modelProperties: {
      endMs: {
        required: true,
        serializedName: "endMs",
        type: {
          name: "Number"
        }
      },
      fillMissing: {
        serializedName: "fillMissing",
        defaultValue: 'withNull',
        type: {
          name: "String"
        }
      },
      groupId: {
        required: true,
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      series: {
        required: true,
        serializedName: "series",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HistoryParamSeriesItem"
            }
          }
        }
      },
      startMs: {
        required: true,
        serializedName: "startMs",
        type: {
          name: "Number"
        }
      },
      stepMs: {
        required: true,
        serializedName: "stepMs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SensorsOKResponse: msRest.CompositeMapper = {
  serializedName: "SensorsOKResponse",
  type: {
    name: "Composite",
    className: "SensorsOKResponse",
    modelProperties: {
      sensors: {
        serializedName: "sensors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Sensor"
            }
          }
        }
      }
    }
  }
};

export const GetAllTagsOKResponse: msRest.CompositeMapper = {
  serializedName: "GetAllTagsOKResponse",
  type: {
    name: "Composite",
    className: "GetAllTagsOKResponse",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Tag"
            }
          }
        }
      }
    }
  }
};

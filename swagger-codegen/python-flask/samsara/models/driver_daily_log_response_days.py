# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from samsara.models.base_model_ import Model
from samsara import util


class DriverDailyLogResponseDays(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, active_hours: float=None, active_ms: int=None, certified: bool=None, certified_at_ms: int=None, distance_miles: float=None, end_ms: int=None, start_ms: int=None, trailer_ids: object=None, vehicle_ids: object=None):  # noqa: E501
        """DriverDailyLogResponseDays - a model defined in Swagger

        :param active_hours: The active_hours of this DriverDailyLogResponseDays.  # noqa: E501
        :type active_hours: float
        :param active_ms: The active_ms of this DriverDailyLogResponseDays.  # noqa: E501
        :type active_ms: int
        :param certified: The certified of this DriverDailyLogResponseDays.  # noqa: E501
        :type certified: bool
        :param certified_at_ms: The certified_at_ms of this DriverDailyLogResponseDays.  # noqa: E501
        :type certified_at_ms: int
        :param distance_miles: The distance_miles of this DriverDailyLogResponseDays.  # noqa: E501
        :type distance_miles: float
        :param end_ms: The end_ms of this DriverDailyLogResponseDays.  # noqa: E501
        :type end_ms: int
        :param start_ms: The start_ms of this DriverDailyLogResponseDays.  # noqa: E501
        :type start_ms: int
        :param trailer_ids: The trailer_ids of this DriverDailyLogResponseDays.  # noqa: E501
        :type trailer_ids: object
        :param vehicle_ids: The vehicle_ids of this DriverDailyLogResponseDays.  # noqa: E501
        :type vehicle_ids: object
        """
        self.swagger_types = {
            'active_hours': float,
            'active_ms': int,
            'certified': bool,
            'certified_at_ms': int,
            'distance_miles': float,
            'end_ms': int,
            'start_ms': int,
            'trailer_ids': object,
            'vehicle_ids': object
        }

        self.attribute_map = {
            'active_hours': 'activeHours',
            'active_ms': 'activeMs',
            'certified': 'certified',
            'certified_at_ms': 'certifiedAtMs',
            'distance_miles': 'distanceMiles',
            'end_ms': 'endMs',
            'start_ms': 'startMs',
            'trailer_ids': 'trailerIds',
            'vehicle_ids': 'vehicleIds'
        }

        self._active_hours = active_hours
        self._active_ms = active_ms
        self._certified = certified
        self._certified_at_ms = certified_at_ms
        self._distance_miles = distance_miles
        self._end_ms = end_ms
        self._start_ms = start_ms
        self._trailer_ids = trailer_ids
        self._vehicle_ids = vehicle_ids

    @classmethod
    def from_dict(cls, dikt) -> 'DriverDailyLogResponseDays':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DriverDailyLogResponse_days of this DriverDailyLogResponseDays.  # noqa: E501
        :rtype: DriverDailyLogResponseDays
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_hours(self) -> float:
        """Gets the active_hours of this DriverDailyLogResponseDays.

        Hours spent on duty or driving, rounded to two decimal places.  # noqa: E501

        :return: The active_hours of this DriverDailyLogResponseDays.
        :rtype: float
        """
        return self._active_hours

    @active_hours.setter
    def active_hours(self, active_hours: float):
        """Sets the active_hours of this DriverDailyLogResponseDays.

        Hours spent on duty or driving, rounded to two decimal places.  # noqa: E501

        :param active_hours: The active_hours of this DriverDailyLogResponseDays.
        :type active_hours: float
        """

        self._active_hours = active_hours

    @property
    def active_ms(self) -> int:
        """Gets the active_ms of this DriverDailyLogResponseDays.

        Milliseconds spent on duty or driving.  # noqa: E501

        :return: The active_ms of this DriverDailyLogResponseDays.
        :rtype: int
        """
        return self._active_ms

    @active_ms.setter
    def active_ms(self, active_ms: int):
        """Sets the active_ms of this DriverDailyLogResponseDays.

        Milliseconds spent on duty or driving.  # noqa: E501

        :param active_ms: The active_ms of this DriverDailyLogResponseDays.
        :type active_ms: int
        """

        self._active_ms = active_ms

    @property
    def certified(self) -> bool:
        """Gets the certified of this DriverDailyLogResponseDays.

        Whether this HOS day chart was certified by the driver.  # noqa: E501

        :return: The certified of this DriverDailyLogResponseDays.
        :rtype: bool
        """
        return self._certified

    @certified.setter
    def certified(self, certified: bool):
        """Sets the certified of this DriverDailyLogResponseDays.

        Whether this HOS day chart was certified by the driver.  # noqa: E501

        :param certified: The certified of this DriverDailyLogResponseDays.
        :type certified: bool
        """

        self._certified = certified

    @property
    def certified_at_ms(self) -> int:
        """Gets the certified_at_ms of this DriverDailyLogResponseDays.

        Unix epoch time (in ms) of time when this chart was certified. If this chart is uncertified, 0.  # noqa: E501

        :return: The certified_at_ms of this DriverDailyLogResponseDays.
        :rtype: int
        """
        return self._certified_at_ms

    @certified_at_ms.setter
    def certified_at_ms(self, certified_at_ms: int):
        """Sets the certified_at_ms of this DriverDailyLogResponseDays.

        Unix epoch time (in ms) of time when this chart was certified. If this chart is uncertified, 0.  # noqa: E501

        :param certified_at_ms: The certified_at_ms of this DriverDailyLogResponseDays.
        :type certified_at_ms: int
        """

        self._certified_at_ms = certified_at_ms

    @property
    def distance_miles(self) -> float:
        """Gets the distance_miles of this DriverDailyLogResponseDays.

        Distance driven in miles, rounded to two decimal places.  # noqa: E501

        :return: The distance_miles of this DriverDailyLogResponseDays.
        :rtype: float
        """
        return self._distance_miles

    @distance_miles.setter
    def distance_miles(self, distance_miles: float):
        """Sets the distance_miles of this DriverDailyLogResponseDays.

        Distance driven in miles, rounded to two decimal places.  # noqa: E501

        :param distance_miles: The distance_miles of this DriverDailyLogResponseDays.
        :type distance_miles: float
        """

        self._distance_miles = distance_miles

    @property
    def end_ms(self) -> int:
        """Gets the end_ms of this DriverDailyLogResponseDays.

        End of the HOS day, specified in milliseconds UNIX time.  # noqa: E501

        :return: The end_ms of this DriverDailyLogResponseDays.
        :rtype: int
        """
        return self._end_ms

    @end_ms.setter
    def end_ms(self, end_ms: int):
        """Sets the end_ms of this DriverDailyLogResponseDays.

        End of the HOS day, specified in milliseconds UNIX time.  # noqa: E501

        :param end_ms: The end_ms of this DriverDailyLogResponseDays.
        :type end_ms: int
        """

        self._end_ms = end_ms

    @property
    def start_ms(self) -> int:
        """Gets the start_ms of this DriverDailyLogResponseDays.

        End of the HOS day, specified in milliseconds UNIX time.  # noqa: E501

        :return: The start_ms of this DriverDailyLogResponseDays.
        :rtype: int
        """
        return self._start_ms

    @start_ms.setter
    def start_ms(self, start_ms: int):
        """Sets the start_ms of this DriverDailyLogResponseDays.

        End of the HOS day, specified in milliseconds UNIX time.  # noqa: E501

        :param start_ms: The start_ms of this DriverDailyLogResponseDays.
        :type start_ms: int
        """

        self._start_ms = start_ms

    @property
    def trailer_ids(self) -> object:
        """Gets the trailer_ids of this DriverDailyLogResponseDays.

        List of trailer ID's associated with the driver for the day.  # noqa: E501

        :return: The trailer_ids of this DriverDailyLogResponseDays.
        :rtype: object
        """
        return self._trailer_ids

    @trailer_ids.setter
    def trailer_ids(self, trailer_ids: object):
        """Sets the trailer_ids of this DriverDailyLogResponseDays.

        List of trailer ID's associated with the driver for the day.  # noqa: E501

        :param trailer_ids: The trailer_ids of this DriverDailyLogResponseDays.
        :type trailer_ids: object
        """

        self._trailer_ids = trailer_ids

    @property
    def vehicle_ids(self) -> object:
        """Gets the vehicle_ids of this DriverDailyLogResponseDays.

        List of vehicle ID's associated with the driver for the day.  # noqa: E501

        :return: The vehicle_ids of this DriverDailyLogResponseDays.
        :rtype: object
        """
        return self._vehicle_ids

    @vehicle_ids.setter
    def vehicle_ids(self, vehicle_ids: object):
        """Sets the vehicle_ids of this DriverDailyLogResponseDays.

        List of vehicle ID's associated with the driver for the day.  # noqa: E501

        :param vehicle_ids: The vehicle_ids of this DriverDailyLogResponseDays.
        :type vehicle_ids: object
        """

        self._vehicle_ids = vehicle_ids

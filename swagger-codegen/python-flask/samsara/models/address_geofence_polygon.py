# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from samsara.models.base_model_ import Model
from samsara.models.address_geofence_polygon_vertices import AddressGeofencePolygonVertices  # noqa: F401,E501
from samsara import util


class AddressGeofencePolygon(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, vertices: List[AddressGeofencePolygonVertices]=None):  # noqa: E501
        """AddressGeofencePolygon - a model defined in Swagger

        :param vertices: The vertices of this AddressGeofencePolygon.  # noqa: E501
        :type vertices: List[AddressGeofencePolygonVertices]
        """
        self.swagger_types = {
            'vertices': List[AddressGeofencePolygonVertices]
        }

        self.attribute_map = {
            'vertices': 'vertices'
        }

        self._vertices = vertices

    @classmethod
    def from_dict(cls, dikt) -> 'AddressGeofencePolygon':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AddressGeofence_polygon of this AddressGeofencePolygon.  # noqa: E501
        :rtype: AddressGeofencePolygon
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vertices(self) -> List[AddressGeofencePolygonVertices]:
        """Gets the vertices of this AddressGeofencePolygon.

        The vertices of the polygon geofence. These geofence vertices describe the perimeter of the polygon, and must consist of at least 3 vertices and less than 40.  # noqa: E501

        :return: The vertices of this AddressGeofencePolygon.
        :rtype: List[AddressGeofencePolygonVertices]
        """
        return self._vertices

    @vertices.setter
    def vertices(self, vertices: List[AddressGeofencePolygonVertices]):
        """Sets the vertices of this AddressGeofencePolygon.

        The vertices of the polygon geofence. These geofence vertices describe the perimeter of the polygon, and must consist of at least 3 vertices and less than 40.  # noqa: E501

        :param vertices: The vertices of this AddressGeofencePolygon.
        :type vertices: List[AddressGeofencePolygonVertices]
        """

        self._vertices = vertices

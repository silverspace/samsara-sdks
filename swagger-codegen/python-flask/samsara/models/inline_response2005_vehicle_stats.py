# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from samsara.models.base_model_ import Model
from samsara.models.aux_input_series import AuxInputSeries  # noqa: F401,E501
from samsara.models.engine_state import EngineState  # noqa: F401,E501
from samsara import util


class InlineResponse2005VehicleStats(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, aux_input1: AuxInputSeries=None, aux_input2: AuxInputSeries=None, engine_state: List[EngineState]=None, vehicle_id: int=None):  # noqa: E501
        """InlineResponse2005VehicleStats - a model defined in Swagger

        :param aux_input1: The aux_input1 of this InlineResponse2005VehicleStats.  # noqa: E501
        :type aux_input1: AuxInputSeries
        :param aux_input2: The aux_input2 of this InlineResponse2005VehicleStats.  # noqa: E501
        :type aux_input2: AuxInputSeries
        :param engine_state: The engine_state of this InlineResponse2005VehicleStats.  # noqa: E501
        :type engine_state: List[EngineState]
        :param vehicle_id: The vehicle_id of this InlineResponse2005VehicleStats.  # noqa: E501
        :type vehicle_id: int
        """
        self.swagger_types = {
            'aux_input1': AuxInputSeries,
            'aux_input2': AuxInputSeries,
            'engine_state': List[EngineState],
            'vehicle_id': int
        }

        self.attribute_map = {
            'aux_input1': 'auxInput1',
            'aux_input2': 'auxInput2',
            'engine_state': 'engineState',
            'vehicle_id': 'vehicleId'
        }

        self._aux_input1 = aux_input1
        self._aux_input2 = aux_input2
        self._engine_state = engine_state
        self._vehicle_id = vehicle_id

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2005VehicleStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_5_vehicleStats of this InlineResponse2005VehicleStats.  # noqa: E501
        :rtype: InlineResponse2005VehicleStats
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aux_input1(self) -> AuxInputSeries:
        """Gets the aux_input1 of this InlineResponse2005VehicleStats.


        :return: The aux_input1 of this InlineResponse2005VehicleStats.
        :rtype: AuxInputSeries
        """
        return self._aux_input1

    @aux_input1.setter
    def aux_input1(self, aux_input1: AuxInputSeries):
        """Sets the aux_input1 of this InlineResponse2005VehicleStats.


        :param aux_input1: The aux_input1 of this InlineResponse2005VehicleStats.
        :type aux_input1: AuxInputSeries
        """

        self._aux_input1 = aux_input1

    @property
    def aux_input2(self) -> AuxInputSeries:
        """Gets the aux_input2 of this InlineResponse2005VehicleStats.


        :return: The aux_input2 of this InlineResponse2005VehicleStats.
        :rtype: AuxInputSeries
        """
        return self._aux_input2

    @aux_input2.setter
    def aux_input2(self, aux_input2: AuxInputSeries):
        """Sets the aux_input2 of this InlineResponse2005VehicleStats.


        :param aux_input2: The aux_input2 of this InlineResponse2005VehicleStats.
        :type aux_input2: AuxInputSeries
        """

        self._aux_input2 = aux_input2

    @property
    def engine_state(self) -> List[EngineState]:
        """Gets the engine_state of this InlineResponse2005VehicleStats.


        :return: The engine_state of this InlineResponse2005VehicleStats.
        :rtype: List[EngineState]
        """
        return self._engine_state

    @engine_state.setter
    def engine_state(self, engine_state: List[EngineState]):
        """Sets the engine_state of this InlineResponse2005VehicleStats.


        :param engine_state: The engine_state of this InlineResponse2005VehicleStats.
        :type engine_state: List[EngineState]
        """

        self._engine_state = engine_state

    @property
    def vehicle_id(self) -> int:
        """Gets the vehicle_id of this InlineResponse2005VehicleStats.

        ID of the vehicle.  # noqa: E501

        :return: The vehicle_id of this InlineResponse2005VehicleStats.
        :rtype: int
        """
        return self._vehicle_id

    @vehicle_id.setter
    def vehicle_id(self, vehicle_id: int):
        """Sets the vehicle_id of this InlineResponse2005VehicleStats.

        ID of the vehicle.  # noqa: E501

        :param vehicle_id: The vehicle_id of this InlineResponse2005VehicleStats.
        :type vehicle_id: int
        """
        if vehicle_id is None:
            raise ValueError("Invalid value for `vehicle_id`, must not be `None`")  # noqa: E501

        self._vehicle_id = vehicle_id

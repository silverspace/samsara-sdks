# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from samsara.models.base_model_ import Model
from samsara import util


class ReactivateDriverParam(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, reactivate: bool=None):  # noqa: E501
        """ReactivateDriverParam - a model defined in Swagger

        :param reactivate: The reactivate of this ReactivateDriverParam.  # noqa: E501
        :type reactivate: bool
        """
        self.swagger_types = {
            'reactivate': bool
        }

        self.attribute_map = {
            'reactivate': 'reactivate'
        }

        self._reactivate = reactivate

    @classmethod
    def from_dict(cls, dikt) -> 'ReactivateDriverParam':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The reactivateDriverParam of this ReactivateDriverParam.  # noqa: E501
        :rtype: ReactivateDriverParam
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reactivate(self) -> bool:
        """Gets the reactivate of this ReactivateDriverParam.

        True indicates that this driver should be reactivated.  # noqa: E501

        :return: The reactivate of this ReactivateDriverParam.
        :rtype: bool
        """
        return self._reactivate

    @reactivate.setter
    def reactivate(self, reactivate: bool):
        """Sets the reactivate of this ReactivateDriverParam.

        True indicates that this driver should be reactivated.  # noqa: E501

        :param reactivate: The reactivate of this ReactivateDriverParam.
        :type reactivate: bool
        """
        if reactivate is None:
            raise ValueError("Invalid value for `reactivate`, must not be `None`")  # noqa: E501

        self._reactivate = reactivate

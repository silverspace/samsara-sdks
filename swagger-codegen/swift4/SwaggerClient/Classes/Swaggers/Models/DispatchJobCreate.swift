//
// DispatchJobCreate.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct DispatchJobCreate: Codable {

    /** The address of the job destination, as it would be recognized if provided to maps.google.com. Optional if a valid destination address ID is provided. */
    public var destinationAddress: String?
    /** ID of the job destination associated with an address book entry. Optional if valid values are provided for destination address or latitude/longitude. If a valid destination address ID is provided, address/latitude/longitude will be used from the address book entry. Name of the address book entry will only be used if the destination name is not provided. */
    public var destinationAddressId: Int64?
    /** Latitude of the destination in decimal degrees. Optional if a valid destination address ID is provided. */
    public var destinationLat: Double?
    /** Longitude of the destination in decimal degrees. Optional if a valid destination address ID is provided. */
    public var destinationLng: Double?
    /** The name of the job destination. If provided, it will take precedence over the name of the address book entry. */
    public var destinationName: String?
    /** Notes regarding the details of this job. */
    public var notes: String?
    /** The time at which the assigned driver is scheduled to arrive at the job destination. */
    public var scheduledArrivalTimeMs: Int64
    /** The time at which the assigned driver is scheduled to depart from the job destination. */
    public var scheduledDepartureTimeMs: Int64?

    public init(destinationAddress: String?, destinationAddressId: Int64?, destinationLat: Double?, destinationLng: Double?, destinationName: String?, notes: String?, scheduledArrivalTimeMs: Int64, scheduledDepartureTimeMs: Int64?) {
        self.destinationAddress = destinationAddress
        self.destinationAddressId = destinationAddressId
        self.destinationLat = destinationLat
        self.destinationLng = destinationLng
        self.destinationName = destinationName
        self.notes = notes
        self.scheduledArrivalTimeMs = scheduledArrivalTimeMs
        self.scheduledDepartureTimeMs = scheduledDepartureTimeMs
    }

    public enum CodingKeys: String, CodingKey { 
        case destinationAddress = "destination_address"
        case destinationAddressId = "destination_address_id"
        case destinationLat = "destination_lat"
        case destinationLng = "destination_lng"
        case destinationName = "destination_name"
        case notes
        case scheduledArrivalTimeMs = "scheduled_arrival_time_ms"
        case scheduledDepartureTimeMs = "scheduled_departure_time_ms"
    }


}


//
// DispatchRoute.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct DispatchRoute: Codable {

    /** The time in Unix epoch milliseconds that the route actually ended. */
    public var actualEndMs: Int64?
    /** The time in Unix epoch milliseconds that the route actually started. */
    public var actualStartMs: Int64?
    /** ID of the driver assigned to the dispatch route. Note that driver_id and vehicle_id are mutually exclusive. If neither is specified, then the route is unassigned. */
    public var driverId: Int64?
    /** ID of the group if the organization has multiple groups (optional). */
    public var groupId: Int64?
    /** Descriptive name of this route. */
    public var name: String
    /** The time in Unix epoch milliseconds that the last job in the route is scheduled to end. */
    public var scheduledEndMs: Int64
    /** The distance expected to be traveled for this route in meters. */
    public var scheduledMeters: Int64?
    /** The time in Unix epoch milliseconds that the route is scheduled to start. */
    public var scheduledStartMs: Int64
    /** The address of the route&#39;s starting location, as it would be recognized if provided to maps.google.com. Optional if a valid start location address ID is provided. */
    public var startLocationAddress: String?
    /** ID of the start location associated with an address book entry. Optional if valid values are provided for start location address or latitude/longitude. If a valid start location address ID is provided, address/latitude/longitude will be used from the address book entry. Name of the address book entry will only be used if the start location name is not provided. */
    public var startLocationAddressId: Int64?
    /** Latitude of the start location in decimal degrees. Optional if a valid start location address ID is provided. */
    public var startLocationLat: Double?
    /** Longitude of the start location in decimal degrees. Optional if a valid start location address ID is provided. */
    public var startLocationLng: Double?
    /** The name of the route&#39;s starting location. If provided, it will take precedence over the name of the address book entry. */
    public var startLocationName: String?
    /** ID of the trailer assigned to the dispatch route. Note that trailers can only be assigned to routes that have a Vehicle or Driver assigned to them. */
    public var trailerId: Int64?
    /** ID of the vehicle assigned to the dispatch route. Note that vehicle_id and driver_id are mutually exclusive. If neither is specified, then the route is unassigned. */
    public var vehicleId: Int64?
    /** The dispatch jobs associated with this route. */
    public var dispatchJobs: [DispatchJob]
    /** ID of the Samsara dispatch route. */
    public var _id: Int64

    public init(actualEndMs: Int64?, actualStartMs: Int64?, driverId: Int64?, groupId: Int64?, name: String, scheduledEndMs: Int64, scheduledMeters: Int64?, scheduledStartMs: Int64, startLocationAddress: String?, startLocationAddressId: Int64?, startLocationLat: Double?, startLocationLng: Double?, startLocationName: String?, trailerId: Int64?, vehicleId: Int64?, dispatchJobs: [DispatchJob], _id: Int64) {
        self.actualEndMs = actualEndMs
        self.actualStartMs = actualStartMs
        self.driverId = driverId
        self.groupId = groupId
        self.name = name
        self.scheduledEndMs = scheduledEndMs
        self.scheduledMeters = scheduledMeters
        self.scheduledStartMs = scheduledStartMs
        self.startLocationAddress = startLocationAddress
        self.startLocationAddressId = startLocationAddressId
        self.startLocationLat = startLocationLat
        self.startLocationLng = startLocationLng
        self.startLocationName = startLocationName
        self.trailerId = trailerId
        self.vehicleId = vehicleId
        self.dispatchJobs = dispatchJobs
        self._id = _id
    }

    public enum CodingKeys: String, CodingKey { 
        case actualEndMs = "actual_end_ms"
        case actualStartMs = "actual_start_ms"
        case driverId = "driver_id"
        case groupId = "group_id"
        case name
        case scheduledEndMs = "scheduled_end_ms"
        case scheduledMeters = "scheduled_meters"
        case scheduledStartMs = "scheduled_start_ms"
        case startLocationAddress = "start_location_address"
        case startLocationAddressId = "start_location_address_id"
        case startLocationLat = "start_location_lat"
        case startLocationLng = "start_location_lng"
        case startLocationName = "start_location_name"
        case trailerId = "trailer_id"
        case vehicleId = "vehicle_id"
        case dispatchJobs = "dispatch_jobs"
        case _id = "id"
    }


}


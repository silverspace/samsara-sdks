//
// UsersAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class UsersAPI {
    /**
     /users/{userId:[0-9]+}
     
     - parameter accessToken: (query) Samsara API access token. 
     - parameter userId: (path) ID of the user. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteUserById(accessToken: String, userId: Int64, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteUserByIdWithRequestBuilder(accessToken: accessToken, userId: userId).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     /users/{userId:[0-9]+}
     - DELETE /users/{userId}
     - Remove a user from the organization.
     
     - parameter accessToken: (query) Samsara API access token. 
     - parameter userId: (path) ID of the user. 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteUserByIdWithRequestBuilder(accessToken: String, userId: Int64) -> RequestBuilder<Void> {
        var path = "/users/{userId}"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "access_token": accessToken
        ])

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     /users/{userId:[0-9]+}
     
     - parameter accessToken: (query) Samsara API access token. 
     - parameter userId: (path) ID of the user. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUserById(accessToken: String, userId: Int64, completion: @escaping ((_ data: User?,_ error: Error?) -> Void)) {
        getUserByIdWithRequestBuilder(accessToken: accessToken, userId: userId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     /users/{userId:[0-9]+}
     - GET /users/{userId}
     - Get a user.
     - examples: [{example="", contentType=application/json}]
     
     - parameter accessToken: (query) Samsara API access token. 
     - parameter userId: (path) ID of the user. 

     - returns: RequestBuilder<User> 
     */
    open class func getUserByIdWithRequestBuilder(accessToken: String, userId: Int64) -> RequestBuilder<User> {
        var path = "/users/{userId}"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "access_token": accessToken
        ])

        let requestBuilder: RequestBuilder<User>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     /user_roles
     
     - parameter accessToken: (query) Samsara API access token. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listUserRoles(accessToken: String, completion: @escaping ((_ data: [UserRole]?,_ error: Error?) -> Void)) {
        listUserRolesWithRequestBuilder(accessToken: accessToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     /user_roles
     - GET /user_roles
     - Get all roles in the organization.
     - examples: [{example=[ {
  "id" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
  "name" : "Full Admin"
}, {
  "id" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
  "name" : "Full Admin"
} ], contentType=application/json}]
     
     - parameter accessToken: (query) Samsara API access token. 

     - returns: RequestBuilder<[UserRole]> 
     */
    open class func listUserRolesWithRequestBuilder(accessToken: String) -> RequestBuilder<[UserRole]> {
        let path = "/user_roles"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "access_token": accessToken
        ])

        let requestBuilder: RequestBuilder<[UserRole]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     /users
     
     - parameter accessToken: (query) Samsara API access token. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listUsers(accessToken: String, completion: @escaping ((_ data: [User]?,_ error: Error?) -> Void)) {
        listUsersWithRequestBuilder(accessToken: accessToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     /users
     - GET /users
     - List all users in the organization.
     - examples: [{example=[ "", "" ], contentType=application/json}]
     
     - parameter accessToken: (query) Samsara API access token. 

     - returns: RequestBuilder<[User]> 
     */
    open class func listUsersWithRequestBuilder(accessToken: String) -> RequestBuilder<[User]> {
        let path = "/users"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "access_token": accessToken
        ])

        let requestBuilder: RequestBuilder<[User]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
